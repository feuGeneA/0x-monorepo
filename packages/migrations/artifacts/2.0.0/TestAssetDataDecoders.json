{
	"schemaVersion": "2.0.0",
	"contractName": "TestAssetDataDecoders",
	"compilerOutput": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"name": "target",
						"type": "address"
					}
				],
				"name": "addAuthorizedAddress",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"name": "authorities",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "assetData",
						"type": "bytes[]"
					},
					{
						"name": "from",
						"type": "address[]"
					},
					{
						"name": "to",
						"type": "address[]"
					},
					{
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"name": "batchTransferFrom",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "target",
						"type": "address"
					}
				],
				"name": "removeAuthorizedAddress",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "assetData",
						"type": "bytes"
					}
				],
				"name": "publicDecodeERC721Data",
				"outputs": [
					{
						"name": "proxyId",
						"type": "uint8"
					},
					{
						"name": "token",
						"type": "address"
					},
					{
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"name": "receiverData",
						"type": "bytes"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "target",
						"type": "address"
					},
					{
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "removeAuthorizedAddressAtIndex",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "assetData",
						"type": "bytes"
					},
					{
						"name": "from",
						"type": "address"
					},
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getProxyId",
				"outputs": [
					{
						"name": "",
						"type": "uint8"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"name": "authorized",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "assetData",
						"type": "bytes"
					}
				],
				"name": "publicDecodeERC20Data",
				"outputs": [
					{
						"name": "proxyId",
						"type": "uint8"
					},
					{
						"name": "token",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getAuthorizedAddresses",
				"outputs": [
					{
						"name": "",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "target",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "caller",
						"type": "address"
					}
				],
				"name": "AuthorizedAddressAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "target",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "caller",
						"type": "address"
					}
				],
				"name": "AuthorizedAddressRemoved",
				"type": "event"
			}
		],
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x608060405260008054600160a060020a031916331790556117dd806100256000396000f3006080604052600436106100ab5763ffffffff60e060020a60003504166342f1181e81146100b0578063494503d4146100d2578063563c875d14610108578063707129391461012857806372c2f527146101485780638da5cb5b146101785780639ad267441461018d578063a85e59e4146101ad578063ae25532e146101cd578063b9181611146101ef578063bd27c22d1461021c578063d39de6e91461024a578063f2fde38b1461026c575b600080fd5b3480156100bc57600080fd5b506100d06100cb36600461126f565b61028c565b005b3480156100de57600080fd5b506100f26100ed36600461143b565b6103db565b6040516100ff919061155e565b60405180910390f35b34801561011457600080fd5b506100d06101233660046112cf565b610403565b34801561013457600080fd5b506100d061014336600461126f565b6104fb565b34801561015457600080fd5b50610168610163366004611407565b6106bb565b6040516100ff9493929190611641565b34801561018457600080fd5b506100f26106da565b34801561019957600080fd5b506100d06101a8366004611295565b6106e9565b3480156101b957600080fd5b506100d06101c836600461138b565b6108c1565b3480156101d957600080fd5b506101e2610974565b6040516100ff9190611618565b3480156101fb57600080fd5b5061020f61020a36600461126f565b61097a565b6040516100ff91906115e9565b34801561022857600080fd5b5061023c610237366004611407565b61098f565b6040516100ff929190611626565b34801561025657600080fd5b5061025f6109a5565b6040516100ff91906115d8565b34801561027857600080fd5b506100d061028736600461126f565b610a07565b600054600160a060020a031633146102c25760405160e560020a62461bcd0281526004016102b990611608565b60405180910390fd5b600160a060020a038116600090815260016020908152604091829020548251606081018452602681527f546172676574206d757374206e6f7420616c726561647920626520617574686f9281019290925260d160020a653934bd32b21702928201929092529060ff161561034c5760405160e560020a62461bcd0281526004016102b991906115f7565b50600160a060020a0381166000818152600160208190526040808320805460ff19168317905560028054928301815583527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9091018054600160a060020a03191684179055513392917f3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c91a350565b60028054829081106103e957fe5b600091825260209091200154600160a060020a0316905081565b336000908152600160209081526040808320548151606081018352602a81526000805160206117448339815191529381019390935260b160020a6934b99036b2ba3437b217029183019190915260ff1615156104755760405160e560020a62461bcd0281526004016102b991906115f7565b50600090505b84518110156104f4576104ec858281518110151561049557fe5b9060200190602002015185838151811015156104ad57fe5b9060200190602002015185848151811015156104c557fe5b9060200190602002015185858151811015156104dd57fe5b90602001906020020151610a62565b60010161047b565b5050505050565b60008054600160a060020a031633146105295760405160e560020a62461bcd0281526004016102b990611608565b600160a060020a038216600090815260016020908152604091829020548251606081018452602281527f5461726765742061646472657373206d75737420626520617574686f72697a659281019290925260f160020a61321702928201929092529060ff1615156105b05760405160e560020a62461bcd0281526004016102b991906115f7565b5050600160a060020a0381166000908152600160205260408120805460ff191690555b6002548110156106935781600160a060020a03166002828154811015156105f657fe5b600091825260209091200154600160a060020a0316141561068b5760028054600019810190811061062357fe5b60009182526020909120015460028054600160a060020a03909216918390811061064957fe5b60009182526020909120018054600160a060020a031916600160a060020a03929092169190911790556002805460001901906106859082611037565b50610693565b6001016105d3565b6040513390600160a060020a0384169060008051602061176483398151915290600090a35050565b600080600060606106cb85610c37565b92989197509550909350915050565b600054600160a060020a031681565b60025460408051606081018252602781527f53706563696669656420617272617920696e646578206973206f7574206f6620602082015260c960020a663137bab732399702918101919091529082106107585760405160e560020a62461bcd0281526004016102b991906115f7565b5081600160a060020a031660028281548110151561077257fe5b6000918252602091829020015460408051606081018252603581527f4164647265737320666f756e6420617420696e64657820646f6573206e6f742093810193909352605960020a7436b0ba31b4103a30b933b2ba1030b2323932b9b99702908301529091600160a060020a03909116146108035760405160e560020a62461bcd0281526004016102b991906115f7565b50600160a060020a0382166000908152600160205260409020805460ff1916905560028054600019810190811061083657fe5b60009182526020909120015460028054600160a060020a03909216918390811061085c57fe5b60009182526020909120018054600160a060020a031916600160a060020a03929092169190911790556002805460001901906108989082611037565b506040513390600160a060020a0384169060008051602061176483398151915290600090a35050565b33600090815260016020908152604091829020548251606081018452602a81526000805160206117448339815191529281019290925260b160020a6934b99036b2ba3437b21702928201929092529060ff1615156109355760405160e560020a62461bcd0281526004016102b991906115f7565b506104f485858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050848484610a62565b60025b90565b60016020526000908152604090205460ff1681565b60008061099b83610d01565b9092509050915091565b606060028054806020026020016040519081016040528092919081815260200182805480156109fd57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116109df575b5050505050905090565b600054600160a060020a03163314610a345760405160e560020a62461bcd0281526004016102b990611608565b600160a060020a03811615610a5f5760008054600160a060020a031916600160a060020a0383161790555b50565b60008060006060610a7288610c37565b60408051606081018252603281527f50726f787920696420696e206d6574616461746120646f6573206e6f74206d616020820152607160020a713a31b4103a3434b990383937bc3c9034b21702918101919091529397509195509350915060ff8516600214610af75760405160e560020a62461bcd0281526004016102b991906115f7565b5060408051808201909152601d81527f5472616e7366657220616d6f756e74206d75737420657175616c20312e000000602082015260018614610b505760405160e560020a62461bcd0281526004016102b991906115f7565b50600081511115610bc75760405160e160020a635c46a7ef028152600160a060020a0384169063b88d4fde90610b90908a908a9087908790600401611594565b600060405180830381600087803b158015610baa57600080fd5b505af1158015610bbe573d6000803e3d6000fd5b50505050610c2d565b60405160e060020a6323b872dd028152600160a060020a038416906323b872dd90610bfa908a908a90879060040161156c565b600060405180830381600087803b158015610c1457600080fd5b505af1158015610c28573d6000803e3d6000fd5b505050505b5050505050505050565b60008060006060603585511015606060405190810160405280602d81526020016000805160206117248339815191528152602001609960020a6c1030ba103632b0b9ba101a999702815250901515610ca55760405160e560020a62461bcd0281526004016102b991906115f7565b50846000815181101515610cb557fe5b016020015160f860020a908190048102049350610cd3856001610d96565b9250610ce0856015610e1c565b9150603585511115610cfa57610cf7856035610e2f565b90505b9193509193565b600080825160151460606040519081016040528060248152602001600080516020611724833981519152815260200160e160020a631019189702815250901515610d615760405160e560020a62461bcd0281526004016102b991906115f7565b50826000815181101515610d7157fe5b016020015160f860020a908190048102049150610d8f836001610d96565b9050915091565b60008160140183511015606060405190810160405280602b8152602001600080516020611784833981519152815260200160a960020a6a38bab0b6103a379019181702815250901515610dff5760405160e560020a62461bcd0281526004016102b991906115f7565b50506014818301810151910190600160a060020a03165b92915050565b6000610e288383610f07565b9392505050565b60606000610e3d8484610e1c565b905060208301925080830184511015606060405190810160405280602b8152602001600080516020611784833981519152815260200160a960020a6a38bab0b6103a379019991702815250901515610eab5760405160e560020a62461bcd0281526004016102b991906115f7565b50806040519080825280601f01601f191660200182016040528015610eda578160200160208202803883390190505b509150610f00610ee983610977565b60200184610ef687610977565b0160200183610f7a565b5092915050565b60008160200183511015606060405190810160405280602b8152602001600080516020611784833981519152815260200160a960020a6a38bab0b6103a379019991702815250901515610f705760405160e560020a62461bcd0281526004016102b991906115f7565b5050016020015190565b6020811015610fa4576001816020036101000a038019835116818551168082178652505050611032565b82821415610fb157611032565b82821115610ff75760208104602082039150818301828501815160005b84811015610fec578651885260209788019790960195600101610fce565b509052506110329050565b60208104602082039150818301828501845160005b8481101561102b5783518352601f19938401939092019160010161100c565b5086525050505b505050565b8154818355818111156110325760008381526020902061103291810190830161097791905b80821115611070576000815560010161105c565b5090565b6000610e2882356116c6565b6000601f8201831361109157600080fd5b81356110a461109f82611675565b61164f565b915081818352602084019350602081019050838560208402820111156110c957600080fd5b60005b838110156110f557816110df8882611074565b84525060209283019291909101906001016110cc565b5050505092915050565b6000601f8201831361111057600080fd5b813561111e61109f82611675565b81815260209384019390925082018360005b838110156110f557813586016111468882611214565b8452506020928301929190910190600101611130565b6000601f8201831361116d57600080fd5b813561117b61109f82611675565b915081818352602084019350602081019050838560208402820111156111a057600080fd5b60005b838110156110f557816111b68882611263565b84525060209283019291909101906001016111a3565b600080601f830184136111de57600080fd5b5081356001604060020a038111156111f557600080fd5b60208301915083600182028301111561120d57600080fd5b9250929050565b6000601f8201831361122557600080fd5b813561123361109f82611695565b9150808252602083016020830185838301111561124f57600080fd5b61125a8382846116dd565b50505092915050565b6000610e288235610977565b60006020828403121561128157600080fd5b600061128d8484611074565b949350505050565b600080604083850312156112a857600080fd5b60006112b48585611074565b92505060206112c585828601611263565b9150509250929050565b600080600080608085870312156112e557600080fd5b84356001604060020a038111156112fb57600080fd5b611307878288016110ff565b94505060208501356001604060020a0381111561132357600080fd5b61132f87828801611080565b93505060408501356001604060020a0381111561134b57600080fd5b61135787828801611080565b92505060608501356001604060020a0381111561137357600080fd5b61137f8782880161115c565b91505092959194509250565b6000806000806000608086880312156113a357600080fd5b85356001604060020a038111156113b957600080fd5b6113c5888289016111cc565b955095505060206113d888828901611074565b93505060406113e988828901611074565b92505060606113fa88828901611263565b9150509295509295909350565b60006020828403121561141957600080fd5b81356001604060020a0381111561142f57600080fd5b61128d84828501611214565b60006020828403121561144d57600080fd5b600061128d8484611263565b611462816116c6565b82525050565b6000611473826116c2565b808452602084019350611485836116bc565b60005b828110156114b55761149b868351611459565b6114a4826116bc565b602096909601959150600101611488565b5093949350505050565b611462816116d2565b60006114d3826116c2565b8084526114e78160208601602086016116e9565b6114f081611719565b9093016020019392505050565b603381527f4f6e6c7920636f6e7472616374206f776e657220697320616c6c6f77656420746020820152606960020a72379031b0b636103a3434b99036b2ba3437b21702604082015260600190565b61146281610977565b611462816116d7565b60208101610e168284611459565b6060810161157a8286611459565b6115876020830185611459565b61128d604083018461154c565b608081016115a28287611459565b6115af6020830186611459565b6115bc604083018561154c565b81810360608301526115ce81846114c8565b9695505050505050565b60208082528101610e288184611468565b60208101610e1682846114bf565b60208082528101610e2881846114c8565b60208082528101610e16816114fd565b60208101610e168284611555565b604081016116348285611555565b610e286020830184611459565b608081016115a28287611555565b6040518181016001604060020a038111828210171561166d57600080fd5b604052919050565b60006001604060020a0382111561168b57600080fd5b5060209081020190565b60006001604060020a038211156116ab57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b600160a060020a031690565b151590565b60ff1690565b82818337506000910152565b60005b838110156117045781810151838201526020016116ec565b83811115611713576000848401525b50505050565b601f01601f191690560041737365742064617461206d75737420686176652061206c656e677468206f6653656e646572206e6f7420617574686f72697a656420746f2063616c6c2074681f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b04c656e677468206d7573742062652067726561746572207468616e206f722065a265627a7a72305820946d64f4dcdf791fa4e2cf2fa4962a12a2ba714fda3f5b8771658c9f4806a1346c6578706572696d656e74616cf50037",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x17DD DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x42F1181E DUP2 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x494503D4 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x563C875D EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x70712939 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x72C2F527 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x9AD26744 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xA85E59E4 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xAE25532E EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xBD27C22D EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xD39DE6E9 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0x28C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x143B JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH2 0x163 CALLDATASIZE PUSH1 0x4 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x6DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1295 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x138B JUMP JUMPDEST PUSH2 0x8C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x1618 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23C PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP3 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x15D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2C2 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP1 PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH32 0x546172676574206D757374206E6F7420616C726561647920626520617574686F SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xD1 PUSH1 0x2 EXP PUSH6 0x3934BD32B217 MUL SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x34C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x3147867C59D17E8FA9D522465651D44AAE0A9E38F902F3475B97E58072F0ED4C SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x3E9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1744 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xB1 PUSH1 0x2 EXP PUSH10 0x34B99036B2BA3437B217 MUL SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x475 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4F4 JUMPI PUSH2 0x4EC DUP6 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x495 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4C5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4DD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x47B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x529 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP1 PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH32 0x5461726765742061646472657373206D75737420626520617574686F72697A65 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xF1 PUSH1 0x2 EXP PUSH2 0x3217 MUL SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x693 JUMPI DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x5F6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x68B JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x623 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x649 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x685 SWAP1 DUP3 PUSH2 0x1037 JUMP JUMPDEST POP PUSH2 0x693 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1764 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x6CB DUP6 PUSH2 0xC37 JUMP JUMPDEST SWAP3 SWAP9 SWAP2 SWAP8 POP SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH32 0x53706563696669656420617272617920696E646578206973206F7574206F6620 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC9 PUSH1 0x2 EXP PUSH7 0x3137BAB7323997 MUL SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 LT PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x772 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH32 0x4164647265737320666F756E6420617420696E64657820646F6573206E6F7420 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x59 PUSH1 0x2 EXP PUSH21 0x36B0BA31B4103A30B933B2BA1030B2323932B9B997 MUL SWAP1 DUP4 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND EQ PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x836 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x85C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x898 SWAP1 DUP3 PUSH2 0x1037 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1764 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1744 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xB1 PUSH1 0x2 EXP PUSH10 0x34B99036B2BA3437B217 MUL SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP PUSH2 0x4F4 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP DUP5 DUP5 DUP5 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x2 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x99B DUP4 PUSH2 0xD01 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x9FD JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9DF JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP1 PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0xA5F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xA72 DUP9 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH32 0x50726F787920696420696E206D6574616461746120646F6573206E6F74206D61 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x71 PUSH1 0x2 EXP PUSH18 0x3A31B4103A3434B990383937BC3C9034B217 MUL SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH1 0xFF DUP6 AND PUSH1 0x2 EQ PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D75737420657175616C20312E000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP7 EQ PUSH2 0xB50 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0x5C46A7EF MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH4 0xB88D4FDE SWAP1 PUSH2 0xB90 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1594 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBBE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xC2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x23B872DD MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xBFA SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x156C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x35 DUP6 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1724 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x99 PUSH1 0x2 EXP PUSH13 0x1030BA103632B0B9BA101A9997 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xCB5 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0xCD3 DUP6 PUSH1 0x1 PUSH2 0xD96 JUMP JUMPDEST SWAP3 POP PUSH2 0xCE0 DUP6 PUSH1 0x15 PUSH2 0xE1C JUMP JUMPDEST SWAP2 POP PUSH1 0x35 DUP6 MLOAD GT ISZERO PUSH2 0xCFA JUMPI PUSH2 0xCF7 DUP6 PUSH1 0x35 PUSH2 0xE2F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x15 EQ PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1724 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0x10191897 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xD71 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP2 POP PUSH2 0xD8F DUP4 PUSH1 0x1 PUSH2 0xD96 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x14 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1784 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790191817 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xDFF JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP POP PUSH1 0x14 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE28 DUP4 DUP4 PUSH2 0xF07 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xE3D DUP5 DUP5 PUSH2 0xE1C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP4 ADD SWAP3 POP DUP1 DUP4 ADD DUP5 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1784 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP DUP1 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEDA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0xF00 PUSH2 0xEE9 DUP4 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x20 ADD DUP5 PUSH2 0xEF6 DUP8 PUSH2 0x977 JUMP JUMPDEST ADD PUSH1 0x20 ADD DUP4 PUSH2 0xF7A JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1784 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xF70 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFA4 JUMPI PUSH1 0x1 DUP2 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP4 MLOAD AND DUP2 DUP6 MLOAD AND DUP1 DUP3 OR DUP7 MSTORE POP POP POP PUSH2 0x1032 JUMP JUMPDEST DUP3 DUP3 EQ ISZERO PUSH2 0xFB1 JUMPI PUSH2 0x1032 JUMP JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0xFF7 JUMPI PUSH1 0x20 DUP2 DIV PUSH1 0x20 DUP3 SUB SWAP2 POP DUP2 DUP4 ADD DUP3 DUP6 ADD DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xFEC JUMPI DUP7 MLOAD DUP9 MSTORE PUSH1 0x20 SWAP8 DUP9 ADD SWAP8 SWAP1 SWAP7 ADD SWAP6 PUSH1 0x1 ADD PUSH2 0xFCE JUMP JUMPDEST POP SWAP1 MSTORE POP PUSH2 0x1032 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 DIV PUSH1 0x20 DUP3 SUB SWAP2 POP DUP2 DUP4 ADD DUP3 DUP6 ADD DUP5 MLOAD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x102B JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x1F NOT SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x100C JUMP JUMPDEST POP DUP7 MSTORE POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x1032 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0x1032 SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0x977 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1070 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x105C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE28 DUP3 CALLDATALOAD PUSH2 0x16C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x1091 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10A4 PUSH2 0x109F DUP3 PUSH2 0x1675 JUMP JUMPDEST PUSH2 0x164F JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x10C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10F5 JUMPI DUP2 PUSH2 0x10DF DUP9 DUP3 PUSH2 0x1074 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10CC JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x1110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x111E PUSH2 0x109F DUP3 PUSH2 0x1675 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10F5 JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0x1146 DUP9 DUP3 PUSH2 0x1214 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x116D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x117B PUSH2 0x109F DUP3 PUSH2 0x1675 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x11A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10F5 JUMPI DUP2 PUSH2 0x11B6 DUP9 DUP3 PUSH2 0x1263 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x11F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x120D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x1225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1233 PUSH2 0x109F DUP3 PUSH2 0x1695 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x124F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x125A DUP4 DUP3 DUP5 PUSH2 0x16DD JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE28 DUP3 CALLDATALOAD PUSH2 0x977 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x128D DUP5 DUP5 PUSH2 0x1074 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12B4 DUP6 DUP6 PUSH2 0x1074 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x12FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1307 DUP8 DUP3 DUP9 ADD PUSH2 0x10FF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x1323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132F DUP8 DUP3 DUP9 ADD PUSH2 0x1080 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1357 DUP8 DUP3 DUP9 ADD PUSH2 0x1080 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x1373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x137F DUP8 DUP3 DUP9 ADD PUSH2 0x115C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x13B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13C5 DUP9 DUP3 DUP10 ADD PUSH2 0x11CC JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x13D8 DUP9 DUP3 DUP10 ADD PUSH2 0x1074 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x13E9 DUP9 DUP3 DUP10 ADD PUSH2 0x1074 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x13FA DUP9 DUP3 DUP10 ADD PUSH2 0x1263 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x142F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128D DUP5 DUP3 DUP6 ADD PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x128D DUP5 DUP5 PUSH2 0x1263 JUMP JUMPDEST PUSH2 0x1462 DUP2 PUSH2 0x16C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1473 DUP3 PUSH2 0x16C2 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0x1485 DUP4 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x14B5 JUMPI PUSH2 0x149B DUP7 DUP4 MLOAD PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x14A4 DUP3 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x20 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1488 JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1462 DUP2 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D3 DUP3 PUSH2 0x16C2 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x14E7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x14F0 DUP2 PUSH2 0x1719 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x33 DUP2 MSTORE PUSH32 0x4F6E6C7920636F6E7472616374206F776E657220697320616C6C6F7765642074 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x69 PUSH1 0x2 EXP PUSH19 0x379031B0B636103A3434B99036B2BA3437B217 MUL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1462 DUP2 PUSH2 0x977 JUMP JUMPDEST PUSH2 0x1462 DUP2 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xE16 DUP3 DUP5 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x157A DUP3 DUP7 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x1587 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x128D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x15A2 DUP3 DUP8 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x15AF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x15BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x154C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x15CE DUP2 DUP5 PUSH2 0x14C8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xE28 DUP2 DUP5 PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xE16 DUP3 DUP5 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xE28 DUP2 DUP5 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xE16 DUP2 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xE16 DUP3 DUP5 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x1634 DUP3 DUP6 PUSH2 0x1555 JUMP JUMPDEST PUSH2 0xE28 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x15A2 DUP3 DUP8 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x166D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x168B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x16AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1704 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16EC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1713 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP COINBASE PUSH20 0x7365742064617461206D75737420686176652061 KECCAK256 PUSH13 0x656E677468206F6653656E6465 PUSH19 0x206E6F7420617574686F72697A656420746F20 PUSH4 0x616C6C20 PUSH21 0x681F32C1B084E2DE0713B8FB16BD46BB9DF710A3DB 0xea 0xe2 RETURN 0xca SWAP4 0xaf 0x46 0xe0 AND 0xdc 0xc6 0xb0 0x4c PUSH6 0x6E677468206D PUSH22 0x73742062652067726561746572207468616E206F7220 PUSH6 0xA265627A7A72 ADDRESS PC KECCAK256 SWAP5 PUSH14 0x64F4DCDF791FA4E2CF2FA4962A12 LOG2 0xba PUSH18 0x4FDA3F5B8771658C9F4806A1346C65787065 PUSH19 0x696D656E74616CF50037000000000000000000 ",
				"sourceMap": "744:1407:8:-;;;363:5:16;:18;;-1:-1:-1;;;;;;363:18:16;371:10;363:18;;;744:1407:8;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x6080604052600436106100ab5763ffffffff60e060020a60003504166342f1181e81146100b0578063494503d4146100d2578063563c875d14610108578063707129391461012857806372c2f527146101485780638da5cb5b146101785780639ad267441461018d578063a85e59e4146101ad578063ae25532e146101cd578063b9181611146101ef578063bd27c22d1461021c578063d39de6e91461024a578063f2fde38b1461026c575b600080fd5b3480156100bc57600080fd5b506100d06100cb36600461126f565b61028c565b005b3480156100de57600080fd5b506100f26100ed36600461143b565b6103db565b6040516100ff919061155e565b60405180910390f35b34801561011457600080fd5b506100d06101233660046112cf565b610403565b34801561013457600080fd5b506100d061014336600461126f565b6104fb565b34801561015457600080fd5b50610168610163366004611407565b6106bb565b6040516100ff9493929190611641565b34801561018457600080fd5b506100f26106da565b34801561019957600080fd5b506100d06101a8366004611295565b6106e9565b3480156101b957600080fd5b506100d06101c836600461138b565b6108c1565b3480156101d957600080fd5b506101e2610974565b6040516100ff9190611618565b3480156101fb57600080fd5b5061020f61020a36600461126f565b61097a565b6040516100ff91906115e9565b34801561022857600080fd5b5061023c610237366004611407565b61098f565b6040516100ff929190611626565b34801561025657600080fd5b5061025f6109a5565b6040516100ff91906115d8565b34801561027857600080fd5b506100d061028736600461126f565b610a07565b600054600160a060020a031633146102c25760405160e560020a62461bcd0281526004016102b990611608565b60405180910390fd5b600160a060020a038116600090815260016020908152604091829020548251606081018452602681527f546172676574206d757374206e6f7420616c726561647920626520617574686f9281019290925260d160020a653934bd32b21702928201929092529060ff161561034c5760405160e560020a62461bcd0281526004016102b991906115f7565b50600160a060020a0381166000818152600160208190526040808320805460ff19168317905560028054928301815583527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9091018054600160a060020a03191684179055513392917f3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c91a350565b60028054829081106103e957fe5b600091825260209091200154600160a060020a0316905081565b336000908152600160209081526040808320548151606081018352602a81526000805160206117448339815191529381019390935260b160020a6934b99036b2ba3437b217029183019190915260ff1615156104755760405160e560020a62461bcd0281526004016102b991906115f7565b50600090505b84518110156104f4576104ec858281518110151561049557fe5b9060200190602002015185838151811015156104ad57fe5b9060200190602002015185848151811015156104c557fe5b9060200190602002015185858151811015156104dd57fe5b90602001906020020151610a62565b60010161047b565b5050505050565b60008054600160a060020a031633146105295760405160e560020a62461bcd0281526004016102b990611608565b600160a060020a038216600090815260016020908152604091829020548251606081018452602281527f5461726765742061646472657373206d75737420626520617574686f72697a659281019290925260f160020a61321702928201929092529060ff1615156105b05760405160e560020a62461bcd0281526004016102b991906115f7565b5050600160a060020a0381166000908152600160205260408120805460ff191690555b6002548110156106935781600160a060020a03166002828154811015156105f657fe5b600091825260209091200154600160a060020a0316141561068b5760028054600019810190811061062357fe5b60009182526020909120015460028054600160a060020a03909216918390811061064957fe5b60009182526020909120018054600160a060020a031916600160a060020a03929092169190911790556002805460001901906106859082611037565b50610693565b6001016105d3565b6040513390600160a060020a0384169060008051602061176483398151915290600090a35050565b600080600060606106cb85610c37565b92989197509550909350915050565b600054600160a060020a031681565b60025460408051606081018252602781527f53706563696669656420617272617920696e646578206973206f7574206f6620602082015260c960020a663137bab732399702918101919091529082106107585760405160e560020a62461bcd0281526004016102b991906115f7565b5081600160a060020a031660028281548110151561077257fe5b6000918252602091829020015460408051606081018252603581527f4164647265737320666f756e6420617420696e64657820646f6573206e6f742093810193909352605960020a7436b0ba31b4103a30b933b2ba1030b2323932b9b99702908301529091600160a060020a03909116146108035760405160e560020a62461bcd0281526004016102b991906115f7565b50600160a060020a0382166000908152600160205260409020805460ff1916905560028054600019810190811061083657fe5b60009182526020909120015460028054600160a060020a03909216918390811061085c57fe5b60009182526020909120018054600160a060020a031916600160a060020a03929092169190911790556002805460001901906108989082611037565b506040513390600160a060020a0384169060008051602061176483398151915290600090a35050565b33600090815260016020908152604091829020548251606081018452602a81526000805160206117448339815191529281019290925260b160020a6934b99036b2ba3437b21702928201929092529060ff1615156109355760405160e560020a62461bcd0281526004016102b991906115f7565b506104f485858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050848484610a62565b60025b90565b60016020526000908152604090205460ff1681565b60008061099b83610d01565b9092509050915091565b606060028054806020026020016040519081016040528092919081815260200182805480156109fd57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116109df575b5050505050905090565b600054600160a060020a03163314610a345760405160e560020a62461bcd0281526004016102b990611608565b600160a060020a03811615610a5f5760008054600160a060020a031916600160a060020a0383161790555b50565b60008060006060610a7288610c37565b60408051606081018252603281527f50726f787920696420696e206d6574616461746120646f6573206e6f74206d616020820152607160020a713a31b4103a3434b990383937bc3c9034b21702918101919091529397509195509350915060ff8516600214610af75760405160e560020a62461bcd0281526004016102b991906115f7565b5060408051808201909152601d81527f5472616e7366657220616d6f756e74206d75737420657175616c20312e000000602082015260018614610b505760405160e560020a62461bcd0281526004016102b991906115f7565b50600081511115610bc75760405160e160020a635c46a7ef028152600160a060020a0384169063b88d4fde90610b90908a908a9087908790600401611594565b600060405180830381600087803b158015610baa57600080fd5b505af1158015610bbe573d6000803e3d6000fd5b50505050610c2d565b60405160e060020a6323b872dd028152600160a060020a038416906323b872dd90610bfa908a908a90879060040161156c565b600060405180830381600087803b158015610c1457600080fd5b505af1158015610c28573d6000803e3d6000fd5b505050505b5050505050505050565b60008060006060603585511015606060405190810160405280602d81526020016000805160206117248339815191528152602001609960020a6c1030ba103632b0b9ba101a999702815250901515610ca55760405160e560020a62461bcd0281526004016102b991906115f7565b50846000815181101515610cb557fe5b016020015160f860020a908190048102049350610cd3856001610d96565b9250610ce0856015610e1c565b9150603585511115610cfa57610cf7856035610e2f565b90505b9193509193565b600080825160151460606040519081016040528060248152602001600080516020611724833981519152815260200160e160020a631019189702815250901515610d615760405160e560020a62461bcd0281526004016102b991906115f7565b50826000815181101515610d7157fe5b016020015160f860020a908190048102049150610d8f836001610d96565b9050915091565b60008160140183511015606060405190810160405280602b8152602001600080516020611784833981519152815260200160a960020a6a38bab0b6103a379019181702815250901515610dff5760405160e560020a62461bcd0281526004016102b991906115f7565b50506014818301810151910190600160a060020a03165b92915050565b6000610e288383610f07565b9392505050565b60606000610e3d8484610e1c565b905060208301925080830184511015606060405190810160405280602b8152602001600080516020611784833981519152815260200160a960020a6a38bab0b6103a379019991702815250901515610eab5760405160e560020a62461bcd0281526004016102b991906115f7565b50806040519080825280601f01601f191660200182016040528015610eda578160200160208202803883390190505b509150610f00610ee983610977565b60200184610ef687610977565b0160200183610f7a565b5092915050565b60008160200183511015606060405190810160405280602b8152602001600080516020611784833981519152815260200160a960020a6a38bab0b6103a379019991702815250901515610f705760405160e560020a62461bcd0281526004016102b991906115f7565b5050016020015190565b6020811015610fa4576001816020036101000a038019835116818551168082178652505050611032565b82821415610fb157611032565b82821115610ff75760208104602082039150818301828501815160005b84811015610fec578651885260209788019790960195600101610fce565b509052506110329050565b60208104602082039150818301828501845160005b8481101561102b5783518352601f19938401939092019160010161100c565b5086525050505b505050565b8154818355818111156110325760008381526020902061103291810190830161097791905b80821115611070576000815560010161105c565b5090565b6000610e2882356116c6565b6000601f8201831361109157600080fd5b81356110a461109f82611675565b61164f565b915081818352602084019350602081019050838560208402820111156110c957600080fd5b60005b838110156110f557816110df8882611074565b84525060209283019291909101906001016110cc565b5050505092915050565b6000601f8201831361111057600080fd5b813561111e61109f82611675565b81815260209384019390925082018360005b838110156110f557813586016111468882611214565b8452506020928301929190910190600101611130565b6000601f8201831361116d57600080fd5b813561117b61109f82611675565b915081818352602084019350602081019050838560208402820111156111a057600080fd5b60005b838110156110f557816111b68882611263565b84525060209283019291909101906001016111a3565b600080601f830184136111de57600080fd5b5081356001604060020a038111156111f557600080fd5b60208301915083600182028301111561120d57600080fd5b9250929050565b6000601f8201831361122557600080fd5b813561123361109f82611695565b9150808252602083016020830185838301111561124f57600080fd5b61125a8382846116dd565b50505092915050565b6000610e288235610977565b60006020828403121561128157600080fd5b600061128d8484611074565b949350505050565b600080604083850312156112a857600080fd5b60006112b48585611074565b92505060206112c585828601611263565b9150509250929050565b600080600080608085870312156112e557600080fd5b84356001604060020a038111156112fb57600080fd5b611307878288016110ff565b94505060208501356001604060020a0381111561132357600080fd5b61132f87828801611080565b93505060408501356001604060020a0381111561134b57600080fd5b61135787828801611080565b92505060608501356001604060020a0381111561137357600080fd5b61137f8782880161115c565b91505092959194509250565b6000806000806000608086880312156113a357600080fd5b85356001604060020a038111156113b957600080fd5b6113c5888289016111cc565b955095505060206113d888828901611074565b93505060406113e988828901611074565b92505060606113fa88828901611263565b9150509295509295909350565b60006020828403121561141957600080fd5b81356001604060020a0381111561142f57600080fd5b61128d84828501611214565b60006020828403121561144d57600080fd5b600061128d8484611263565b611462816116c6565b82525050565b6000611473826116c2565b808452602084019350611485836116bc565b60005b828110156114b55761149b868351611459565b6114a4826116bc565b602096909601959150600101611488565b5093949350505050565b611462816116d2565b60006114d3826116c2565b8084526114e78160208601602086016116e9565b6114f081611719565b9093016020019392505050565b603381527f4f6e6c7920636f6e7472616374206f776e657220697320616c6c6f77656420746020820152606960020a72379031b0b636103a3434b99036b2ba3437b21702604082015260600190565b61146281610977565b611462816116d7565b60208101610e168284611459565b6060810161157a8286611459565b6115876020830185611459565b61128d604083018461154c565b608081016115a28287611459565b6115af6020830186611459565b6115bc604083018561154c565b81810360608301526115ce81846114c8565b9695505050505050565b60208082528101610e288184611468565b60208101610e1682846114bf565b60208082528101610e2881846114c8565b60208082528101610e16816114fd565b60208101610e168284611555565b604081016116348285611555565b610e286020830184611459565b608081016115a28287611555565b6040518181016001604060020a038111828210171561166d57600080fd5b604052919050565b60006001604060020a0382111561168b57600080fd5b5060209081020190565b60006001604060020a038211156116ab57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b600160a060020a031690565b151590565b60ff1690565b82818337506000910152565b60005b838110156117045781810151838201526020016116ec565b83811115611713576000848401525b50505050565b601f01601f191690560041737365742064617461206d75737420686176652061206c656e677468206f6653656e646572206e6f7420617574686f72697a656420746f2063616c6c2074681f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b04c656e677468206d7573742062652067726561746572207468616e206f722065a265627a7a72305820946d64f4dcdf791fa4e2cf2fa4962a12a2ba714fda3f5b8771658c9f4806a1346c6578706572696d656e74616cf50037",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x42F1181E DUP2 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x494503D4 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x563C875D EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x70712939 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x72C2F527 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x9AD26744 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xA85E59E4 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xAE25532E EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xBD27C22D EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xD39DE6E9 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0x28C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x143B JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH2 0x163 CALLDATASIZE PUSH1 0x4 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x6DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1295 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x138B JUMP JUMPDEST PUSH2 0x8C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x1618 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23C PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP3 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x15D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x126F JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2C2 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP1 PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH32 0x546172676574206D757374206E6F7420616C726561647920626520617574686F SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xD1 PUSH1 0x2 EXP PUSH6 0x3934BD32B217 MUL SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x34C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x3147867C59D17E8FA9D522465651D44AAE0A9E38F902F3475B97E58072F0ED4C SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x3E9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1744 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xB1 PUSH1 0x2 EXP PUSH10 0x34B99036B2BA3437B217 MUL SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x475 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4F4 JUMPI PUSH2 0x4EC DUP6 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x495 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4C5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4DD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x47B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x529 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP1 PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH32 0x5461726765742061646472657373206D75737420626520617574686F72697A65 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xF1 PUSH1 0x2 EXP PUSH2 0x3217 MUL SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x693 JUMPI DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x5F6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x68B JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x623 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x649 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x685 SWAP1 DUP3 PUSH2 0x1037 JUMP JUMPDEST POP PUSH2 0x693 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1764 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x6CB DUP6 PUSH2 0xC37 JUMP JUMPDEST SWAP3 SWAP9 SWAP2 SWAP8 POP SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH32 0x53706563696669656420617272617920696E646578206973206F7574206F6620 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC9 PUSH1 0x2 EXP PUSH7 0x3137BAB7323997 MUL SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 LT PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x772 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH32 0x4164647265737320666F756E6420617420696E64657820646F6573206E6F7420 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x59 PUSH1 0x2 EXP PUSH21 0x36B0BA31B4103A30B933B2BA1030B2323932B9B997 MUL SWAP1 DUP4 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND EQ PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x836 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x85C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x898 SWAP1 DUP3 PUSH2 0x1037 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1764 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1744 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xB1 PUSH1 0x2 EXP PUSH10 0x34B99036B2BA3437B217 MUL SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP PUSH2 0x4F4 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP DUP5 DUP5 DUP5 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x2 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x99B DUP4 PUSH2 0xD01 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x9FD JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9DF JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP1 PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0xA5F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xA72 DUP9 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH32 0x50726F787920696420696E206D6574616461746120646F6573206E6F74206D61 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x71 PUSH1 0x2 EXP PUSH18 0x3A31B4103A3434B990383937BC3C9034B217 MUL SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH1 0xFF DUP6 AND PUSH1 0x2 EQ PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D75737420657175616C20312E000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP7 EQ PUSH2 0xB50 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0x5C46A7EF MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH4 0xB88D4FDE SWAP1 PUSH2 0xB90 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1594 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBBE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xC2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0x23B872DD MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xBFA SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x156C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x35 DUP6 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1724 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x99 PUSH1 0x2 EXP PUSH13 0x1030BA103632B0B9BA101A9997 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xCB5 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0xCD3 DUP6 PUSH1 0x1 PUSH2 0xD96 JUMP JUMPDEST SWAP3 POP PUSH2 0xCE0 DUP6 PUSH1 0x15 PUSH2 0xE1C JUMP JUMPDEST SWAP2 POP PUSH1 0x35 DUP6 MLOAD GT ISZERO PUSH2 0xCFA JUMPI PUSH2 0xCF7 DUP6 PUSH1 0x35 PUSH2 0xE2F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x15 EQ PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1724 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0x10191897 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xD71 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP2 POP PUSH2 0xD8F DUP4 PUSH1 0x1 PUSH2 0xD96 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x14 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1784 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790191817 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xDFF JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP POP PUSH1 0x14 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE28 DUP4 DUP4 PUSH2 0xF07 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xE3D DUP5 DUP5 PUSH2 0xE1C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP4 ADD SWAP3 POP DUP1 DUP4 ADD DUP5 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1784 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP DUP1 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEDA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0xF00 PUSH2 0xEE9 DUP4 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x20 ADD DUP5 PUSH2 0xEF6 DUP8 PUSH2 0x977 JUMP JUMPDEST ADD PUSH1 0x20 ADD DUP4 PUSH2 0xF7A JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1784 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xF70 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST POP POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFA4 JUMPI PUSH1 0x1 DUP2 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP4 MLOAD AND DUP2 DUP6 MLOAD AND DUP1 DUP3 OR DUP7 MSTORE POP POP POP PUSH2 0x1032 JUMP JUMPDEST DUP3 DUP3 EQ ISZERO PUSH2 0xFB1 JUMPI PUSH2 0x1032 JUMP JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0xFF7 JUMPI PUSH1 0x20 DUP2 DIV PUSH1 0x20 DUP3 SUB SWAP2 POP DUP2 DUP4 ADD DUP3 DUP6 ADD DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xFEC JUMPI DUP7 MLOAD DUP9 MSTORE PUSH1 0x20 SWAP8 DUP9 ADD SWAP8 SWAP1 SWAP7 ADD SWAP6 PUSH1 0x1 ADD PUSH2 0xFCE JUMP JUMPDEST POP SWAP1 MSTORE POP PUSH2 0x1032 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 DIV PUSH1 0x20 DUP3 SUB SWAP2 POP DUP2 DUP4 ADD DUP3 DUP6 ADD DUP5 MLOAD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x102B JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x1F NOT SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x100C JUMP JUMPDEST POP DUP7 MSTORE POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x1032 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0x1032 SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0x977 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1070 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x105C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE28 DUP3 CALLDATALOAD PUSH2 0x16C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x1091 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10A4 PUSH2 0x109F DUP3 PUSH2 0x1675 JUMP JUMPDEST PUSH2 0x164F JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x10C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10F5 JUMPI DUP2 PUSH2 0x10DF DUP9 DUP3 PUSH2 0x1074 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10CC JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x1110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x111E PUSH2 0x109F DUP3 PUSH2 0x1675 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10F5 JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0x1146 DUP9 DUP3 PUSH2 0x1214 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x116D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x117B PUSH2 0x109F DUP3 PUSH2 0x1675 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x11A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10F5 JUMPI DUP2 PUSH2 0x11B6 DUP9 DUP3 PUSH2 0x1263 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x11F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x120D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x1225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1233 PUSH2 0x109F DUP3 PUSH2 0x1695 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x124F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x125A DUP4 DUP3 DUP5 PUSH2 0x16DD JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE28 DUP3 CALLDATALOAD PUSH2 0x977 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x128D DUP5 DUP5 PUSH2 0x1074 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12B4 DUP6 DUP6 PUSH2 0x1074 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1263 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x12FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1307 DUP8 DUP3 DUP9 ADD PUSH2 0x10FF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x1323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132F DUP8 DUP3 DUP9 ADD PUSH2 0x1080 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1357 DUP8 DUP3 DUP9 ADD PUSH2 0x1080 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x1373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x137F DUP8 DUP3 DUP9 ADD PUSH2 0x115C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x13B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13C5 DUP9 DUP3 DUP10 ADD PUSH2 0x11CC JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x13D8 DUP9 DUP3 DUP10 ADD PUSH2 0x1074 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x13E9 DUP9 DUP3 DUP10 ADD PUSH2 0x1074 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x13FA DUP9 DUP3 DUP10 ADD PUSH2 0x1263 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x142F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128D DUP5 DUP3 DUP6 ADD PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x128D DUP5 DUP5 PUSH2 0x1263 JUMP JUMPDEST PUSH2 0x1462 DUP2 PUSH2 0x16C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1473 DUP3 PUSH2 0x16C2 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0x1485 DUP4 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x14B5 JUMPI PUSH2 0x149B DUP7 DUP4 MLOAD PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x14A4 DUP3 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x20 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1488 JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1462 DUP2 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D3 DUP3 PUSH2 0x16C2 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x14E7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x14F0 DUP2 PUSH2 0x1719 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x33 DUP2 MSTORE PUSH32 0x4F6E6C7920636F6E7472616374206F776E657220697320616C6C6F7765642074 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x69 PUSH1 0x2 EXP PUSH19 0x379031B0B636103A3434B99036B2BA3437B217 MUL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1462 DUP2 PUSH2 0x977 JUMP JUMPDEST PUSH2 0x1462 DUP2 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xE16 DUP3 DUP5 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x157A DUP3 DUP7 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x1587 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x128D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x15A2 DUP3 DUP8 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x15AF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x15BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x154C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x15CE DUP2 DUP5 PUSH2 0x14C8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xE28 DUP2 DUP5 PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xE16 DUP3 DUP5 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xE28 DUP2 DUP5 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xE16 DUP2 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xE16 DUP3 DUP5 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x1634 DUP3 DUP6 PUSH2 0x1555 JUMP JUMPDEST PUSH2 0xE28 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x15A2 DUP3 DUP8 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x166D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x168B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x16AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1704 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16EC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1713 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP COINBASE PUSH20 0x7365742064617461206D75737420686176652061 KECCAK256 PUSH13 0x656E677468206F6653656E6465 PUSH19 0x206E6F7420617574686F72697A656420746F20 PUSH4 0x616C6C20 PUSH21 0x681F32C1B084E2DE0713B8FB16BD46BB9DF710A3DB 0xea 0xe2 RETURN 0xca SWAP4 0xaf 0x46 0xe0 AND 0xdc 0xc6 0xb0 0x4c PUSH6 0x6E677468206D PUSH22 0x73742062652067726561746572207468616E206F7220 PUSH6 0xA265627A7A72 ADDRESS PC KECCAK256 SWAP5 PUSH14 0x64F4DCDF791FA4E2CF2FA4962A12 LOG2 0xba PUSH18 0x4FDA3F5B8771658C9F4806A1346C65787065 PUSH19 0x696D656E74616CF50037000000000000000000 ",
				"sourceMap": "744:1407:8:-;;;;;;;;;-1:-1:-1;;;744:1407:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1650:318:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1650:318:3;;;;;;;;;;;1535:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1535:28:3;;;;;;;;;;;;;;;;;;;;;;;;;1675:426:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1675:426:2;;;;;;;;;2082:542:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2082:542:3;;;;;;;;;1648:501:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1648:501:8;;;;;;;;;;;;;;;;;;;;292:20:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:20:16;;;;2797:498:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2797:498:3;;;;;;;;;1038:282:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1038:282:2;;;;;;;;;2582:112:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2582:112:1;;;;;;;;;;;;1486:43:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1486:43:3;;;;;;;;;;;;;;;;;993:268:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;993:268:8;;;;;;;;;;;;;;;;;;3392:138:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3392:138:3;;;;;;;;;;;;566:167:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;566:167:16;;;;;;;;;1650:318:3;460:5:16;;-1:-1:-1;;;;;460:5:16;446:10;:19;425:117;;;;-1:-1:-1;;;;;425:117:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1767:18:3;;;;;;:10;:18;;;;;;;;;;1799:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1799:25:3;;;;;;;;1767:18;;1766:19;1745:89;;;;-1:-1:-1;;;;;1745:89:3;;;;;;;;;;-1:-1:-1;;;;;;1845:18:3;;;;;;1866:4;1845:18;;;;;;;;:25;;-1:-1:-1;;1845:25:3;;;;;1880:11;27:10:-1;;23:18;;;45:23;;1880:24:3;;;;;;;;-1:-1:-1;;;;;;1880:24:3;;;;;1919:42;1950:10;;1845:18;1919:42;;;1650:318;:::o;1535:28::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1535:28:3;;-1:-1:-1;1535:28:3;:::o;1675:426:2:-;1406:10:3;1888:9:2;1395:22:3;;;:10;:22;;;;;;;;;1431:21;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1431:21:3;;;;;;;-1:-1:-1;;;;;1431:21:3;;;;;;;1395:22;;1374:88;;;;;;-1:-1:-1;;;;;1374:88:3;;;;;;;;;;;1900:1:2;1888:13;;1883:212;1907:9;:16;1903:1;:20;1883:212;;;1944:140;1982:9;1992:1;1982:12;;;;;;;;;;;;;;;;;;2012:4;2017:1;2012:7;;;;;;;;;;;;;;;;;;2037:2;2040:1;2037:5;;;;;;;;;;;;;;;;;;2060:7;2068:1;2060:10;;;;;;;;;;;;;;;;;;1944:20;:140::i;:::-;1925:3;;1883:212;;;1675:426;;;;;:::o;2082:542:3:-;2315:6;460:5:16;;-1:-1:-1;;;;;460:5:16;446:10;:19;425:117;;;;-1:-1:-1;;;;;425:117:16;;;;;;;;;-1:-1:-1;;;;;2201:18:3;;;;;;:10;:18;;;;;;;;;;2233:21;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2233:21:3;;;;;;;;2201:18;;2180:84;;;;;;-1:-1:-1;;;;;2180:84:3;;;;;;;;;;-1:-1:-1;;;;;;;2282:18:3;;;;;;:10;:18;;;;;2275:25;;-1:-1:-1;;2275:25:3;;;2310:249;2331:11;:18;2327:22;;2310:249;;;2392:6;-1:-1:-1;;;;;2374:24:3;:11;2386:1;2374:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2374:14:3;:24;2370:179;;;2435:11;2447:18;;-1:-1:-1;;2447:22:3;;;2435:35;;;;;;;;;;;;;;;;2418:11;:14;;-1:-1:-1;;;;;2435:35:3;;;;2430:1;;2418:14;;;;;;;;;;;;;;;:52;;-1:-1:-1;;;;;;2418:52:3;-1:-1:-1;;;;;2418:52:3;;;;;;;;;;2488:11;:23;;-1:-1:-1;;2488:23:3;;;;;;:::i;:::-;;2529:5;;2370:179;2351:3;;2310:249;;;2573:44;;2606:10;;-1:-1:-1;;;;;2573:44:3;;;-1:-1:-1;;;;;;;;;;;2573:44:3;;;;2082:542;;:::o;1648:501:8:-;1762:13;1789;1816:15;1845:25;1995:32;2017:9;1995:21;:32::i;:::-;1895:132;;;;-1:-1:-1;1895:132:8;-1:-1:-1;1895:132:8;;-1:-1:-1;1648:501:8;-1:-1:-1;;1648:501:8:o;292:20:16:-;;;-1:-1:-1;;;;;292:20:16;;:::o;2797:498:3:-;2928:11;:18;2960:19;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2960:19:3;;;;;;;;2920:26;;2899:90;;;;-1:-1:-1;;;;;2899:90:3;;;;;;;;;;;3042:6;-1:-1:-1;;;;;3020:28:3;:11;3032:5;3020:18;;;;;;;;;;;;;;;;;;;;;3062:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3062:22:3;;;;;;-1:-1:-1;;;;;3020:18:3;;;:28;2999:95;;;;-1:-1:-1;;;;;2999:95:3;;;;;;;;;;-1:-1:-1;;;;;;3112:18:3;;;;;;:10;:18;;;;;3105:25;;-1:-1:-1;;3105:25:3;;;3161:11;3173:18;;-1:-1:-1;;3173:22:3;;;3161:35;;;;;;;;;;;;;;;;3140:11;:18;;-1:-1:-1;;;;;3161:35:3;;;;3152:5;;3140:18;;;;;;;;;;;;;;;:56;;-1:-1:-1;;;;;;3140:56:3;-1:-1:-1;;;;;3140:56:3;;;;;;;;;;3206:11;:23;;-1:-1:-1;;3206:23:3;;;;;;:::i;:::-;-1:-1:-1;3244:44:3;;3277:10;;-1:-1:-1;;;;;3244:44:3;;;-1:-1:-1;;;;;;;;;;;3244:44:3;;;;2797:498;;:::o;1038:282:2:-;1406:10:3;1395:22;;;;:10;:22;;;;;;;;;;1431:21;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1431:21:3;;;;;;;-1:-1:-1;;;;;1431:21:3;;;;;;;;1395:22;;1374:88;;;;;;-1:-1:-1;;;;;1374:88:3;;;;;;;;;;;1206:107:2;1240:9;;1206:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1263:4;1281:2;1297:6;1206:20;:107::i;2582:112:1:-;941:1;2582:112;;:::o;1486:43:3:-;;;;;;;;;;;;;;;:::o;993:268:8:-;1106:13;1133;1190:31;1211:9;1190:20;:31::i;:::-;1171:50;;-1:-1:-1;1171:50:8;-1:-1:-1;993:268:8;;;:::o;3392:138:3:-;3473:9;3512:11;3505:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3505:18:3;;;;;;;;;;;;;;;;;;;;;;;3392:138;:::o;566:167:16:-;460:5;;-1:-1:-1;;;;;460:5:16;446:10;:19;425:117;;;;-1:-1:-1;;;;;425:117:16;;;;;;;;;-1:-1:-1;;;;;662:22:16;;;658:69;;700:5;:16;;-1:-1:-1;;;;;;700:16:16;-1:-1:-1;;;;;700:16:16;;;;;658:69;566:167;:::o;1487:997:1:-;1691:13;1718;1745:15;1774:25;1812:32;1834:9;1812:21;:32::i;:::-;1958:17;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1958:17:1;;;;;;;1677:167;;-1:-1:-1;1677:167:1;;-1:-1:-1;1677:167:1;-1:-1:-1;1677:167:1;-1:-1:-1;1925:19:1;;;941:1;1925:19;1904:81;;;;-1:-1:-1;;;;;1904:81:1;;;;;;;;;;-1:-1:-1;2088:23:1;;;;;;;;;;;;;;;;;2073:1;2063:11;;2042:79;;;;-1:-1:-1;;;;;2042:79:1;;;;;;;;;;;2301:1;2279:12;:19;:23;2276:202;;;2318:68;;-1:-1:-1;;;;;2318:68:1;;-1:-1:-1;;;;;2318:35:1;;;;;:68;;2354:4;;2360:2;;2364:7;;2373:12;;2318:68;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2318:68:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2318:68:1;;;;2276:202;;;2417:50;;-1:-1:-1;;;;;2417:50:1;;-1:-1:-1;;;;;2417:31:1;;;;;:50;;2449:4;;2455:2;;2459:7;;2417:50;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2417:50:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2417:50:1;;;;2276:202;1487:997;;;;;;;;:::o;3081:760::-;3196:13;3223;3250:15;3279:25;3410:2;3390:9;:16;:22;;3426:25;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3426:25:1;;;;-1:-1:-1;;;;;3426:25:1;;;3369:92;;;;;;;-1:-1:-1;;;;;3369:92:1;;;;;;;;;;;3517:9;3527:1;3517:12;;;;;;;;;;;;;;-1:-1:-1;;;3517:12:1;;;;;;3511:19;;-1:-1:-1;3548:25:1;3560:9;3571:1;3548:11;:25::i;:::-;3540:33;;3593:26;3605:9;3616:2;3593:11;:26::i;:::-;3583:36;;3652:2;3633:9;:16;:21;3629:91;;;3685:24;3695:9;3706:2;3685:9;:24::i;:::-;3670:39;;3629:91;3081:760;;;;;:::o;2471:458:0:-;2585:13;2612;2711:9;:16;2731:2;2711:22;2747:25;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2747:25:0;;;;-1:-1:-1;;;;;2747:25:0;;;2690:92;;;;;;;-1:-1:-1;;;;;2690:92:0;;;;;;;;;;;2832:9;2842:1;2832:12;;;;;;;;;;;;;;-1:-1:-1;;;2832:12:0;;;;;;2826:19;;-1:-1:-1;2863:25:0;2875:9;2886:1;2863:11;:25::i;:::-;2855:33;-1:-1:-1;2471:458:0;;;:::o;2204:868:13:-;2325:14;2388:5;2396:2;2388:10;2376:1;:8;:22;;2440;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2440:22:13;;;;-1:-1:-1;;;;;2440:22:13;;;2355:117;;;;;;;-1:-1:-1;;;;;2355:117:13;;;;;;;;;;-1:-1:-1;;2719:2:13;2974:13;;;;;2968:20;2710:11;;;-1:-1:-1;;;;;2964:69:13;2204:868;;;;;:::o;6338:195::-;6459:14;6504:21;6516:1;6519:5;6504:11;:21::i;:::-;6496:30;6338:195;-1:-1:-1;;;6338:195:13:o;7154:757::-;7273:19;7347:25;7375:21;7387:1;7390:5;7375:11;:21::i;:::-;7347:49;;7415:2;7406:11;;;;7551:17;7543:5;:25;7531:1;:8;:37;;7582:22;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7582:22:13;;;;-1:-1:-1;;;;;7582:22:13;;;7510:104;;;;;;;-1:-1:-1;;;;;7510:104:13;;;;;;;;;;;7696:17;7686:28;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;7686:28:13;;7677:37;;7724:156;7744:21;7758:6;7744:13;:21::i;:::-;7768:2;7744:26;7829:5;7810:16;7824:1;7810:13;:16::i;:::-;:24;7837:2;7810:29;7853:17;7724:6;:156::i;:::-;7154:757;;;;;:::o;4956:472::-;5077:14;5140:5;5148:2;5140:10;5128:1;:8;:22;;5164;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5164:22:13;;;;-1:-1:-1;;;;;5164:22:13;;;5107:89;;;;;;;-1:-1:-1;;;;;5107:89:13;;;;;;;;;;-1:-1:-1;;5375:13:13;5277:2;5375:13;5369:20;;4956:472::o;1244:3896:14:-;1393:2;1384:6;:11;1380:3754;;;1682:1;1672:6;1668:2;1664:15;1659:3;1655:25;1651:33;1733:4;1729:9;1720:6;1714:13;1710:29;1782:4;1775;1769:11;1765:22;1823:1;1820;1817:8;1811:4;1804:22;1621:219;;;;;;1944:4;1934:6;:14;1930:59;;;1968:7;;1930:59;2678:4;2669:6;:13;2665:2459;;;2828:2;2820:6;2816:15;3124:2;3116:6;3112:15;3102:25;;3172:6;3164;3160:19;3222:6;3216:4;3212:17;3529:4;3523:11;3624:1;3610:219;3633:6;3630:1;3627:13;3610:219;;;3697:13;;3684:27;;3758:2;3794:13;;;;3746:15;;;;3654:1;3647:9;3610:219;;;-1:-1:-1;3898:18:14;;-1:-1:-1;2711:1223:14;;-1:-1:-1;2711:1223:14;;4098:2;4090:6;4086:15;4299:2;4291:6;4287:15;4277:25;;4347:6;4339;4335:19;4397:6;4391:4;4387:17;4707:6;4701:13;4804:1;4790:213;4813:6;4810:1;4807:13;4790:213;;;4877:11;;4864:25;;-1:-1:-1;;4922:13:14;;;;4968;;;;4834:1;4827:9;4790:213;;;-1:-1:-1;5073:19:14;;-1:-1:-1;;;3981:1129:14;1244:3896;;;:::o;744:1407:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:118:-1;;72:46;110:6;97:20;72:46;;148:707;;258:4;246:17;;242:27;-1:-1;232:2;;283:1;280;273:12;232:2;320:6;307:20;342:80;357:64;414:6;357:64;;;342:80;;;333:89;;439:5;464:6;457:5;450:21;494:4;486:6;482:17;472:27;;516:4;511:3;507:14;500:21;;569:6;616:3;608:4;600:6;596:17;591:3;587:27;584:36;581:2;;;633:1;630;623:12;581:2;658:1;643:206;668:6;665:1;662:13;643:206;;;726:3;748:37;781:3;769:10;748:37;;;736:50;;-1:-1;809:4;800:14;;;;828;;;;;690:1;683:9;643:206;;;647:14;225:630;;;;;;;;879:693;;994:4;982:17;;978:27;-1:-1;968:2;;1019:1;1016;1009:12;968:2;1056:6;1043:20;1078:85;1093:69;1155:6;1093:69;;1078:85;1191:21;;;1235:4;1223:17;;;;1069:94;;-1:-1;1248:14;;1223:17;1343:1;1328:238;1353:6;1350:1;1347:13;1328:238;;;1436:3;1423:17;1415:6;1411:30;1460:42;1498:3;1486:10;1460:42;;;1448:55;;-1:-1;1526:4;1517:14;;;;1545;;;;;1375:1;1368:9;1328:238;;1598:707;;1708:4;1696:17;;1692:27;-1:-1;1682:2;;1733:1;1730;1723:12;1682:2;1770:6;1757:20;1792:80;1807:64;1864:6;1807:64;;1792:80;1783:89;;1889:5;1914:6;1907:5;1900:21;1944:4;1936:6;1932:17;1922:27;;1966:4;1961:3;1957:14;1950:21;;2019:6;2066:3;2058:4;2050:6;2046:17;2041:3;2037:27;2034:36;2031:2;;;2083:1;2080;2073:12;2031:2;2108:1;2093:206;2118:6;2115:1;2112:13;2093:206;;;2176:3;2198:37;2231:3;2219:10;2198:37;;;2186:50;;-1:-1;2259:4;2250:14;;;;2278;;;;;2140:1;2133:9;2093:206;;2327:335;;;2434:4;2422:17;;2418:27;-1:-1;2408:2;;2459:1;2456;2449:12;2408:2;-1:-1;2479:20;;-1:-1;;;;;2508:30;;2505:2;;;2551:1;2548;2541:12;2505:2;2585:4;2577:6;2573:17;2561:29;;2635:3;2628;2620:6;2616:16;2606:8;2602:31;2599:40;2596:2;;;2652:1;2649;2642:12;2596:2;2401:261;;;;;;2671:432;;2761:4;2749:17;;2745:27;-1:-1;2735:2;;2786:1;2783;2776:12;2735:2;2823:6;2810:20;2845:60;2860:44;2897:6;2860:44;;2845:60;2836:69;;2925:6;2918:5;2911:21;2961:4;2953:6;2949:17;2994:4;2987:5;2983:16;3029:3;3020:6;3015:3;3011:16;3008:25;3005:2;;;3046:1;3043;3036:12;3005:2;3056:41;3090:6;3085:3;3080;3056:41;;;2728:375;;;;;;;;3560:118;;3627:46;3665:6;3652:20;3627:46;;3685:241;;3789:2;3777:9;3768:7;3764:23;3760:32;3757:2;;;3805:1;3802;3795:12;3757:2;3840:1;3857:53;3902:7;3882:9;3857:53;;;3847:63;3751:175;-1:-1;;;;3751:175;3933:366;;;4054:2;4042:9;4033:7;4029:23;4025:32;4022:2;;;4070:1;4067;4060:12;4022:2;4105:1;4122:53;4167:7;4147:9;4122:53;;;4112:63;;4084:97;4212:2;4230:53;4275:7;4266:6;4255:9;4251:22;4230:53;;;4220:63;;4191:98;4016:283;;;;;;4306:1171;;;;;4566:3;4554:9;4545:7;4541:23;4537:33;4534:2;;;4583:1;4580;4573:12;4534:2;4618:31;;-1:-1;;;;;4658:30;;4655:2;;;4701:1;4698;4691:12;4655:2;4721:83;4796:7;4787:6;4776:9;4772:22;4721:83;;;4711:93;;4597:213;4869:2;4858:9;4854:18;4841:32;-1:-1;;;;;4885:6;4882:30;4879:2;;;4925:1;4922;4915:12;4879:2;4945:78;5015:7;5006:6;4995:9;4991:22;4945:78;;;4935:88;;4820:209;5088:2;5077:9;5073:18;5060:32;-1:-1;;;;;5104:6;5101:30;5098:2;;;5144:1;5141;5134:12;5098:2;5164:78;5234:7;5225:6;5214:9;5210:22;5164:78;;;5154:88;;5039:209;5307:2;5296:9;5292:18;5279:32;-1:-1;;;;;5323:6;5320:30;5317:2;;;5363:1;5360;5353:12;5317:2;5383:78;5453:7;5444:6;5433:9;5429:22;5383:78;;;5373:88;;5258:209;4528:949;;;;;;;;5484:741;;;;;;5658:3;5646:9;5637:7;5633:23;5629:33;5626:2;;;5675:1;5672;5665:12;5626:2;5710:31;;-1:-1;;;;;5750:30;;5747:2;;;5793:1;5790;5783:12;5747:2;5821:64;5877:7;5868:6;5857:9;5853:22;5821:64;;;5803:82;;;;5689:202;5922:2;5940:53;5985:7;5976:6;5965:9;5961:22;5940:53;;;5930:63;;5901:98;6030:2;6048:53;6093:7;6084:6;6073:9;6069:22;6048:53;;;6038:63;;6009:98;6138:2;6156:53;6201:7;6192:6;6181:9;6177:22;6156:53;;;6146:63;;6117:98;5620:605;;;;;;;;;6232:345;;6345:2;6333:9;6324:7;6320:23;6316:32;6313:2;;;6361:1;6358;6351:12;6313:2;6396:31;;-1:-1;;;;;6436:30;;6433:2;;;6479:1;6476;6469:12;6433:2;6499:62;6553:7;6544:6;6533:9;6529:22;6499:62;;6584:241;;6688:2;6676:9;6667:7;6663:23;6659:32;6656:2;;;6704:1;6701;6694:12;6656:2;6739:1;6756:53;6801:7;6781:9;6756:53;;6832:110;6905:31;6930:5;6905:31;;;6900:3;6893:44;6887:55;;;6980:590;;7115:54;7163:5;7115:54;;;7187:6;7182:3;7175:19;7211:4;7206:3;7202:14;7195:21;;7256:56;7306:5;7256:56;;;7333:1;7318:230;7343:6;7340:1;7337:13;7318:230;;;7383:53;7432:3;7423:6;7417:13;7383:53;;;7453:60;7506:6;7453:60;;;7536:4;7527:14;;;;;7443:70;-1:-1;7365:1;7358:9;7318:230;;;-1:-1;7561:3;;7094:476;-1:-1;;;;7094:476;7578:101;7645:28;7667:5;7645:28;;7686:297;;7786:38;7818:5;7786:38;;;7841:6;7836:3;7829:19;7853:63;7909:6;7902:4;7897:3;7893:14;7886:4;7879:5;7875:16;7853:63;;;7948:29;7970:6;7948:29;;;7928:50;;;7941:4;7928:50;;7766:217;-1:-1;;;7766:217;8290:397;8445:2;8433:15;;8482:66;8477:2;8468:12;;8461:88;-1:-1;;;;;8578:2;8569:12;;8562:88;8678:2;8669:12;;8426:261;8695:110;8768:31;8793:5;8768:31;;8812:104;8881:29;8904:5;8881:29;;8923:193;9031:2;9016:18;;9045:61;9020:9;9079:6;9045:61;;9123:395;9287:2;9272:18;;9301:61;9276:9;9335:6;9301:61;;;9373:62;9431:2;9420:9;9416:18;9407:6;9373:62;;;9446;9504:2;9493:9;9489:18;9480:6;9446:62;;9525:581;9735:3;9720:19;;9750:61;9724:9;9784:6;9750:61;;;9822:62;9880:2;9869:9;9865:18;9856:6;9822:62;;;9895;9953:2;9942:9;9938:18;9929:6;9895:62;;;10005:9;9999:4;9995:20;9990:2;9979:9;9975:18;9968:48;10030:66;10091:4;10082:6;10030:66;;;10022:74;9706:400;-1:-1;;;;;;9706:400;10113:341;10271:2;10285:47;;;10256:18;;10346:98;10256:18;10430:6;10346:98;;10461:181;10563:2;10548:18;;10577:55;10552:9;10605:6;10577:55;;10649:273;10773:2;10787:47;;;10758:18;;10848:64;10758:18;10898:6;10848:64;;10929:387;11110:2;11124:47;;;11095:18;;11185:121;11095:18;11185:121;;11323:185;11427:2;11412:18;;11441:57;11416:9;11471:6;11441:57;;11515:286;11647:2;11632:18;;11661:57;11636:9;11691:6;11661:57;;;11729:62;11787:2;11776:9;11772:18;11763:6;11729:62;;11808:573;12014:3;11999:19;;12029:57;12003:9;12059:6;12029:57;;12388:256;12450:2;12444:9;12476:17;;;-1:-1;;;;;12536:34;;12572:22;;;12533:62;12530:2;;;12608:1;12605;12598:12;12530:2;12624;12617:22;12428:216;;-1:-1;12428:216;12651:258;;-1:-1;;;;;12802:6;12799:30;12796:2;;;12842:1;12839;12832:12;12796:2;-1:-1;12871:4;12859:17;;;12889:15;;12733:176;13451:254;;-1:-1;;;;;13582:6;13579:30;13576:2;;;13622:1;13619;13612:12;13576:2;-1:-1;13695:4;13666;13643:17;;;;-1:-1;;13639:33;13685:15;;13513:192;13979:121;14088:4;14076:17;;14057:43;14109:107;14199:12;;14183:33;14547:128;-1:-1;;;;;14616:54;;14599:76;14682:92;14755:13;14748:21;;14731:43;14867:88;14945:4;14934:16;;14917:38;15184:145;15265:6;15260:3;15255;15242:30;-1:-1;15321:1;15303:16;;15296:27;15235:94;15338:268;15403:1;15410:101;15424:6;15421:1;15418:13;15410:101;;;15491:11;;;15485:18;15472:11;;;15465:39;15446:2;15439:10;15410:101;;;15526:6;15523:1;15520:13;15517:2;;;15591:1;15582:6;15577:3;15573:16;15566:27;15517:2;15387:219;;;;;15614:97;15702:2;15682:14;-1:-1;;15678:28;;15662:49"
			}
		}
	},
	"sources": {
		"current/protocol/AssetProxy/ERC20Proxy.sol": {
			"id": 0
		},
		"current/protocol/AssetProxy/ERC721Proxy.sol": {
			"id": 1
		},
		"current/protocol/AssetProxy/MixinAssetProxy.sol": {
			"id": 2
		},
		"current/protocol/AssetProxy/MixinAuthorizable.sol": {
			"id": 3
		},
		"current/protocol/AssetProxy/interfaces/IAssetProxy.sol": {
			"id": 4
		},
		"current/protocol/AssetProxy/interfaces/IAuthorizable.sol": {
			"id": 5
		},
		"current/protocol/AssetProxy/mixins/MAssetProxy.sol": {
			"id": 6
		},
		"current/protocol/AssetProxy/mixins/MAuthorizable.sol": {
			"id": 7
		},
		"current/test/TestAssetDataDecoders/TestAssetDataDecoders.sol": {
			"id": 8
		},
		"current/tokens/ERC20Token/IERC20Token.sol": {
			"id": 9
		},
		"current/tokens/ERC721Token/ERC721Token.sol": {
			"id": 10
		},
		"current/tokens/ERC721Token/IERC721Receiver.sol": {
			"id": 11
		},
		"current/tokens/ERC721Token/IERC721Token.sol": {
			"id": 12
		},
		"current/utils/LibBytes/LibBytes.sol": {
			"id": 13
		},
		"current/utils/LibMem/LibMem.sol": {
			"id": 14
		},
		"current/utils/Ownable/IOwnable.sol": {
			"id": 15
		},
		"current/utils/Ownable/Ownable.sol": {
			"id": 16
		},
		"current/utils/SafeMath/SafeMath.sol": {
			"id": 17
		}
	},
	"sourceCodes": {
		"current/protocol/AssetProxy/ERC20Proxy.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../../utils/LibBytes/LibBytes.sol\";\nimport \"../../tokens/ERC20Token/IERC20Token.sol\";\nimport \"./MixinAssetProxy.sol\";\nimport \"./MixinAuthorizable.sol\";\n\ncontract ERC20Proxy is\n    LibBytes,\n    MixinAssetProxy,\n    MixinAuthorizable\n{\n\n    // Id of this proxy.\n    uint8 constant PROXY_ID = 1;\n\n    // Revert reasons\n    string constant INVALID_ASSET_DATA_LENGTH = \"Asset data must have a length of 21.\";\n    string constant TRANSFER_FAILED = \"Transfer failed.\";\n    string constant PROXY_ID_MISMATCH = \"Proxy id in metadata does not match this proxy id.\";\n\n    /// @dev Internal version of `transferFrom`.\n    /// @param assetData Encoded byte array.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFromInternal(\n        bytes memory assetData,\n        address from,\n        address to,\n        uint256 amount)\n        internal\n    {\n        // Decode proxy data.\n        (\n            uint8 proxyId,\n            address token\n        ) = decodeERC20AssetData(assetData);\n\n        // Data must be intended for this proxy.\n        require(\n            proxyId == PROXY_ID,\n            PROXY_ID_MISMATCH\n        );\n\n        // Transfer tokens.\n        bool success = IERC20Token(token).transferFrom(from, to, amount);\n        require(\n            success == true,\n            TRANSFER_FAILED\n        );\n    }\n\n    /// @dev Gets the proxy id associated with the proxy address.\n    /// @return Proxy id.\n    function getProxyId()\n        external\n        view\n        returns (uint8)\n    {\n        return PROXY_ID;\n    }\n\n    /// @dev Decodes ERC20 Asset data.\n    /// @param assetData Encoded byte array.\n    /// @return proxyId Intended ERC20 proxy id.\n    /// @return token ERC20 token address.\n    function decodeERC20AssetData(bytes memory assetData)\n        internal\n        pure\n        returns (\n            uint8 proxyId,\n            address token\n        )\n    {\n        // Validate encoded data length\n        require(\n            assetData.length == 21,\n            INVALID_ASSET_DATA_LENGTH\n        );\n\n        // Decode data\n        proxyId = uint8(assetData[0]);\n        token = readAddress(assetData, 1);\n\n        return (proxyId, token);\n    }\n}\n",
		"current/protocol/AssetProxy/ERC721Proxy.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../../utils/LibBytes/LibBytes.sol\";\nimport \"../../tokens/ERC721Token/ERC721Token.sol\";\nimport \"./MixinAssetProxy.sol\";\nimport \"./MixinAuthorizable.sol\";\n\ncontract ERC721Proxy is\n    LibBytes,\n    MixinAssetProxy,\n    MixinAuthorizable\n{\n\n    // Id of this proxy.\n    uint8 constant PROXY_ID = 2;\n\n    // Revert reasons\n    string constant INVALID_ASSET_DATA_LENGTH = \"Asset data must have a length of at least 53.\";\n    string constant INVALID_TRANSFER_AMOUNT = \"Transfer amount must equal 1.\";\n    string constant PROXY_ID_MISMATCH = \"Proxy id in metadata does not match this proxy id.\";\n\n    /// @dev Internal version of `transferFrom`.\n    /// @param assetData Encoded byte array.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFromInternal(\n        bytes memory assetData,\n        address from,\n        address to,\n        uint256 amount)\n        internal\n    {\n        // Decode proxy data.\n        (\n            uint8 proxyId,\n            address token,\n            uint256 tokenId,\n            bytes memory receiverData\n        ) = decodeERC721AssetData(assetData);\n\n        // Data must be intended for this proxy.\n        require(\n            proxyId == PROXY_ID,\n            PROXY_ID_MISMATCH\n        );\n\n        // There exists only 1 of each token.\n        require(\n            amount == 1,\n            INVALID_TRANSFER_AMOUNT\n        );\n\n        // Transfer token. Saves gas by calling safeTransferFrom only\n        // when there is receiverData present. Either succeeds or throws.\n        if(receiverData.length > 0) {\n            ERC721Token(token).safeTransferFrom(from, to, tokenId, receiverData);\n        } else {\n            ERC721Token(token).transferFrom(from, to, tokenId);\n        }\n    }\n\n    /// @dev Gets the proxy id associated with the proxy address.\n    /// @return Proxy id.\n    function getProxyId()\n        external\n        view\n        returns (uint8)\n    {\n        return PROXY_ID;\n    }\n\n    /// @dev Decodes ERC721 Asset data.\n    /// @param assetData Encoded byte array.\n    /// @return proxyId Intended ERC721 proxy id.\n    /// @return token ERC721 token address.\n    /// @return tokenId ERC721 token id.\n    /// @return receiverData Additional data with no specific format, which\n    ///                      is passed to the receiving contract's onERC721Received.\n    function decodeERC721AssetData(bytes memory assetData)\n        internal\n        pure\n        returns (\n            uint8 proxyId,\n            address token,\n            uint256 tokenId,\n            bytes memory receiverData\n        )\n    {\n        // Validate encoded data length\n        require(\n            assetData.length >= 53,\n            INVALID_ASSET_DATA_LENGTH\n        );\n\n        // Decode asset data\n        proxyId = uint8(assetData[0]);\n        token = readAddress(assetData, 1);\n        tokenId = readUint256(assetData, 21);\n        if (assetData.length > 53) {\n            receiverData = readBytes(assetData, 53);\n        }\n\n        return (\n            proxyId,\n            token,\n            tokenId,\n            receiverData\n        );\n    }\n}\n",
		"current/protocol/AssetProxy/MixinAssetProxy.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"./mixins/MAssetProxy.sol\";\nimport \"./mixins/MAuthorizable.sol\";\n\ncontract MixinAssetProxy is \n    MAuthorizable,\n    MAssetProxy\n{\n\n    /// @dev Transfers assets. Either succeeds or throws.\n    /// @param assetData Encoded byte array.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFrom(\n        bytes assetData,\n        address from,\n        address to,\n        uint256 amount)\n        external\n        onlyAuthorized\n    {\n        transferFromInternal(\n            assetData,\n            from,\n            to,\n            amount\n        );\n    }\n\n    /// @dev Makes multiple transfers of assets. Either succeeds or throws.\n    /// @param assetData Array of byte arrays encoded for the respective asset proxy.\n    /// @param from Array of addresses to transfer assets from.\n    /// @param to Array of addresses to transfer assets to.\n    /// @param amounts Array of amounts of assets to transfer.\n    function batchTransferFrom(\n        bytes[] memory assetData,\n        address[] memory from,\n        address[] memory to,\n        uint256[] memory amounts)\n        public\n        onlyAuthorized\n    {\n        for (uint256 i = 0; i < assetData.length; i++) {\n            transferFromInternal(\n                assetData[i],\n                from[i],\n                to[i],\n                amounts[i]\n            );\n        }\n    }\n}\n",
		"current/protocol/AssetProxy/MixinAuthorizable.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"./mixins/MAuthorizable.sol\";\nimport \"../../utils/Ownable/Ownable.sol\";\n\ncontract MixinAuthorizable is\n    Ownable,\n    MAuthorizable\n{\n\n    // Revert reasons\n    string constant SENDER_NOT_AUTHORIZED = \"Sender not authorized to call this method.\";\n    string constant TARGET_NOT_AUTHORIZED = \"Target address must be authorized.\";\n    string constant TARGET_ALREADY_AUTHORIZED = \"Target must not already be authorized.\";\n    string constant INDEX_OUT_OF_BOUNDS = \"Specified array index is out of bounds.\";\n    string constant INDEX_ADDRESS_MISMATCH = \"Address found at index does not match target address.\";\n\n    /// @dev Only authorized addresses can invoke functions with this modifier.\n    modifier onlyAuthorized {\n        require(\n            authorized[msg.sender],\n            SENDER_NOT_AUTHORIZED\n        );\n        _;\n    }\n\n    mapping (address => bool) public authorized;\n    address[] public authorities;\n\n    /// @dev Authorizes an address.\n    /// @param target Address to authorize.\n    function addAuthorizedAddress(address target)\n        external\n        onlyOwner\n    {\n        require(\n            !authorized[target],\n            TARGET_ALREADY_AUTHORIZED\n        );\n\n        authorized[target] = true;\n        authorities.push(target);\n        emit AuthorizedAddressAdded(target, msg.sender);\n    }\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    function removeAuthorizedAddress(address target)\n        external\n        onlyOwner\n    {\n        require(\n            authorized[target],\n            TARGET_NOT_AUTHORIZED\n        );\n\n        delete authorized[target];\n        for (uint i = 0; i < authorities.length; i++) {\n            if (authorities[i] == target) {\n                authorities[i] = authorities[authorities.length - 1];\n                authorities.length -= 1;\n                break;\n            }\n        }\n        emit AuthorizedAddressRemoved(target, msg.sender);\n    }\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    /// @param index Index of target in authorities array.\n    function removeAuthorizedAddressAtIndex(address target, uint256 index)\n        external\n    {\n        require(\n            index < authorities.length,\n            INDEX_OUT_OF_BOUNDS\n        );\n        require(\n            authorities[index] == target,\n            INDEX_ADDRESS_MISMATCH\n        );\n\n        delete authorized[target];\n        authorities[index] = authorities[authorities.length - 1];\n        authorities.length -= 1;\n        emit AuthorizedAddressRemoved(target, msg.sender);\n    }\n\n    /// @dev Gets all authorized addresses.\n    /// @return Array of authorized addresses.\n    function getAuthorizedAddresses()\n        external\n        view\n        returns (address[] memory)\n    {\n        return authorities;\n    }\n}\n",
		"current/protocol/AssetProxy/interfaces/IAssetProxy.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"./IAuthorizable.sol\";\n\ncontract IAssetProxy is\n    IAuthorizable\n{\n\n    /// @dev Transfers assets. Either succeeds or throws.\n    /// @param assetData Byte array encoded for the respective asset proxy.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFrom(\n        bytes assetData,\n        address from,\n        address to,\n        uint256 amount)\n        external;\n    \n    /// @dev Makes multiple transfers of assets. Either succeeds or throws.\n    /// @param assetData Array of byte arrays encoded for the respective asset proxy.\n    /// @param from Array of addresses to transfer assets from.\n    /// @param to Array of addresses to transfer assets to.\n    /// @param amounts Array of amounts of assets to transfer.\n    function batchTransferFrom(\n        bytes[] memory assetData,\n        address[] memory from,\n        address[] memory to,\n        uint256[] memory amounts)\n        public;\n\n    /// @dev Gets the proxy id associated with the proxy address.\n    /// @return Proxy id.\n    function getProxyId()\n        external\n        view\n        returns (uint8);\n}\n\n",
		"current/protocol/AssetProxy/interfaces/IAuthorizable.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../../../utils/Ownable/IOwnable.sol\";\n\ncontract IAuthorizable is\n    IOwnable\n{\n\n    /// @dev Gets all authorized addresses.\n    /// @return Array of authorized addresses.\n    function getAuthorizedAddresses()\n        external\n        view\n        returns (address[]);\n\n    /// @dev Authorizes an address.\n    /// @param target Address to authorize.\n    function addAuthorizedAddress(address target)\n        external;\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    function removeAuthorizedAddress(address target)\n        external;\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    /// @param index Index of target in authorities array.\n    function removeAuthorizedAddressAtIndex(address target, uint256 index)\n        external;\n}\n",
		"current/protocol/AssetProxy/mixins/MAssetProxy.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IAssetProxy.sol\";\n\ncontract MAssetProxy is\n    IAssetProxy\n{\n\n    /// @dev Internal version of `transferFrom`.\n    /// @param assetData Encoded byte array.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    function transferFromInternal(\n        bytes memory assetData,\n        address from,\n        address to,\n        uint256 amount)\n        internal;\n}\n",
		"current/protocol/AssetProxy/mixins/MAuthorizable.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IAuthorizable.sol\";\n\ncontract MAuthorizable is\n    IAuthorizable\n{\n\n    // Event logged when a new address is authorized.\n    event AuthorizedAddressAdded(\n        address indexed target,\n        address indexed caller\n    );\n\n    // Event logged when a currently authorized address is unauthorized.\n    event AuthorizedAddressRemoved(\n        address indexed target,\n        address indexed caller\n    );\n\n    /// @dev Only authorized addresses can invoke functions with this modifier.\n    modifier onlyAuthorized { _; }\n}\n",
		"current/test/TestAssetDataDecoders/TestAssetDataDecoders.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../../protocol/AssetProxy/ERC20Proxy.sol\";\nimport \"../../protocol/AssetProxy/ERC721Proxy.sol\";\n\ncontract TestAssetDataDecoders is\n    ERC20Proxy,\n    ERC721Proxy\n{\n\n    /// @dev Decodes ERC20 Asset data.\n    /// @param assetData Encoded byte array.\n    /// @return proxyId Intended ERC20 proxy id.\n    /// @return token ERC20 token address.\n    function publicDecodeERC20Data(bytes memory assetData)\n        public\n        pure\n        returns (\n            uint8 proxyId,\n            address token\n        )\n    {\n        (proxyId, token) = decodeERC20AssetData(assetData);\n        return (proxyId, token);\n    }\n\n    /// @dev Decodes ERC721 Asset data.\n    /// @param assetData Encoded byte array.\n    /// @return proxyId Intended ERC721 proxy id.\n    /// @return token ERC721 token address.\n    /// @return tokenId ERC721 token id.\n    /// @return receiverData Additional data with no specific format, which\n    ///                      is passed to the receiving contract's onERC721Received.\n    function publicDecodeERC721Data(bytes memory assetData)\n        public\n        pure\n        returns (\n            uint8 proxyId,\n            address token,\n            uint256 tokenId,\n            bytes memory receiverData\n        )\n    {\n        (\n            proxyId,\n            token,\n            tokenId,\n            receiverData\n        ) = decodeERC721AssetData(assetData);\n\n        return (\n            proxyId,\n            token,\n            tokenId,\n            receiverData\n        );\n    }\n}\n",
		"current/tokens/ERC20Token/IERC20Token.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\ncontract IERC20Token {\n\n    /// @notice send `value` token to `to` from `msg.sender`\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return Whether the transfer was successful or not\n    function transfer(address _to, uint256 _value)\n        public\n        returns (bool);\n\n    /// @notice send `value` token to `to` from `from` on the condition it is approved by `from`\n    /// @param _from The address of the sender\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return Whether the transfer was successful or not\n    function transferFrom(address _from, address _to, uint256 _value)\n        public\n        returns (bool);\n    \n    /// @notice `msg.sender` approves `_spender` to spend `_value` tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _value The amount of wei to be approved for transfer\n    /// @return Whether the approval was successful or not\n    function approve(address _spender, uint256 _value)\n        public\n        returns (bool);\n\n    /// @param _owner The address from which the balance will be retrieved\n    /// @return The balance\n    function balanceOf(address _owner)\n        public view\n        returns (uint256);\n\n    /// @param _owner The address of the account owning tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address _owner, address _spender)\n        public view\n        returns (uint256);\n\n    event Transfer(\n        address indexed _from,\n        address indexed _to,\n        uint256 _value\n    );\n    \n    event Approval(\n        address indexed _owner,\n        address indexed _spender,\n        uint256 _value\n    );\n}\n",
		"current/tokens/ERC721Token/ERC721Token.sol": "/*\nThe MIT License (MIT)\n\nCopyright (c) 2016 Smart Contract Solutions, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\npragma solidity ^0.4.24;\n\nimport \"./IERC721Token.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"../../utils/SafeMath/SafeMath.sol\";\n\n/**\n * @title ERC721 Non-Fungible Token Standard basic implementation\n * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n * Modified from https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/ERC721/ERC721BasicToken.sol\n */\ncontract ERC721Token is\n    IERC721Token,\n    SafeMath\n{\n    // Equals to `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`\n    // which can be also obtained as `ERC721Receiver(0).onERC721Received.selector`\n    bytes4 constant ERC721_RECEIVED = 0xf0b9e5ba;\n\n    // Mapping from token ID to owner\n    mapping (uint256 => address) internal tokenOwner;\n\n    // Mapping from token ID to approved address\n    mapping (uint256 => address) internal tokenApprovals;\n\n    // Mapping from owner to number of owned token\n    mapping (address => uint256) internal ownedTokensCount;\n\n    // Mapping from owner to operator approvals\n    mapping (address => mapping (address => bool)) internal operatorApprovals;\n\n    /**\n    * @dev Guarantees msg.sender is owner of the given token\n    * @param _tokenId uint256 ID of the token to validate its ownership belongs to msg.sender\n    */\n    modifier onlyOwnerOf(uint256 _tokenId) {\n        require(ownerOf(_tokenId) == msg.sender);\n        _;\n    }\n\n    /**\n    * @dev Checks msg.sender can transfer a token, by being owner, approved, or operator\n    * @param _tokenId uint256 ID of the token to validate\n    */\n    modifier canTransfer(uint256 _tokenId) {\n        require(isApprovedOrOwner(msg.sender, _tokenId));\n        _;\n    }\n\n    function ERC721Token(\n        string _name,\n        string _symbol)\n        public\n    {\n        name_ = _name;\n        symbol_ = _symbol;\n    }\n\n    /**\n    * @dev Gets the token name\n    * @return string representing the token name\n    */\n    function name()\n        public\n        view\n        returns (string)\n    {\n        return name_;\n    }\n\n    /**\n    * @dev Gets the token symbol\n    * @return string representing the token symbol\n    */\n    function symbol()\n        public\n        view\n        returns (string)\n    {\n        return symbol_;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address\n    * @param _owner address to query the balance of\n    * @return uint256 representing the amount owned by the passed address\n    */\n    function balanceOf(address _owner)\n        public\n        view\n        returns (uint256)\n    {\n        require(_owner != address(0));\n        return ownedTokensCount[_owner];\n    }\n\n    /**\n    * @dev Gets the owner of the specified token ID\n    * @param _tokenId uint256 ID of the token to query the owner of\n    * @return owner address currently marked as the owner of the given token ID\n    */\n    function ownerOf(uint256 _tokenId)\n        public\n        view\n        returns (address)\n    {\n        address owner = tokenOwner[_tokenId];\n        require(owner != address(0));\n        return owner;\n    }\n\n    /**\n    * @dev Returns whether the specified token exists\n    * @param _tokenId uint256 ID of the token to query the existance of\n    * @return whether the token exists\n    */\n    function exists(uint256 _tokenId)\n        public\n        view\n        returns (bool)\n    {\n        address owner = tokenOwner[_tokenId];\n        return owner != address(0);\n    }\n\n    /**\n    * @dev Approves another address to transfer the given token ID\n    * @dev The zero address indicates there is no approved address.\n    * @dev There can only be one approved address per token at a given time.\n    * @dev Can only be called by the token owner or an approved operator.\n    * @param _to address to be approved for the given token ID\n    * @param _tokenId uint256 ID of the token to be approved\n    */\n    function approve(address _to, uint256 _tokenId)\n        public\n    {\n        address owner = ownerOf(_tokenId);\n        require(_to != owner);\n        require(msg.sender == owner || isApprovedForAll(owner, msg.sender));\n\n        if (getApproved(_tokenId) != address(0) || _to != address(0)) {\n            tokenApprovals[_tokenId] = _to;\n            emit Approval(owner, _to, _tokenId);\n        }\n    }\n\n    /**\n    * @dev Gets the approved address for a token ID, or zero if no address set\n    * @param _tokenId uint256 ID of the token to query the approval of\n    * @return address currently approved for a the given token ID\n    */\n    function getApproved(uint256 _tokenId)\n        public\n        view\n        returns (address)\n    {\n        return tokenApprovals[_tokenId];\n    }\n\n    /**\n    * @dev Sets or unsets the approval of a given operator\n    * @dev An operator is allowed to transfer all tokens of the sender on their behalf\n    * @param _to operator address to set the approval\n    * @param _approved representing the status of the approval to be set\n    */\n    function setApprovalForAll(address _to, bool _approved)\n        public\n    {\n        require(_to != msg.sender);\n        operatorApprovals[msg.sender][_to] = _approved;\n        emit ApprovalForAll(msg.sender, _to, _approved);\n    }\n\n    /**\n    * @dev Tells whether an operator is approved by a given owner\n    * @param _owner owner address which you want to query the approval of\n    * @param _operator operator address which you want to query the approval of\n    * @return bool whether the given operator is approved by the given owner\n    */\n    function isApprovedForAll(address _owner, address _operator)\n        public\n        view\n        returns (bool)\n    {\n        return operatorApprovals[_owner][_operator];\n    }\n\n    /**\n    * @dev Transfers the ownership of a given token ID to another address\n    * @dev Usage of this method is discouraged, use `safeTransferFrom` whenever possible\n    * @dev Requires the msg sender to be the owner, approved, or operator\n    * @param _from current owner of the token\n    * @param _to address to receive the ownership of the given token ID\n    * @param _tokenId uint256 ID of the token to be transferred\n    */\n    function transferFrom(address _from, address _to, uint256 _tokenId)\n        public\n        canTransfer(_tokenId)\n    {\n        require(_from != address(0));\n        require(_to != address(0));\n\n        clearApproval(_from, _tokenId);\n        removeTokenFrom(_from, _tokenId);\n        addTokenTo(_to, _tokenId);\n\n        emit Transfer(_from, _to, _tokenId);\n    }\n\n    /**\n    * @dev Safely transfers the ownership of a given token ID to another address\n    * @dev If the target address is a contract, it must implement `onERC721Received`,\n    *  which is called upon a safe transfer, and return the magic value\n    *  `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`; otherwise,\n    *  the transfer is reverted.\n    * @dev Requires the msg sender to be the owner, approved, or operator\n    * @param _from current owner of the token\n    * @param _to address to receive the ownership of the given token ID\n    * @param _tokenId uint256 ID of the token to be transferred\n    */\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId)\n        public\n        canTransfer(_tokenId)\n    {\n        // solium-disable-next-line arg-overflow\n        safeTransferFrom(_from, _to, _tokenId, \"\");\n    }\n\n    /**\n    * @dev Safely transfers the ownership of a given token ID to another address\n    * @dev If the target address is a contract, it must implement `onERC721Received`,\n    *  which is called upon a safe transfer, and return the magic value\n    *  `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`; otherwise,\n    *  the transfer is reverted.\n    * @dev Requires the msg sender to be the owner, approved, or operator\n    * @param _from current owner of the token\n    * @param _to address to receive the ownership of the given token ID\n    * @param _tokenId uint256 ID of the token to be transferred\n    * @param _data bytes data to send along with a safe transfer check\n    */\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId,\n        bytes _data)\n        public\n        canTransfer(_tokenId)\n    {\n        transferFrom(_from, _to, _tokenId);\n        // solium-disable-next-line arg-overflow\n        require(checkAndCallSafeTransfer(_from, _to, _tokenId, _data));\n    }\n\n    /**\n    * @dev Returns whether the given spender can transfer a given token ID\n    * @param _spender address of the spender to query\n    * @param _tokenId uint256 ID of the token to be transferred\n    * @return bool whether the msg.sender is approved for the given token ID,\n    *  is an operator of the owner, or is the owner of the token\n    */\n    function isApprovedOrOwner(address _spender, uint256 _tokenId)\n        internal\n        view\n        returns (bool)\n    {\n        address owner = ownerOf(_tokenId);\n        return _spender == owner || getApproved(_tokenId) == _spender || isApprovedForAll(owner, _spender);\n    }\n\n    /**\n    * @dev Internal function to mint a new token\n    * @dev Reverts if the given token ID already exists\n    * @param _to The address that will own the minted token\n    * @param _tokenId uint256 ID of the token to be minted by the msg.sender\n    */\n    function _mint(address _to, uint256 _tokenId)\n        internal\n    {\n        require(_to != address(0));\n        addTokenTo(_to, _tokenId);\n        emit Transfer(address(0), _to, _tokenId);\n    }\n\n    /**\n    * @dev Internal function to burn a specific token\n    * @dev Reverts if the token does not exist\n    * @param _tokenId uint256 ID of the token being burned by the msg.sender\n    */\n    function _burn(address _owner, uint256 _tokenId)\n        internal\n    {\n        clearApproval(_owner, _tokenId);\n        removeTokenFrom(_owner, _tokenId);\n        emit Transfer(_owner, address(0), _tokenId);\n    }\n\n    /**\n    * @dev Internal function to clear current approval of a given token ID\n    * @dev Reverts if the given address is not indeed the owner of the token\n    * @param _owner owner of the token\n    * @param _tokenId uint256 ID of the token to be transferred\n    */\n    function clearApproval(address _owner, uint256 _tokenId)\n        internal\n    {\n        require(ownerOf(_tokenId) == _owner);\n        if (tokenApprovals[_tokenId] != address(0)) {\n            tokenApprovals[_tokenId] = address(0);\n            emit Approval(_owner, address(0), _tokenId);\n        }\n    }\n\n    /**\n    * @dev Internal function to add a token ID to the list of a given address\n    * @param _to address representing the new owner of the given token ID\n    * @param _tokenId uint256 ID of the token to be added to the tokens list of the given address\n    */\n    function addTokenTo(address _to, uint256 _tokenId)\n        internal\n    {\n        require(tokenOwner[_tokenId] == address(0));\n        tokenOwner[_tokenId] = _to;\n        ownedTokensCount[_to] = safeAdd(ownedTokensCount[_to], 1);\n    }\n\n    /**\n    * @dev Internal function to remove a token ID from the list of a given address\n    * @param _from address representing the previous owner of the given token ID\n    * @param _tokenId uint256 ID of the token to be removed from the tokens list of the given address\n    */\n    function removeTokenFrom(address _from, uint256 _tokenId)\n        internal\n    {\n        require(ownerOf(_tokenId) == _from);\n        ownedTokensCount[_from] = safeSub(ownedTokensCount[_from], 1);\n        tokenOwner[_tokenId] = address(0);\n    }\n\n    /**\n    * @dev Internal function to invoke `onERC721Received` on a target address\n    * @dev The call is not executed if the target address is not a contract\n    * @param _from address representing the previous owner of the given token ID\n    * @param _to target address that will receive the tokens\n    * @param _tokenId uint256 ID of the token to be transferred\n    * @param _data bytes optional data to send along with the call\n    * @return whether the call correctly returned the expected magic value\n    */\n    function checkAndCallSafeTransfer(\n        address _from,\n        address _to,\n        uint256 _tokenId,\n        bytes _data)\n        internal\n        returns (bool)\n    {\n        if (!isContract(_to)) {\n            return true;\n        }\n        bytes4 retval = IERC721Receiver(_to).onERC721Received(_from, _tokenId, _data);\n        return (retval == ERC721_RECEIVED);\n    }\n\n    function isContract(address addr)\n        internal\n        view\n        returns (bool)\n    {\n        uint256 size;\n        // XXX Currently there is no better way to check if there is a contract in an address\n        // than to check the size of the code at that address.\n        // See https://ethereum.stackexchange.com/a/14016/36603\n        // for more details about how this works.\n        // TODO Check this again before the Serenity release, because all addresses will be\n        // contracts then.\n        assembly { size := extcodesize(addr) }  // solium-disable-line security/no-inline-assembly\n        return size > 0;\n    }\n}\n",
		"current/tokens/ERC721Token/IERC721Receiver.sol": "/*\nThe MIT License (MIT)\n\nCopyright (c) 2016 Smart Contract Solutions, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\npragma solidity ^0.4.24;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n *      rom ERC721 asset contracts.\n * Modified from https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/ERC721/ERC721Receiver.sol\n */\ncontract IERC721Receiver {\n    /**\n    * @dev Magic value to be returned upon successful reception of an NFT\n    *  Equals to `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`,\n    *  which can be also obtained as `ERC721Receiver(0).onERC721Received.selector`\n    */\n    bytes4 constant ERC721_RECEIVED = 0xf0b9e5ba;\n\n    /**\n    * @notice Handle the receipt of an NFT\n    * @dev The ERC721 smart contract calls this function on the recipient\n    *  after a `safetransfer`. This function MAY throw to revert and reject the\n    *  transfer. This function MUST use 50,000 gas or less. Return of other\n    *  than the magic value MUST result in the transaction being reverted.\n    *  Note: the contract address is always the message sender.\n    * @param _from The sending address\n    * @param _tokenId The NFT identifier which is being transfered\n    * @param _data Additional data with no specified format\n    * @return `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`\n    */\n    function onERC721Received(\n        address _from,\n        uint256 _tokenId,\n        bytes _data)\n        public\n        returns (bytes4);\n}\n",
		"current/tokens/ERC721Token/IERC721Token.sol": "/*\nThe MIT License (MIT)\n\nCopyright (c) 2016 Smart Contract Solutions, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\npragma solidity ^0.4.24;\n\n/**\n * @title ERC721 Non-Fungible Token Standard basic interface\n * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n * Modified from https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/ERC721/ERC721Basic.sol\n */\ncontract IERC721Token {\n    string internal name_;\n    string internal symbol_;\n\n    event Transfer(\n        address indexed _from,\n        address indexed _to,\n        uint256 _tokenId\n    );\n    event Approval(\n        address indexed _owner,\n        address indexed _approved,\n        uint256 _tokenId\n    );\n    event ApprovalForAll(\n        address indexed _owner,\n        address indexed _operator,\n        bool _approved\n    );\n\n    function name()\n        public\n        view\n        returns (string);\n    function symbol()\n        public\n        view\n        returns (string);\n\n    function balanceOf(address _owner)\n        public\n        view\n        returns (uint256 _balance);\n    function ownerOf(uint256 _tokenId)\n        public\n        view\n        returns (address _owner);\n    function exists(uint256 _tokenId)\n        public\n        view\n        returns (bool _exists);\n\n    function approve(address _to, uint256 _tokenId)\n        public;\n    function getApproved(uint256 _tokenId)\n        public\n        view\n        returns (address _operator);\n\n    function setApprovalForAll(address _operator, bool _approved)\n        public;\n    function isApprovedForAll(address _owner, address _operator)\n        public\n        view\n        returns (bool);\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId)\n        public;\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId)\n        public;\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId,\n        bytes _data)\n        public;\n}\n",
		"current/utils/LibBytes/LibBytes.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\nimport \"../LibMem/LibMem.sol\";\n\ncontract LibBytes is\n    LibMem\n{\n\n    // Revert reasons\n    string constant GTE_20_LENGTH_REQUIRED = \"Length must be greater than or equal to 20.\";\n    string constant GTE_32_LENGTH_REQUIRED = \"Length must be greater than or equal to 32.\";\n\n    /// @dev Tests equality of two byte arrays.\n    /// @param lhs First byte array to compare.\n    /// @param rhs Second byte array to compare.\n    /// @return True if arrays are the same. False otherwise.\n    function areBytesEqual(bytes memory lhs, bytes memory rhs)\n        internal\n        pure\n        returns (bool equal)\n    {\n        assembly {\n            // Get the number of words occupied by <lhs>\n            let lenFullWords := div(add(mload(lhs), 0x1F), 0x20)\n\n            // Add 1 to the number of words, to account for the length field\n            lenFullWords := add(lenFullWords, 0x1)\n\n            // Test equality word-by-word.\n            // Terminates early if there is a mismatch.\n            for {let i := 0} lt(i, lenFullWords) {i := add(i, 1)} {\n                let lhsWord := mload(add(lhs, mul(i, 0x20)))\n                let rhsWord := mload(add(rhs, mul(i, 0x20)))\n                equal := eq(lhsWord, rhsWord)\n                if eq(equal, 0) {\n                    // Break\n                    i := lenFullWords\n                }\n            }\n       }\n\n       return equal;\n    }\n\n    /// @dev Reads an address from a position in a byte array.\n    /// @param b Byte array containing an address.\n    /// @param index Index in byte array of address.\n    /// @return address from byte array.\n    function readAddress(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (address result)\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        );\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Read address from array memory\n        assembly {\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 20-byte mask to obtain address\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n        return result;\n    }\n\n    /// @dev Writes an address into a specific position in a byte array.\n    /// @param b Byte array to insert address into.\n    /// @param index Index in byte array of address.\n    /// @param input Address to put into byte array.\n    function writeAddress(\n        bytes memory b,\n        uint256 index,\n        address input\n    )\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        );\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Store address into array memory\n        assembly {\n            // The address occupies 20 bytes and mstore stores 32 bytes.\n            // First fetch the 32-byte word where we'll be storing the address, then\n            // apply a mask so we have only the bytes in the word that the address will not occupy.\n            // Then combine these bytes with the address and store the 32 bytes back to memory with mstore.\n\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 12-byte mask to obtain extra bytes occupying word of memory where we'll store the address\n            let neighbors := and(mload(add(b, index)), 0xffffffffffffffffffffffff0000000000000000000000000000000000000000)\n\n            // Store the neighbors and address into memory\n            mstore(add(b, index), xor(input, neighbors))\n        }\n    }\n\n    /// @dev Reads a bytes32 value from a position in a byte array.\n    /// @param b Byte array containing a bytes32 value.\n    /// @param index Index in byte array of bytes32 value.\n    /// @return bytes32 value from byte array.\n    function readBytes32(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes32 result)\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            result := mload(add(b, index))\n        }\n        return result;\n    }\n\n    /// @dev Writes a bytes32 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input bytes32 to put into byte array.\n    function writeBytes32(\n        bytes memory b,\n        uint256 index,\n        bytes32 input\n    )\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            mstore(add(b, index), input)\n        }\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return uint256 value from byte array.\n    function readUint256(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (uint256 result)\n    {\n        return uint256(readBytes32(b, index));\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input uint256 to put into byte array.\n    function writeUint256(\n        bytes memory b,\n        uint256 index,\n        uint256 input\n    )\n        internal\n        pure\n    {\n        writeBytes32(b, index, bytes32(input));\n    }\n\n    /// @dev Reads nested bytes from a specific position.\n    /// @param b Byte array containing nested bytes.\n    /// @param index Index of nested bytes.\n    /// @return result Nested bytes.\n    function readBytes(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes memory result)\n    {\n        // Read length of nested bytes\n        uint256 nestedBytesLength = readUint256(b, index);\n        index += 32;\n\n        // Assert length of <b> is valid, given\n        // length of nested bytes\n        require(\n            b.length >= index + nestedBytesLength,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Allocate memory and copy value to result\n        result = new bytes(nestedBytesLength);\n        memcpy(\n            getMemAddress(result) + 32, // +32 skips array length\n            getMemAddress(b) + index + 32,\n            nestedBytesLength\n        );\n\n        return result;\n    }\n\n    /// @dev Inserts bytes at a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input bytes to insert.\n    function writeBytes(\n        bytes memory b,\n        uint256 index,\n        bytes memory input\n    )\n        internal\n        pure\n    {\n        // Read length of nested bytes\n        require(\n            b.length >= index + 32 /* 32 bytes to store length */ + input.length,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Copy <input> into <b>\n        memcpy(\n            getMemAddress(b) + index + 32,  // +32 to skip length of <b>\n            getMemAddress(input),           // include length of byte array\n            input.length + 32               // +32 bytes to store length\n        );\n    }\n}\n",
		"current/utils/LibMem/LibMem.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract LibMem\n{\n\n    /// @dev Gets the memory address for a byte array.\n    /// @param input Byte array to lookup.\n    /// @return memoryAddress Memory address of byte array.\n    function getMemAddress(bytes memory input)\n        internal\n        pure\n        returns (uint256 memoryAddress)\n    {\n        assembly {\n            memoryAddress := input\n        }\n        return memoryAddress;\n    }\n\n    /// @dev Copies `length` bytes from memory location `source` to `dest`.\n    /// @param dest memory address to copy bytes to.\n    /// @param source memory address to copy bytes from.\n    /// @param length number of bytes to copy.\n    function memcpy(\n        uint256 dest,\n        uint256 source,\n        uint256 length\n    )\n        internal\n        pure\n    {\n        if (length < 32) {\n            // Handle a partial word by reading destination and masking\n            // off the bits we are interested in.\n            // This correctly handles overlap, zero lengths and source == dest\n            assembly {\n                let mask := sub(exp(256, sub(32, length)), 1)\n                let s := and(mload(source), not(mask))\n                let d := and(mload(dest), mask)\n                mstore(dest, or(s, d))\n            }\n        } else {\n            // Skip the O(length) loop when source == dest.\n            if (source == dest) {\n                return;\n            }\n\n            // For large copies we copy whole words at a time. The final\n            // word is aligned to the end of the range (instead of after the\n            // previous) to handle partial words. So a copy will look like this:\n            //\n            //  ####\n            //      ####\n            //          ####\n            //            ####\n            //\n            // We handle overlap in the source and destination range by\n            // changing the copying direction. This prevents us from\n            // overwriting parts of source that we still need to copy.\n            //\n            // This correctly handles source == dest\n            //\n            if (source > dest) {\n                assembly {\n                    // Record the total number of full words to copy\n                    let nwords := div(length, 32)\n\n                    // We subtract 32 from `send` and `dend` because it\n                    // is easier to compare with in the loop, and these\n                    // are also the addresses we need for copying the\n                    // last bytes.\n                    length := sub(length, 32)\n                    let send := add(source, length)\n                    let dend := add(dest, length)\n\n                    // Remember the last 32 bytes of source\n                    // This needs to be done here and not after the loop\n                    // because we may have overwritten the last bytes in\n                    // source already due to overlap.\n                    let last := mload(send)\n\n                    // Copy whole words front to back\n                    for {let i := 0} lt(i, nwords) {i := add(i, 1)} {\n                        mstore(dest, mload(source))\n                        source := add(source, 32)\n                        dest := add(dest, 32)\n                    }\n\n                    // Write the last 32 bytes\n                    mstore(dend, last)\n                }\n            } else {\n                assembly {\n                    // Record the total number of full words to copy\n                    let nwords := div(length, 32)\n\n                    // We subtract 32 from `send` and `dend` because those\n                    // are the starting points when copying a word at the end.\n                    length := sub(length, 32)\n                    let send := add(source, length)\n                    let dend := add(dest, length)\n\n                    // Remember the first 32 bytes of source\n                    // This needs to be done here and not after the loop\n                    // because we may have overwritten the first bytes in\n                    // source already due to overlap.\n                    let first := mload(source)\n\n                    // Copy whole words back to front\n                    for {let i := 0} lt(i, nwords) {i := add(i, 1)} {\n                        mstore(dend, mload(send))\n                        send := sub(send, 32)\n                        dend := sub(dend, 32)\n                    }\n\n                    // Write the first 32 bytes\n                    mstore(dest, first)\n                }\n            }\n        }\n    }\n}\n",
		"current/utils/Ownable/IOwnable.sol": "pragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\n/*\n * Ownable\n *\n * Base contract with an owner.\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\n */\n\ncontract IOwnable {\n    function transferOwnership(address newOwner)\n        public;\n}\n",
		"current/utils/Ownable/Ownable.sol": "pragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\n/*\n * Ownable\n *\n * Base contract with an owner.\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\n */\n\nimport \"./IOwnable.sol\";\n\ncontract Ownable is IOwnable {\n    address public owner;\n\n    constructor ()\n        public\n    {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(\n            msg.sender == owner,\n            \"Only contract owner is allowed to call this method.\"\n        );\n        _;\n    }\n\n    function transferOwnership(address newOwner)\n        public\n        onlyOwner\n    {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n}\n",
		"current/utils/SafeMath/SafeMath.sol": "pragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\ncontract SafeMath {\n    function safeMul(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function safeDiv(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint c = a / b;\n        return c;\n    }\n\n    function safeSub(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint a, uint b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n    function max64(uint64 a, uint64 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a >= b ? a : b;\n    }\n\n    function min64(uint64 a, uint64 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a < b ? a : b;\n    }\n\n    function max256(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a < b ? a : b;\n    }\n}\n"
	},
	"sourceTreeHashHex": "0x7532659da6fba997f9c81aba1a38b16b7721ba2d882d495cb504b5b688f0852c",
	"compiler": {
		"name": "solc",
		"version": "0.4.24",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 0
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap"
					]
				}
			}
		}
	},
	"networks": {}
}