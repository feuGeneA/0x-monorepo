{
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 947f222f... Style audit for proxies + libmem + libbytes
	"schemaVersion": "2.0.0",
	"contractName": "TestSignatureValidator",
	"compilerOutput": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"name": "hash",
						"type": "bytes32"
					},
					{
						"name": "signer",
						"type": "address"
					},
					{
						"name": "signature",
						"type": "bytes"
					}
				],
				"name": "preSign",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
<<<<<<< HEAD
<<<<<<< HEAD
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "transactions",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "validator",
						"type": "address"
					},
					{
						"name": "approval",
						"type": "bool"
					}
				],
				"name": "setSignatureValidatorApproval",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "address"
					},
					{
						"name": "",
						"type": "address"
					}
				],
				"name": "allowedValidators",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "bytes32"
					},
					{
						"name": "",
						"type": "address"
					}
				],
				"name": "preSigned",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
=======
>>>>>>> 5b211b9e... LibMem + TestLibMem + LibAssetProxyDecoder + DummyERC721Receiver
=======
>>>>>>> 947f222f... Style audit for proxies + libmem + libbytes
						"name": "hash",
						"type": "bytes32"
					},
					{
						"name": "signer",
						"type": "address"
					},
					{
						"name": "signature",
						"type": "bytes"
					}
				],
				"name": "publicIsValidSignature",
				"outputs": [
					{
						"name": "isValid",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
<<<<<<< HEAD
<<<<<<< HEAD
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "salt",
						"type": "uint256"
					},
					{
						"name": "signer",
						"type": "address"
					},
					{
						"name": "data",
						"type": "bytes"
					},
					{
						"name": "signature",
						"type": "bytes"
					}
				],
				"name": "executeTransaction",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "currentContextAddress",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
=======
>>>>>>> 5b211b9e... LibMem + TestLibMem + LibAssetProxyDecoder + DummyERC721Receiver
=======
>>>>>>> 947f222f... Style audit for proxies + libmem + libbytes
			}
		],
		"evm": {
			"bytecode": {
				"linkReferences": {},
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
				"object": "",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3683EF8E DUP2 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0x642F2EAF EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x77FCCE68 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x7B8E3514 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x82C174D0 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0xABBA41CC EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xBFC8BFCE EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xEEA086BA EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x94 CALLDATASIZE PUSH1 0x4 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF6 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0x10C CALLDATASIZE PUSH1 0x4 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x2F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x1CE DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x5DA SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x137E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x21C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP7 SWAP1 SWAP4 AND DUP3 MSTORE SWAP5 SWAP1 SWAP5 MSTORE SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F1 DUP5 DUP5 DUP5 PUSH2 0x5DA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3F DUP2 MSTORE PUSH32 0x60657865637574655472616E73616374696F6E60206973206E6F7420616C6C6F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x77656420746F2063616C6C20697473656C66207265637572736976656C792E00 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP ADDRESS DUP7 DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP1 DUP6 SWAP1 KECCAK256 SLOAD PUSH1 0x60 DUP5 ADD DUP7 MSTORE PUSH1 0x26 DUP5 MSTORE PUSH32 0x5472616E73616374696F6E2068617320616C7265616479206265656E20657865 SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xD1 PUSH1 0x2 EXP PUSH6 0x31BABA32B217 MUL SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP10 POP SWAP8 POP POP PUSH1 0xFF AND ISZERO SWAP5 POP PUSH2 0x46B SWAP4 POP POP POP POP JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND CALLER EQ PUSH2 0x519 JUMPI PUSH2 0x4B7 DUP2 DUP8 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x5DA SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x137E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x4FC JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD ADDRESS SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E20657865637574696F6E206661696C65642E000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP3 POP ISZERO ISZERO SWAP1 POP PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP9 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x135E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP PUSH2 0x63C DUP9 PUSH2 0xC9F JUMP JUMPDEST PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x651 JUMPI INVALID JUMPDEST SWAP6 POP PUSH1 0x0 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x661 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x49 PUSH1 0x2 EXP PUSH23 0x24B63632B3B0B61039B4B3B730BA3AB932903A3CB83297 MUL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH2 0x213 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x129B JUMP JUMPDEST PUSH1 0x1 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x6C0 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x716 JUMPI DUP8 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x135E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP PUSH1 0x0 SWAP7 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x2 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x724 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x81A JUMPI DUP8 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x135E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x41 EQ PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x782 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP5 POP PUSH2 0x7A0 DUP9 PUSH1 0x1 PUSH2 0xD29 JUMP JUMPDEST SWAP4 POP PUSH2 0x7AD DUP9 PUSH1 0x21 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP11 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7D2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP12 DUP2 AND SWAP1 DUP3 AND EQ SWAP9 POP SWAP3 POP PUSH2 0xC63 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x828 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x90D JUMPI DUP8 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x135E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x41 EQ PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x886 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP5 POP PUSH2 0x8A4 DUP9 PUSH1 0x1 PUSH2 0xD29 JUMP JUMPDEST SWAP4 POP PUSH2 0x8B1 DUP9 PUSH1 0x21 PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP14 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP5 POP PUSH1 0x1 SWAP2 PUSH2 0x7D2 SWAP2 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x4 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x91B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x97B JUMPI DUP8 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x135E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO PUSH2 0x967 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND CALLER EQ SWAP7 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x5 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x989 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0xB135D3F MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x9C0 SWAP1 DUP14 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xA12 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xFD8 JUMP JUMPDEST SWAP7 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x6 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0xA27 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xAA4 JUMPI PUSH2 0xA36 DUP9 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO ISZERO PUSH2 0xA71 JUMPI PUSH1 0x0 SWAP7 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0x49B1A381 MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND SWAP1 PUSH4 0x93634702 SWAP1 PUSH2 0x9C0 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x7 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0xAB2 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP7 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x8 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0xAF1 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xBD6 JUMPI DUP8 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x135E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x41 EQ PUSH2 0xB3F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xB4F JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP5 POP PUSH2 0xB6D DUP9 PUSH1 0x1 PUSH2 0xD29 JUMP JUMPDEST SWAP4 POP PUSH2 0xB7A DUP9 PUSH1 0x21 PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP14 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP5 POP PUSH1 0x1 SWAP2 PUSH2 0x7D2 SWAP2 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x7 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0xBE4 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xC15 JUMPI PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP7 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH2 0x213 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x129B JUMP JUMPDEST POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0xC97 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0xC99 JUMP JUMPDEST CALLER JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E20302E0000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 LT PUSH2 0xCFA JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP DUP2 MLOAD DUP3 SWAP1 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0xD0D JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD DUP3 MLOAD PUSH1 0x0 NOT ADD SWAP1 SWAP3 MSTORE POP PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x139E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xD92 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 DUP3 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x139E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790191817 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xE03 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP PUSH2 0xE12 DUP3 PUSH1 0x14 DUP5 MLOAD SUB PUSH2 0xE1F JUMP JUMPDEST DUP3 MLOAD PUSH1 0x13 NOT ADD SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x14 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x139E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790191817 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP POP ADD PUSH1 0x14 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP3 CALLDATALOAD PUSH2 0x12FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP3 CALLDATALOAD PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP3 MLOAD PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP3 CALLDATALOAD PUSH2 0x130E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0xEE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xF2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF3E PUSH2 0xF39 DUP3 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0xF5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF65 DUP4 DUP3 DUP5 PUSH2 0x1317 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF8D DUP6 DUP6 PUSH2 0xE9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF9E DUP6 DUP3 DUP7 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFC7 DUP6 DUP6 PUSH2 0xE9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF9E DUP6 DUP3 DUP7 ADD PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F1 DUP5 DUP5 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1008 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F1 DUP5 DUP5 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF8D DUP6 DUP6 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1055 DUP8 DUP8 PUSH2 0xEC6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1066 DUP8 DUP3 DUP9 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108E DUP8 DUP3 DUP9 ADD PUSH2 0xED2 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10BB DUP7 DUP7 PUSH2 0xEC6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10CC DUP7 DUP3 DUP8 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F4 DUP7 DUP3 DUP8 ADD PUSH2 0xF1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1123 DUP10 DUP10 PUSH2 0xEC6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x1134 DUP10 DUP3 DUP11 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x1150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x115C DUP10 DUP3 DUP11 ADD PUSH2 0xED2 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x117A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1186 DUP10 DUP3 DUP11 ADD PUSH2 0xED2 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x119E DUP2 PUSH2 0x12FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x119E DUP2 PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x119E DUP2 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C1 DUP3 PUSH2 0x12F9 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x11D5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x11DE DUP2 PUSH2 0x1353 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x119E DUP2 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC99 DUP3 DUP5 PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC99 DUP3 DUP5 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x121E DUP3 DUP7 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x122B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1195 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x123D DUP2 DUP5 PUSH2 0x11B6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x1254 DUP3 DUP6 PUSH2 0x11AD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2F1 DUP2 DUP5 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x1274 DUP3 DUP8 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x1281 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x128E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x123D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xEA7 DUP2 DUP5 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x12E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x133E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1326 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x134D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP 0x49 PUSH15 0x76616C6964207369676E6174757265 KECCAK256 PUSH13 0x656E6774682E00000000000000 MSTORE8 PUSH10 0x676E6174757265207661 PUSH13 0x69646174696F6E206661696C65 PUSH5 0x2E00000000 0x4c PUSH6 0x6E677468206D PUSH22 0x73742062652067726561746572207468616E206F7220 PUSH6 0xA265627A7A72 ADDRESS PC KECCAK256 0xe8 PUSH12 0x91BC4E05AA325FD7B6E6953B SIGNEXTEND DUP12 0xee CODESIZE 0x3f 0xae 0x21 0x49 SWAP8 0xea PUSH17 0x723A6C7B0F3CB46C6578706572696D656E PUSH21 0x616CF5003700000000000000000000000000000000 ",
				"sourceMap": "759:412:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;759:412:9;;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3683EF8E DUP2 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0x642F2EAF EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x77FCCE68 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x7B8E3514 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x82C174D0 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0xABBA41CC EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xBFC8BFCE EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xEEA086BA EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x94 CALLDATASIZE PUSH1 0x4 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF6 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0x10C CALLDATASIZE PUSH1 0x4 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x2F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x1CE DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x5DA SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x137E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x21C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP7 SWAP1 SWAP4 AND DUP3 MSTORE SWAP5 SWAP1 SWAP5 MSTORE SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F1 DUP5 DUP5 DUP5 PUSH2 0x5DA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3F DUP2 MSTORE PUSH32 0x60657865637574655472616E73616374696F6E60206973206E6F7420616C6C6F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x77656420746F2063616C6C20697473656C66207265637572736976656C792E00 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP ADDRESS DUP7 DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x14 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP1 DUP6 SWAP1 KECCAK256 SLOAD PUSH1 0x60 DUP5 ADD DUP7 MSTORE PUSH1 0x26 DUP5 MSTORE PUSH32 0x5472616E73616374696F6E2068617320616C7265616479206265656E20657865 SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xD1 PUSH1 0x2 EXP PUSH6 0x31BABA32B217 MUL SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP10 POP SWAP8 POP POP PUSH1 0xFF AND ISZERO SWAP5 POP PUSH2 0x46B SWAP4 POP POP POP POP JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND CALLER EQ PUSH2 0x519 JUMPI PUSH2 0x4B7 DUP2 DUP8 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x5DA SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x137E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x4FC JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD ADDRESS SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E20657865637574696F6E206661696C65642E000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP3 POP ISZERO ISZERO SWAP1 POP PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP9 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x135E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP PUSH2 0x63C DUP9 PUSH2 0xC9F JUMP JUMPDEST PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x651 JUMPI INVALID JUMPDEST SWAP6 POP PUSH1 0x0 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x661 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x49 PUSH1 0x2 EXP PUSH23 0x24B63632B3B0B61039B4B3B730BA3AB932903A3CB83297 MUL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH2 0x213 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x129B JUMP JUMPDEST PUSH1 0x1 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x6C0 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x716 JUMPI DUP8 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x135E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP PUSH1 0x0 SWAP7 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x2 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x724 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x81A JUMPI DUP8 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x135E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x41 EQ PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x782 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP5 POP PUSH2 0x7A0 DUP9 PUSH1 0x1 PUSH2 0xD29 JUMP JUMPDEST SWAP4 POP PUSH2 0x7AD DUP9 PUSH1 0x21 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP11 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7D2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP12 DUP2 AND SWAP1 DUP3 AND EQ SWAP9 POP SWAP3 POP PUSH2 0xC63 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x828 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x90D JUMPI DUP8 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x135E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x41 EQ PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x886 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP5 POP PUSH2 0x8A4 DUP9 PUSH1 0x1 PUSH2 0xD29 JUMP JUMPDEST SWAP4 POP PUSH2 0x8B1 DUP9 PUSH1 0x21 PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP14 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP5 POP PUSH1 0x1 SWAP2 PUSH2 0x7D2 SWAP2 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x4 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x91B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x97B JUMPI DUP8 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x135E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO PUSH2 0x967 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND CALLER EQ SWAP7 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x5 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x989 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0xB135D3F MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x9C0 SWAP1 DUP14 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xA12 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xFD8 JUMP JUMPDEST SWAP7 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x6 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0xA27 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xAA4 JUMPI PUSH2 0xA36 DUP9 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO ISZERO PUSH2 0xA71 JUMPI PUSH1 0x0 SWAP7 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0x49B1A381 MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND SWAP1 PUSH4 0x93634702 SWAP1 PUSH2 0x9C0 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x7 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0xAB2 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP7 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x8 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0xAF1 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xBD6 JUMPI DUP8 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x135E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x41 EQ PUSH2 0xB3F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xB4F JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP5 POP PUSH2 0xB6D DUP9 PUSH1 0x1 PUSH2 0xD29 JUMP JUMPDEST SWAP4 POP PUSH2 0xB7A DUP9 PUSH1 0x21 PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP14 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP5 POP PUSH1 0x1 SWAP2 PUSH2 0x7D2 SWAP2 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x7 DUP7 PUSH1 0x8 DUP2 GT ISZERO PUSH2 0xBE4 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xC15 JUMPI PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP7 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH2 0x213 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x129B JUMP JUMPDEST POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0xC97 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0xC99 JUMP JUMPDEST CALLER JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E20302E0000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 LT PUSH2 0xCFA JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP DUP2 MLOAD DUP3 SWAP1 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0xD0D JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD DUP3 MLOAD PUSH1 0x0 NOT ADD SWAP1 SWAP3 MSTORE POP PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x139E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xD92 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 DUP3 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x139E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790191817 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xE03 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP PUSH2 0xE12 DUP3 PUSH1 0x14 DUP5 MLOAD SUB PUSH2 0xE1F JUMP JUMPDEST DUP3 MLOAD PUSH1 0x13 NOT ADD SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x14 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x139E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790191817 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST POP POP ADD PUSH1 0x14 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP3 CALLDATALOAD PUSH2 0x12FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP3 CALLDATALOAD PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP3 MLOAD PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP3 CALLDATALOAD PUSH2 0x130E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0xEE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xF2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF3E PUSH2 0xF39 DUP3 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0xF5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF65 DUP4 DUP3 DUP5 PUSH2 0x1317 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF8D DUP6 DUP6 PUSH2 0xE9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF9E DUP6 DUP3 DUP7 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFC7 DUP6 DUP6 PUSH2 0xE9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF9E DUP6 DUP3 DUP7 ADD PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F1 DUP5 DUP5 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1008 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F1 DUP5 DUP5 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF8D DUP6 DUP6 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1055 DUP8 DUP8 PUSH2 0xEC6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1066 DUP8 DUP3 DUP9 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108E DUP8 DUP3 DUP9 ADD PUSH2 0xED2 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10BB DUP7 DUP7 PUSH2 0xEC6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10CC DUP7 DUP3 DUP8 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F4 DUP7 DUP3 DUP8 ADD PUSH2 0xF1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1123 DUP10 DUP10 PUSH2 0xEC6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x1134 DUP10 DUP3 DUP11 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x1150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x115C DUP10 DUP3 DUP11 ADD PUSH2 0xED2 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x117A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1186 DUP10 DUP3 DUP11 ADD PUSH2 0xED2 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x119E DUP2 PUSH2 0x12FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x119E DUP2 PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x119E DUP2 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C1 DUP3 PUSH2 0x12F9 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x11D5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x11DE DUP2 PUSH2 0x1353 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x119E DUP2 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC99 DUP3 DUP5 PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC99 DUP3 DUP5 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x121E DUP3 DUP7 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x122B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1195 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x123D DUP2 DUP5 PUSH2 0x11B6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x1254 DUP3 DUP6 PUSH2 0x11AD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2F1 DUP2 DUP5 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x1274 DUP3 DUP8 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x1281 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x128E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x123D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xEA7 DUP2 DUP5 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x12E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x133E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1326 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x134D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP 0x49 PUSH15 0x76616C6964207369676E6174757265 KECCAK256 PUSH13 0x656E6774682E00000000000000 MSTORE8 PUSH10 0x676E6174757265207661 PUSH13 0x69646174696F6E206661696C65 PUSH5 0x2E00000000 0x4c PUSH6 0x6E677468206D PUSH22 0x73742062652067726561746572207468616E206F7220 PUSH6 0xA265627A7A72 ADDRESS PC KECCAK256 0xe8 PUSH12 0x91BC4E05AA325FD7B6E6953B SIGNEXTEND DUP12 0xee CODESIZE 0x3f 0xae 0x21 0x49 SWAP8 0xea PUSH17 0x723A6C7B0F3CB46C6578706572696D656E PUSH21 0x616CF5003700000000000000000000000000000000 ",
				"sourceMap": "759:412:9:-;;;;;;;;;-1:-1:-1;;;759:412:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1528:285:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1528:285:0;;;;;;;;;;;945:45:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;945:45:1;;;;;;;;;;;;;;;;;;;;;;;;;2043:233:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2043:233:0;;;;;;;;;1129:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1129:71:0;;;;;;;;;1009:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1009:63:0;;;;;;;;;852:317:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;852:317:9;;;;;;;;;1397:1399:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1397:1399:1;;;;;;;;;1042:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1042:36:1;;;;;;;;;;;;1528:285:0;1674:41;1691:4;1697:6;1705:9;;1674:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1674:16:0;;-1:-1:-1;;;;;1674:41:0:i;:::-;1729:27;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1729:27:0;;;;;1653:113;;;;;;-1:-1:-1;;;;;1653:113:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1776:9:0;:15;;;;;;;;;;;-1:-1:-1;;;;;1776:23:0;;;;;;;;;;:30;;-1:-1:-1;;1776:30:0;1802:4;1776:30;;;1528:285::o;945:45:1:-;;;;;;;;;;;;;;;:::o;2043:233:0:-;2169:14;2186:26;:24;:26::i;:::-;-1:-1:-1;;;;;2222:25:0;;;;;;;:17;:25;;;;;;;;:36;;;;;;;;;;;;;:47;;-1:-1:-1;;2222:47:0;;;;;;;;;;-1:-1:-1;2043:233:0:o;1129:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1009:63::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;852:317:9:-;1013:12;1051:87;1081:4;1099:6;1119:9;1051:16;:87::i;:::-;1041:97;852:317;-1:-1:-1;;;;852:317:9:o;1397:1399:1:-;1604:21;;1653:22;;;;;;;;;;;;;;;;;;;;;;;;1734:23;;-1:-1:-1;;;;;1604:21:1;:35;1583:102;;;;-1:-1:-1;;;;;1583:102:1;;;;;;;;;;;1791:4;1810:6;1830:4;1848;;1760:102;;;;-1:-1:-1;;;;;1760:102:1;-1:-1:-1;;;;;1760:102:1;-1:-1:-1;;;1760:102:1;;;;;;-1:-1:-1;;;;;1760:102:1;-1:-1:-1;;;;;1760:102:1;-1:-1:-1;;;1760:102:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1949:29;;;;:12;:29;;;;;;;;;1992:26;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1992:26:1;;;;;;;1760:102;-1:-1:-1;1760:102:1;-1:-1:-1;;1949:29:1;;1948:30;;-1:-1:-1;1927:101:1;;-1:-1:-1;;;;1927:101:1;;;-1:-1:-1;;;;;1927:101:1;;;;;;;;;;-1:-1:-1;;;;;;2117:20:1;;2127:10;2117:20;2113:316;;2212:52;2229:15;2246:6;2254:9;;2212:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2212:16:1;;-1:-1:-1;;;;;2212:52:1:i;:::-;2282:27;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2282:27:1;;;;;2187:136;;;;;;-1:-1:-1;;;;;2187:136:1;;;;;;;;;;-1:-1:-1;2388:21:1;:30;;-1:-1:-1;;;;;;2388:30:1;-1:-1:-1;;;;;2388:30:1;;;;;2113:316;2470:29;;;;:12;:29;;;;;;;:36;;-1:-1:-1;;2470:36:1;2502:4;2470:36;;;2537:32;2545:4;;2564;;;;2537:32;2564:4;;;;2537:32;;;;;;;;;;;;;;;;;;;;;2583:28;;;;;;;;;;;;;;;;;;-1:-1:-1;2516:105:1;;;-1:-1:-1;2516:105:1;;;;-1:-1:-1;;;;;2516:105:1;;;;;;;;;;-1:-1:-1;;2755:21:1;:34;;-1:-1:-1;;;;;;2755:34:1;;;-1:-1:-1;;;;;;1397:1399:1:o;1042:36::-;;;-1:-1:-1;;;;;1042:36:1;;:::o;2641:6515:0:-;2798:12;3094:27;3224:7;3241:9;3260;3279:17;6928;2980:1;2960:9;:16;:21;;2995:24;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2995:24:0;;;2939:90;;;;;;;-1:-1:-1;;;;;2939:90:0;;;;;;;;;;;3144:18;3152:9;3144:7;:18::i;:::-;-1:-1:-1;;;3138:25:0;;3124:40;;;;;;;;;;3094:70;-1:-1:-1;3646:21:0;3629:13;:38;;;;;;;;;3625:5178;;;3690:22;;;;;;;;;;;-1:-1:-1;;;;;3690:22:0;;;;3683:30;;-1:-1:-1;;;;;3683:30:0;;;;3690:22;3683:30;;;;3625:5178;3995:21;3978:13;:38;;;;;;;;;3974:4829;;;4057:16;;4096:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4096:24:0;;;;;4057:21;4032:102;;;;-1:-1:-1;;;;;4032:102:0;;;;;;;;;;-1:-1:-1;4158:5:0;;-1:-1:-1;4177:14:0;;3974:4829;4264:20;4247:13;:37;;;;;;;;;4243:4560;;;4325:16;;4365:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4365:24:0;;;;;4345:2;4325:22;4300:103;;;;-1:-1:-1;;;;;4300:103:0;;;;;;;;;;;4427:9;4437:1;4427:12;;;;;;;;;;;;;;-1:-1:-1;;;4427:12:0;;;;;;4421:19;;-1:-1:-1;4458:25:0;4470:9;4481:1;4458:11;:25::i;:::-;4454:29;;4501:26;4513:9;4524:2;4501:11;:26::i;:::-;4497:30;;4553:24;4563:4;4569:1;4572;4575;4553:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4553:24:0;;-1:-1:-1;;4553:24:0;;-1:-1:-1;;;;;4601:19:0;;;;;;;;-1:-1:-1;4553:24:0;-1:-1:-1;4634:14:0;;-1:-1:-1;4634:14:0;4243:4560;4725:21;4708:13;:38;;;;;;;;;4704:4099;;;4787:16;;4827:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4827:24:0;;;;;4807:2;4787:22;4762:103;;;;-1:-1:-1;;;;;4762:103:0;;;;;;;;;;;4889:9;4899:1;4889:12;;;;;;;;;;;;;;-1:-1:-1;;;4889:12:0;;;;;;4883:19;;-1:-1:-1;4920:25:0;4932:9;4943:1;4920:11;:25::i;:::-;4916:29;;4963:26;4975:9;4986:2;4963:11;:26::i;:::-;5042:51;;;;;;;;;;;;;;;;;;;;;;;5015:149;;5042:51;5015:149;;;;;;;;4959:30;;-1:-1:-1;5015:149:0;;;;5111:1;;5130;;4959:30;;5015:149;;4704:4099;5825:20;5808:13;:37;;;;;;;;;5804:2999;;;5886:16;;5925:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5925:24:0;;;;;5886:21;5861:102;;;;-1:-1:-1;;;;;5861:102:0;;;;;;;;;;-1:-1:-1;;;;;;5987:20:0;;5997:10;5987:20;;-1:-1:-1;6021:14:0;;5804:2999;6205:20;6188:13;:37;;;;;;;;;6184:2619;;;6251:49;;-1:-1:-1;;;;;6251:49:0;;-1:-1:-1;;;;;6251:32:0;;;;;:49;;6284:4;;6290:9;;6251:49;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6251:49:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6251:49:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6251:49:0;;;;;;;;;6241:59;-1:-1:-1;6314:14:0;;6184:2619;6827:23;6810:13;:40;;;;;;;;;6806:1997;;;6948:21;6959:9;6948:10;:21::i;:::-;-1:-1:-1;;;;;7041:25:0;;;;;;;:17;:25;;;;;;;;:36;;;;;;;;;;6928:41;;-1:-1:-1;7041:36:0;;7040:37;7036:88;;;7104:5;7097:12;;;;7036:88;7147:125;;-1:-1:-1;;;;;7147:125:0;;-1:-1:-1;;;;;7147:38:0;;;;;:125;;7203:4;;7225:6;;7249:9;;7147:125;;;;6806:1997;7408:23;7391:13;:40;;;;;;;;;7387:1416;;;7457:9;:15;;;;;;;;;;;-1:-1:-1;;;;;7457:23:0;;;;;;;;;;;;;-1:-1:-1;7494:14:0;;7387:1416;8074:20;8057:13;:37;;;;;;;;;8053:750;;;8135:16;;8175:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;8175:24:0;;;;;8155:2;8135:22;8110:103;;;;-1:-1:-1;;;;;8110:103:0;;;;;;;;;;;8237:9;8247:1;8237:12;;;;;;;;;;;;;;-1:-1:-1;;;8237:12:0;;;;;;8231:19;;-1:-1:-1;8268:25:0;8280:9;8291:1;8268:11;:25::i;:::-;8264:29;;8311:26;8323:9;8334:2;8311:11;:26::i;:::-;8390:53;;;;;;;;;;;;;;;;;;;;;;;8363:151;;8390:53;8363:151;;;;;;;;8307:30;;-1:-1:-1;8363:151:0;;;;8461:1;;8480;;8307:30;;8363:151;;8053:750;8692:23;8675:13;:40;;;;;;;;;8671:132;;;8741:9;:15;;;;;;;;;;;-1:-1:-1;;;;;8741:23:0;;;;;;;;;;;;;-1:-1:-1;8778:14:0;;8671:132;9122:26;;;;;;;;;;;;;;;;9115:34;;-1:-1:-1;;;;;9115:34:0;;;;9122:26;9115:34;;;;2641:6515;;;;;;;;;;;;:::o;3240:241:1:-;3371:21;;3323:7;;;;-1:-1:-1;;;;;3371:21:1;:35;:72;;3422:21;;-1:-1:-1;;;;;3422:21:1;3371:72;;;3409:10;3371:72;3346:97;3240:241;-1:-1:-1;;3240:241:1:o;1267:440:10:-;1397:8;;1423:23;;;;;;;;;;;;;;;;;1347:13;;1397:12;-1:-1:-1;1376:80:10;;;;-1:-1:-1;;;;;1376:80:10;;;;;;;;;;-1:-1:-1;1506:8:10;;1504:1;;-1:-1:-1;;1506:12:10;;;1504:15;;;;;;;;;;1626:8;;-1:-1:-1;;1622:16:10;1651:17;;;-1:-1:-1;;;;1504:15:10;;;;;;1267:440::o;6464:472::-;6585:14;6648:5;6656:2;6648:10;6636:1;:8;:22;;6672;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6672:22:10;;;;-1:-1:-1;;;;;6672:22:10;;;6615:89;;;;;;;-1:-1:-1;;;;;6615:89:10;;;;;;;;;;-1:-1:-1;;6883:13:10;6785:2;6883:13;6877:20;;6464:472::o;1902:460::-;1985:14;2048:2;2036:1;:8;:14;;2064:22;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2064:22:10;;;;-1:-1:-1;;;;;2064:22:10;;;2015:81;;;;;;;-1:-1:-1;;;;;2015:81:10;;;;;;;;;;;2148:29;2160:1;2174:2;2163:1;:8;:13;2148:11;:29::i;:::-;2280:8;;-1:-1:-1;;2276:17:10;2306;;;-1:-1:-1;2139:38:10;1902:460::o;3710:869::-;3831:14;3894:5;3902:2;3894:10;3882:1;:8;:22;;3946;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3946:22:10;;;;-1:-1:-1;;;;;3946:22:10;;;3861:117;;;;;;;-1:-1:-1;;;;;3861:117:10;;;;;;;;;;-1:-1:-1;;4481:13:10;4226:2;4481:13;4475:20;-1:-1:-1;;;;;4471:69:10;;3710:869::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;130:112;;194:43;229:6;216:20;194:43;;249:116;;324:36;352:6;346:13;324:36;;372:118;;439:46;477:6;464:20;439:46;;511:335;;;618:4;606:17;;602:27;-1:-1;592:2;;643:1;640;633:12;592:2;-1:-1;663:20;;-1:-1;;;;;692:30;;689:2;;;735:1;732;725:12;689:2;769:4;761:6;757:17;745:29;;819:3;812;804:6;800:16;790:8;786:31;783:40;780:2;;;836:1;833;826:12;780:2;585:261;;;;;;855:440;;949:4;937:17;;933:27;-1:-1;923:2;;974:1;971;964:12;923:2;1011:6;998:20;1033:64;1048:48;1089:6;1048:48;;;1033:64;;;1024:73;;1117:6;1110:5;1103:21;1153:4;1145:6;1141:17;1186:4;1179:5;1175:16;1221:3;1212:6;1207:3;1203:16;1200:25;1197:2;;;1238:1;1235;1228:12;1197:2;1248:41;1282:6;1277:3;1272;1248:41;;;916:379;;;;;;;;1428:366;;;1549:2;1537:9;1528:7;1524:23;1520:32;1517:2;;;1565:1;1562;1555:12;1517:2;1600:1;1617:53;1662:7;1642:9;1617:53;;;1607:63;;1579:97;1707:2;1725:53;1770:7;1761:6;1750:9;1746:22;1725:53;;;1715:63;;1686:98;1511:283;;;;;;1801:360;;;1919:2;1907:9;1898:7;1894:23;1890:32;1887:2;;;1935:1;1932;1925:12;1887:2;1970:1;1987:53;2032:7;2012:9;1987:53;;;1977:63;;1949:97;2077:2;2095:50;2137:7;2128:6;2117:9;2113:22;2095:50;;2168:257;;2280:2;2268:9;2259:7;2255:23;2251:32;2248:2;;;2296:1;2293;2286:12;2248:2;2331:1;2348:61;2401:7;2381:9;2348:61;;2432:241;;2536:2;2524:9;2515:7;2511:23;2507:32;2504:2;;;2552:1;2549;2542:12;2504:2;2587:1;2604:53;2649:7;2629:9;2604:53;;2680:366;;;2801:2;2789:9;2780:7;2776:23;2772:32;2769:2;;;2817:1;2814;2807:12;2769:2;2852:1;2869:53;2914:7;2894:9;2869:53;;3053:615;;;;;3210:2;3198:9;3189:7;3185:23;3181:32;3178:2;;;3226:1;3223;3216:12;3178:2;3261:1;3278:53;3323:7;3303:9;3278:53;;;3268:63;;3240:97;3368:2;3386:53;3431:7;3422:6;3411:9;3407:22;3386:53;;;3376:63;;3347:98;3504:2;3493:9;3489:18;3476:32;-1:-1;;;;;3520:6;3517:30;3514:2;;;3560:1;3557;3550:12;3514:2;3588:64;3644:7;3635:6;3624:9;3620:22;3588:64;;;3172:496;;;;-1:-1;3570:82;-1:-1;;;;3172:496;3675:595;;;;3822:2;3810:9;3801:7;3797:23;3793:32;3790:2;;;3838:1;3835;3828:12;3790:2;3873:1;3890:53;3935:7;3915:9;3890:53;;;3880:63;;3852:97;3980:2;3998:53;4043:7;4034:6;4023:9;4019:22;3998:53;;;3988:63;;3959:98;4116:2;4105:9;4101:18;4088:32;-1:-1;;;;;4132:6;4129:30;4126:2;;;4172:1;4169;4162:12;4126:2;4192:62;4246:7;4237:6;4226:9;4222:22;4192:62;;;4182:72;;4067:193;3784:486;;;;;;4277:865;;;;;;;4470:3;4458:9;4449:7;4445:23;4441:33;4438:2;;;4487:1;4484;4477:12;4438:2;4522:1;4539:53;4584:7;4564:9;4539:53;;;4529:63;;4501:97;4629:2;4647:53;4692:7;4683:6;4672:9;4668:22;4647:53;;;4637:63;;4608:98;4765:2;4754:9;4750:18;4737:32;-1:-1;;;;;4781:6;4778:30;4775:2;;;4821:1;4818;4811:12;4775:2;4849:64;4905:7;4896:6;4885:9;4881:22;4849:64;;;4831:82;;;;4716:203;4978:2;4967:9;4963:18;4950:32;-1:-1;;;;;4994:6;4991:30;4988:2;;;5034:1;5031;5024:12;4988:2;5062:64;5118:7;5109:6;5098:9;5094:22;5062:64;;;5044:82;;;;4929:203;4432:710;;;;;;;;;5149:110;5222:31;5247:5;5222:31;;;5217:3;5210:44;5204:55;;;5266:101;5333:28;5355:5;5333:28;;5374:110;5447:31;5472:5;5447:31;;5491:297;;5591:38;5623:5;5591:38;;;5646:6;5641:3;5634:19;5658:63;5714:6;5707:4;5702:3;5698:14;5691:4;5684:5;5680:16;5658:63;;;5753:29;5775:6;5753:29;;;5733:50;;;5746:4;5733:50;;5571:217;-1:-1;;;5571:217;6094:104;6163:29;6186:5;6163:29;;6205:193;6313:2;6298:18;;6327:61;6302:9;6361:6;6327:61;;6405:181;6507:2;6492:18;;6521:55;6496:9;6549:6;6521:55;;6593:479;6775:2;6760:18;;6789:61;6764:9;6823:6;6789:61;;;6861:62;6919:2;6908:9;6904:18;6895:6;6861:62;;;6971:9;6965:4;6961:20;6956:2;6945:9;6941:18;6934:48;6996:66;7057:4;7048:6;6996:66;;;6988:74;6746:326;-1:-1;;;;;6746:326;7079:378;7233:2;7218:18;;7247:61;7222:9;7281:6;7247:61;;;7356:9;7350:4;7346:20;7341:2;7330:9;7326:18;7319:48;7381:66;7442:4;7433:6;7381:66;;7464:489;7652:3;7637:19;;7667:61;7641:9;7701:6;7667:61;;;7739:58;7793:2;7782:9;7778:18;7769:6;7739:58;;;7808:62;7866:2;7855:9;7851:18;7842:6;7808:62;;;7881;7939:2;7928:9;7924:18;7915:6;7881:62;;7960:273;8084:2;8098:47;;;8069:18;;8159:64;8069:18;8209:6;8159:64;;8240:256;8302:2;8296:9;8328:17;;;-1:-1;;;;;8388:34;;8424:22;;;8385:62;8382:2;;;8460:1;8457;8450:12;8382:2;8476;8469:22;8280:216;;-1:-1;8280:216;8503:258;;-1:-1;;;;;8638:6;8635:30;8632:2;;;8678:1;8675;8668:12;8632:2;-1:-1;8751:4;8722;8699:17;;;;-1:-1;;8695:33;8741:15;;8569:192;8768:91;8842:12;;8826:33;8961:128;-1:-1;;;;;9030:54;;9013:76;9096:92;9169:13;9162:21;;9145:43;9195:79;9264:5;9247:27;9281:88;9359:4;9348:16;;9331:38;9783:145;9864:6;9859:3;9854;9841:30;-1:-1;9920:1;9902:16;;9895:27;9834:94;9937:268;10002:1;10009:101;10023:6;10020:1;10017:13;10009:101;;;10090:11;;;10084:18;10071:11;;;10064:39;10045:2;10038:10;10009:101;;;10125:6;10122:1;10119:13;10116:2;;;10190:1;10181:6;10176:3;10172:16;10165:27;10116:2;9986:219;;;;;10213:97;10301:2;10281:14;-1:-1;;10277:28;;10261:49"
=======
				"object": "0x608060405234801561001057600080fd5b50610b8d806100206000396000f3006080604052600436106100325763ffffffff60e060020a6000350416633683ef8e8114610037578063abba41cc14610059575b600080fd5b34801561004357600080fd5b50610057610052366004610867565b61008f565b005b34801561006557600080fd5b506100796100743660046108ce565b61015b565b60405161008691906109e5565b60405180910390f35b6100ca848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843750610170945050505050565b60408051808201909152601c81527f5369676e61747572652076616c69646174696f6e206661696c65642e00000000602082015290151561012a5760405160e560020a62461bcd0281526004016101219190610a51565b60405180910390fd5b505050600091825260208281526040808420600160a060020a0390931684529190529020805460ff19166001179055565b6000610168848484610170565b949350505050565b600080600080600080600187511015604080519081016040528060198152602001600080516020610b348339815191528152509015156101c65760405160e560020a62461bcd0281526004016101219190610a51565b508660008151811015156101d657fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1660078111156101fe57fe5b9450600085600781111561020e57fe5b141561022f5760405160e560020a62461bcd02815260040161012190610a72565b600185600781111561023d57fe5b14156102955786516040805180820190915260198152600080516020610b3483398151915260208201529060011461028b5760405160e560020a62461bcd0281526004016101219190610a51565b50600095506106e7565b60028560078111156102a357fe5b14156103055786516040805180820190915260198152600080516020610b348339815191526020820152906001146102f15760405160e560020a62461bcd0281526004016101219190610a51565b50600160a060020a038816331495506106e7565b600385600781111561031357fe5b14156104405786516040805180820190915260198152600080516020610b348339815191526020820152906042146103615760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561037157fe5b016020015160f860020a90819004810204935061038f8760026106f3565b925061039c8760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c81018c9052815190819003603c01812060008252602091909101918290529193506001916103f891879087908790610a13565b60206040516020810390808403906000865af115801561041c573d6000803e3d6000fd5b5050604051601f190151600160a060020a038a811690821614975091506106e79050565b600485600781111561044e57fe5b14156104fc5786516040805180820190915260198152600080516020610b3483398151915260208201529060421461049c5760405160e560020a62461bcd0281526004016101219190610a51565b508660018151811015156104ac57fe5b016020015160f860020a9081900481020493506104ca8760026106f3565b92506104d78760226106f3565b9150600189858585604051600081526020016040526040516103f89493929190610a13565b600585600781111561050a57fe5b14156105ef5786516040805180820190915260198152600080516020610b348339815191526020820152906042146105585760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561056857fe5b016020015160f860020a9081900481020493506105868760026106f3565b92506105938760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a4100000000008152601b81018c9052815190819003603b01812060008252602091909101918290529193506001916103f891879087908790610a13565b60068560078111156105fd57fe5b141561068d5760405160e160020a630b135d3f028152600160a060020a03891690631626ba7e90610634908c908b906004016109f3565b602060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106869190810190610849565b95506106e7565b600785600781111561069b57fe5b14156106cc57600089815260208181526040808320600160a060020a038c16845290915290205460ff1695506106e7565b60405160e560020a62461bcd02815260040161012190610a62565b50505050509392505050565b60008160200183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f722065815260200160a960020a6a38bab0b6103a37901999170281525090151561076e5760405160e560020a62461bcd0281526004016101219190610a51565b505060208183018101519101905b92915050565b600061078e8235610ae1565b9392505050565b600061078e8251610ad3565b600061078e8235610ad8565b600080601f830184136107bf57600080fd5b5081356001604060020a038111156107d657600080fd5b6020830191508360018202830111156107ee57600080fd5b9250929050565b6000601f8201831361080657600080fd5b813561081961081482610aa8565b610a82565b9150808252602083016020830185838301111561083557600080fd5b610840838284610aed565b50505092915050565b60006020828403121561085b57600080fd5b60006101688484610795565b6000806000806060858703121561087d57600080fd5b600061088987876107a1565b945050602061089a87828801610782565b93505060408501356001604060020a038111156108b657600080fd5b6108c2878288016107ad565b95989497509550505050565b6000806000606084860312156108e357600080fd5b60006108ef86866107a1565b935050602061090086828701610782565b92505060408401356001604060020a0381111561091c57600080fd5b610928868287016107f5565b9150509250925092565b61093b81610ad3565b82525050565b61093b81610ad8565b600061095582610acf565b808452610969816020860160208601610af9565b61097281610b29565b9093016020019392505050565b601b81527f556e737570706f72746564207369676e617475726520747970652e0000000000602082015260400190565b60178152604960020a7624b63632b3b0b61039b4b3b730ba3ab932903a3cb8329702602082015260400190565b61093b81610adb565b6020810161077c8284610932565b60408101610a018285610941565b8181036020830152610168818461094a565b60808101610a218287610941565b610a2e60208301866109dc565b610a3b6040830185610941565b610a486060830184610941565b95945050505050565b6020808252810161078e818461094a565b6020808252810161077c8161097f565b6020808252810161077c816109af565b6040518181016001604060020a0381118282101715610aa057600080fd5b604052919050565b60006001604060020a03821115610abe57600080fd5b506020601f91909101601f19160190565b5190565b151590565b90565b60ff1690565b600160a060020a031690565b82818337506000910152565b60005b83811015610b14578181015183820152602001610afc565b83811115610b23576000848401525b50505050565b601f01601f1916905600496e76616c6964207369676e6174757265206c656e6774682e00000000000000a265627a7a72305820671a398be905502a7957d328eb52488c6ea966e992ee6eb5a1a6889434f48b296c6578706572696d656e74616cf50037",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x32 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3683EF8E DUP2 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0xABBA41CC EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57 PUSH2 0x52 CALLDATASIZE PUSH1 0x4 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x170 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 DUP5 PUSH2 0x170 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 DUP8 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1FE JUMPI INVALID JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x20E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x295 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x305 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND CALLER EQ SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x440 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x371 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x38F DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x39C DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 DUP2 AND SWAP1 DUP3 AND EQ SWAP8 POP SWAP2 POP PUSH2 0x6E7 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x44E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x4FC JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AC JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x4CA DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x4D7 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP10 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x50A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5EF JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x568 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x586 DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x593 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x5FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0xB135D3F MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x634 SWAP1 DUP13 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x686 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x849 JUMP JUMPDEST SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA62 JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP POP PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 MLOAD PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x819 PUSH2 0x814 DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x840 DUP4 DUP3 DUP5 PUSH2 0xAED JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x889 DUP8 DUP8 PUSH2 0x7A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x89A DUP8 DUP3 DUP9 ADD PUSH2 0x782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP8 DUP3 DUP9 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8EF DUP7 DUP7 PUSH2 0x7A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x900 DUP7 DUP3 DUP8 ADD PUSH2 0x782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x928 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x955 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x969 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH1 0x49 PUSH1 0x2 EXP PUSH23 0x24B63632B3B0B61039B4B3B730BA3AB932903A3CB83297 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x77C DUP3 DUP5 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xA01 DUP3 DUP6 PUSH2 0x941 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x168 DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xA21 DUP3 DUP8 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA2E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0xA3B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA48 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x941 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x78E DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB14 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAFC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB23 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP 0x49 PUSH15 0x76616C6964207369676E6174757265 KECCAK256 PUSH13 0x656E6774682E00000000000000 LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH8 0x1A398BE905502A79 JUMPI 0xd3 0x28 0xeb MSTORE 0x48 DUP13 PUSH15 0xA966E992EE6EB5A1A6889434F48B29 PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ",
=======
				"object": "0x608060405234801561001057600080fd5b50610b8d806100206000396000f3006080604052600436106100325763ffffffff60e060020a6000350416633683ef8e8114610037578063abba41cc14610059575b600080fd5b34801561004357600080fd5b50610057610052366004610867565b61008f565b005b34801561006557600080fd5b506100796100743660046108ce565b61015b565b60405161008691906109e5565b60405180910390f35b6100ca848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843750610170945050505050565b60408051808201909152601c81527f5369676e61747572652076616c69646174696f6e206661696c65642e00000000602082015290151561012a5760405160e560020a62461bcd0281526004016101219190610a51565b60405180910390fd5b505050600091825260208281526040808420600160a060020a0390931684529190529020805460ff19166001179055565b6000610168848484610170565b949350505050565b600080600080600080600187511015604080519081016040528060198152602001600080516020610b348339815191528152509015156101c65760405160e560020a62461bcd0281526004016101219190610a51565b508660008151811015156101d657fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1660078111156101fe57fe5b9450600085600781111561020e57fe5b141561022f5760405160e560020a62461bcd02815260040161012190610a72565b600185600781111561023d57fe5b14156102955786516040805180820190915260198152600080516020610b3483398151915260208201529060011461028b5760405160e560020a62461bcd0281526004016101219190610a51565b50600095506106e7565b60028560078111156102a357fe5b14156103055786516040805180820190915260198152600080516020610b348339815191526020820152906001146102f15760405160e560020a62461bcd0281526004016101219190610a51565b50600160a060020a038816331495506106e7565b600385600781111561031357fe5b14156104405786516040805180820190915260198152600080516020610b348339815191526020820152906042146103615760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561037157fe5b016020015160f860020a90819004810204935061038f8760026106f3565b925061039c8760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c81018c9052815190819003603c01812060008252602091909101918290529193506001916103f891879087908790610a13565b60206040516020810390808403906000865af115801561041c573d6000803e3d6000fd5b5050604051601f190151600160a060020a038a811690821614975091506106e79050565b600485600781111561044e57fe5b14156104fc5786516040805180820190915260198152600080516020610b3483398151915260208201529060421461049c5760405160e560020a62461bcd0281526004016101219190610a51565b508660018151811015156104ac57fe5b016020015160f860020a9081900481020493506104ca8760026106f3565b92506104d78760226106f3565b9150600189858585604051600081526020016040526040516103f89493929190610a13565b600585600781111561050a57fe5b14156105ef5786516040805180820190915260198152600080516020610b348339815191526020820152906042146105585760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561056857fe5b016020015160f860020a9081900481020493506105868760026106f3565b92506105938760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a4100000000008152601b81018c9052815190819003603b01812060008252602091909101918290529193506001916103f891879087908790610a13565b60068560078111156105fd57fe5b141561068d5760405160e160020a630b135d3f028152600160a060020a03891690631626ba7e90610634908c908b906004016109f3565b602060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106869190810190610849565b95506106e7565b600785600781111561069b57fe5b14156106cc57600089815260208181526040808320600160a060020a038c16845290915290205460ff1695506106e7565b60405160e560020a62461bcd02815260040161012190610a62565b50505050509392505050565b60008160200183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f722065815260200160a960020a6a38bab0b6103a37901999170281525090151561076e5760405160e560020a62461bcd0281526004016101219190610a51565b505060208183018101519101905b92915050565b600061078e8235610ae1565b9392505050565b600061078e8251610ad3565b600061078e8235610ad8565b600080601f830184136107bf57600080fd5b5081356001604060020a038111156107d657600080fd5b6020830191508360018202830111156107ee57600080fd5b9250929050565b6000601f8201831361080657600080fd5b813561081961081482610aa8565b610a82565b9150808252602083016020830185838301111561083557600080fd5b610840838284610aed565b50505092915050565b60006020828403121561085b57600080fd5b60006101688484610795565b6000806000806060858703121561087d57600080fd5b600061088987876107a1565b945050602061089a87828801610782565b93505060408501356001604060020a038111156108b657600080fd5b6108c2878288016107ad565b95989497509550505050565b6000806000606084860312156108e357600080fd5b60006108ef86866107a1565b935050602061090086828701610782565b92505060408401356001604060020a0381111561091c57600080fd5b610928868287016107f5565b9150509250925092565b61093b81610ad3565b82525050565b61093b81610ad8565b600061095582610acf565b808452610969816020860160208601610af9565b61097281610b29565b9093016020019392505050565b601b81527f556e737570706f72746564207369676e617475726520747970652e0000000000602082015260400190565b60178152604960020a7624b63632b3b0b61039b4b3b730ba3ab932903a3cb8329702602082015260400190565b61093b81610adb565b6020810161077c8284610932565b60408101610a018285610941565b8181036020830152610168818461094a565b60808101610a218287610941565b610a2e60208301866109dc565b610a3b6040830185610941565b610a486060830184610941565b95945050505050565b6020808252810161078e818461094a565b6020808252810161077c8161097f565b6020808252810161077c816109af565b6040518181016001604060020a0381118282101715610aa057600080fd5b604052919050565b60006001604060020a03821115610abe57600080fd5b506020601f91909101601f19160190565b5190565b151590565b90565b60ff1690565b600160a060020a031690565b82818337506000910152565b60005b83811015610b14578181015183820152602001610afc565b83811115610b23576000848401525b50505050565b601f01601f1916905600496e76616c6964207369676e6174757265206c656e6774682e00000000000000a265627a7a723058209d478d8dd10bd048541eb2b51b34f751b585d5ecb5e18c6f7aaf3ea433d54e8f6c6578706572696d656e74616cf50037",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x32 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3683EF8E DUP2 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0xABBA41CC EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57 PUSH2 0x52 CALLDATASIZE PUSH1 0x4 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x170 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 DUP5 PUSH2 0x170 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 DUP8 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1FE JUMPI INVALID JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x20E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x295 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x305 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND CALLER EQ SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x440 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x371 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x38F DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x39C DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 DUP2 AND SWAP1 DUP3 AND EQ SWAP8 POP SWAP2 POP PUSH2 0x6E7 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x44E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x4FC JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AC JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x4CA DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x4D7 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP10 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x50A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5EF JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x568 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x586 DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x593 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x5FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0xB135D3F MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x634 SWAP1 DUP13 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x686 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x849 JUMP JUMPDEST SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA62 JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP POP PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 MLOAD PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x819 PUSH2 0x814 DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x840 DUP4 DUP3 DUP5 PUSH2 0xAED JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x889 DUP8 DUP8 PUSH2 0x7A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x89A DUP8 DUP3 DUP9 ADD PUSH2 0x782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP8 DUP3 DUP9 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8EF DUP7 DUP7 PUSH2 0x7A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x900 DUP7 DUP3 DUP8 ADD PUSH2 0x782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x928 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x955 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x969 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH1 0x49 PUSH1 0x2 EXP PUSH23 0x24B63632B3B0B61039B4B3B730BA3AB932903A3CB83297 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x77C DUP3 DUP5 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xA01 DUP3 DUP6 PUSH2 0x941 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x168 DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xA21 DUP3 DUP8 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA2E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0xA3B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA48 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x941 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x78E DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB14 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAFC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB23 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP 0x49 PUSH15 0x76616C6964207369676E6174757265 KECCAK256 PUSH13 0x656E6774682E00000000000000 LOG2 PUSH6 0x627A7A723058 KECCAK256 SWAP14 0x47 DUP14 DUP14 0xd1 SIGNEXTEND 0xd0 0x48 SLOAD 0x1e 0xb2 0xb5 SHL CALLVALUE 0xf7 MLOAD 0xb5 DUP6 0xd5 0xec 0xb5 0xe1 DUP13 PUSH16 0x7AAF3EA433D54E8F6C6578706572696D PUSH6 0x6E74616CF500 CALLDATACOPY ",
>>>>>>> 82c575c7... Tons of tests around nested byte arrays and ERC721 receiver
=======
				"object": "0x608060405234801561001057600080fd5b50610b8d806100206000396000f3006080604052600436106100325763ffffffff60e060020a6000350416633683ef8e8114610037578063abba41cc14610059575b600080fd5b34801561004357600080fd5b50610057610052366004610867565b61008f565b005b34801561006557600080fd5b506100796100743660046108ce565b61015b565b60405161008691906109e5565b60405180910390f35b6100ca848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843750610170945050505050565b60408051808201909152601c81527f5369676e61747572652076616c69646174696f6e206661696c65642e00000000602082015290151561012a5760405160e560020a62461bcd0281526004016101219190610a51565b60405180910390fd5b505050600091825260208281526040808420600160a060020a0390931684529190529020805460ff19166001179055565b6000610168848484610170565b949350505050565b600080600080600080600187511015604080519081016040528060198152602001600080516020610b348339815191528152509015156101c65760405160e560020a62461bcd0281526004016101219190610a51565b508660008151811015156101d657fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1660078111156101fe57fe5b9450600085600781111561020e57fe5b141561022f5760405160e560020a62461bcd02815260040161012190610a72565b600185600781111561023d57fe5b14156102955786516040805180820190915260198152600080516020610b3483398151915260208201529060011461028b5760405160e560020a62461bcd0281526004016101219190610a51565b50600095506106e7565b60028560078111156102a357fe5b14156103055786516040805180820190915260198152600080516020610b348339815191526020820152906001146102f15760405160e560020a62461bcd0281526004016101219190610a51565b50600160a060020a038816331495506106e7565b600385600781111561031357fe5b14156104405786516040805180820190915260198152600080516020610b348339815191526020820152906042146103615760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561037157fe5b016020015160f860020a90819004810204935061038f8760026106f3565b925061039c8760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c81018c9052815190819003603c01812060008252602091909101918290529193506001916103f891879087908790610a13565b60206040516020810390808403906000865af115801561041c573d6000803e3d6000fd5b5050604051601f190151600160a060020a038a811690821614975091506106e79050565b600485600781111561044e57fe5b14156104fc5786516040805180820190915260198152600080516020610b3483398151915260208201529060421461049c5760405160e560020a62461bcd0281526004016101219190610a51565b508660018151811015156104ac57fe5b016020015160f860020a9081900481020493506104ca8760026106f3565b92506104d78760226106f3565b9150600189858585604051600081526020016040526040516103f89493929190610a13565b600585600781111561050a57fe5b14156105ef5786516040805180820190915260198152600080516020610b348339815191526020820152906042146105585760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561056857fe5b016020015160f860020a9081900481020493506105868760026106f3565b92506105938760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a4100000000008152601b81018c9052815190819003603b01812060008252602091909101918290529193506001916103f891879087908790610a13565b60068560078111156105fd57fe5b141561068d5760405160e160020a630b135d3f028152600160a060020a03891690631626ba7e90610634908c908b906004016109f3565b602060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106869190810190610849565b95506106e7565b600785600781111561069b57fe5b14156106cc57600089815260208181526040808320600160a060020a038c16845290915290205460ff1695506106e7565b60405160e560020a62461bcd02815260040161012190610a62565b50505050509392505050565b60008160200183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f722065815260200160a960020a6a38bab0b6103a37901999170281525090151561076e5760405160e560020a62461bcd0281526004016101219190610a51565b505060208183018101519101905b92915050565b600061078e8235610ae1565b9392505050565b600061078e8251610ad3565b600061078e8235610ad8565b600080601f830184136107bf57600080fd5b5081356001604060020a038111156107d657600080fd5b6020830191508360018202830111156107ee57600080fd5b9250929050565b6000601f8201831361080657600080fd5b813561081961081482610aa8565b610a82565b9150808252602083016020830185838301111561083557600080fd5b610840838284610aed565b50505092915050565b60006020828403121561085b57600080fd5b60006101688484610795565b6000806000806060858703121561087d57600080fd5b600061088987876107a1565b945050602061089a87828801610782565b93505060408501356001604060020a038111156108b657600080fd5b6108c2878288016107ad565b95989497509550505050565b6000806000606084860312156108e357600080fd5b60006108ef86866107a1565b935050602061090086828701610782565b92505060408401356001604060020a0381111561091c57600080fd5b610928868287016107f5565b9150509250925092565b61093b81610ad3565b82525050565b61093b81610ad8565b600061095582610acf565b808452610969816020860160208601610af9565b61097281610b29565b9093016020019392505050565b601b81527f556e737570706f72746564207369676e617475726520747970652e0000000000602082015260400190565b60178152604960020a7624b63632b3b0b61039b4b3b730ba3ab932903a3cb8329702602082015260400190565b61093b81610adb565b6020810161077c8284610932565b60408101610a018285610941565b8181036020830152610168818461094a565b60808101610a218287610941565b610a2e60208301866109dc565b610a3b6040830185610941565b610a486060830184610941565b95945050505050565b6020808252810161078e818461094a565b6020808252810161077c8161097f565b6020808252810161077c816109af565b6040518181016001604060020a0381118282101715610aa057600080fd5b604052919050565b60006001604060020a03821115610abe57600080fd5b506020601f91909101601f19160190565b5190565b151590565b90565b60ff1690565b600160a060020a031690565b82818337506000910152565b60005b83811015610b14578181015183820152602001610afc565b83811115610b23576000848401525b50505050565b601f01601f1916905600496e76616c6964207369676e6174757265206c656e6774682e00000000000000a265627a7a723058201b334561a3ecc77e221adee90532f2710e97812e56f22af4fccdcfbb141c92c56c6578706572696d656e74616cf50037",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x32 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3683EF8E DUP2 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0xABBA41CC EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57 PUSH2 0x52 CALLDATASIZE PUSH1 0x4 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x170 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 DUP5 PUSH2 0x170 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 DUP8 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1FE JUMPI INVALID JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x20E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x295 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x305 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND CALLER EQ SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x440 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x371 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x38F DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x39C DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 DUP2 AND SWAP1 DUP3 AND EQ SWAP8 POP SWAP2 POP PUSH2 0x6E7 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x44E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x4FC JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AC JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x4CA DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x4D7 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP10 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x50A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5EF JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x568 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x586 DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x593 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x5FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0xB135D3F MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x634 SWAP1 DUP13 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x686 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x849 JUMP JUMPDEST SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA62 JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP POP PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 MLOAD PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x819 PUSH2 0x814 DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x840 DUP4 DUP3 DUP5 PUSH2 0xAED JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x889 DUP8 DUP8 PUSH2 0x7A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x89A DUP8 DUP3 DUP9 ADD PUSH2 0x782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP8 DUP3 DUP9 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8EF DUP7 DUP7 PUSH2 0x7A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x900 DUP7 DUP3 DUP8 ADD PUSH2 0x782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x928 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x955 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x969 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH1 0x49 PUSH1 0x2 EXP PUSH23 0x24B63632B3B0B61039B4B3B730BA3AB932903A3CB83297 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x77C DUP3 DUP5 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xA01 DUP3 DUP6 PUSH2 0x941 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x168 DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xA21 DUP3 DUP8 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA2E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0xA3B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA48 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x941 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x78E DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB14 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAFC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB23 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP 0x49 PUSH15 0x76616C6964207369676E6174757265 KECCAK256 PUSH13 0x656E6774682E00000000000000 LOG2 PUSH6 0x627A7A723058 KECCAK256 SHL CALLER GASLIMIT PUSH2 0xA3EC 0xc7 PUSH31 0x221ADEE90532F2710E97812E56F22AF4FCCDCFBB141C92C56C657870657269 PUSH14 0x656E74616CF50037000000000000 ",
>>>>>>> b2c9acd7... Tests for writing bytes to nested bytes
=======
				"object": "0x608060405234801561001057600080fd5b50610b8d806100206000396000f3006080604052600436106100325763ffffffff60e060020a6000350416633683ef8e8114610037578063abba41cc14610059575b600080fd5b34801561004357600080fd5b50610057610052366004610867565b61008f565b005b34801561006557600080fd5b506100796100743660046108ce565b61015b565b60405161008691906109e5565b60405180910390f35b6100ca848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843750610170945050505050565b60408051808201909152601c81527f5369676e61747572652076616c69646174696f6e206661696c65642e00000000602082015290151561012a5760405160e560020a62461bcd0281526004016101219190610a51565b60405180910390fd5b505050600091825260208281526040808420600160a060020a0390931684529190529020805460ff19166001179055565b6000610168848484610170565b949350505050565b600080600080600080600187511015604080519081016040528060198152602001600080516020610b348339815191528152509015156101c65760405160e560020a62461bcd0281526004016101219190610a51565b508660008151811015156101d657fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1660078111156101fe57fe5b9450600085600781111561020e57fe5b141561022f5760405160e560020a62461bcd02815260040161012190610a72565b600185600781111561023d57fe5b14156102955786516040805180820190915260198152600080516020610b3483398151915260208201529060011461028b5760405160e560020a62461bcd0281526004016101219190610a51565b50600095506106e7565b60028560078111156102a357fe5b14156103055786516040805180820190915260198152600080516020610b348339815191526020820152906001146102f15760405160e560020a62461bcd0281526004016101219190610a51565b50600160a060020a038816331495506106e7565b600385600781111561031357fe5b14156104405786516040805180820190915260198152600080516020610b348339815191526020820152906042146103615760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561037157fe5b016020015160f860020a90819004810204935061038f8760026106f3565b925061039c8760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c81018c9052815190819003603c01812060008252602091909101918290529193506001916103f891879087908790610a13565b60206040516020810390808403906000865af115801561041c573d6000803e3d6000fd5b5050604051601f190151600160a060020a038a811690821614975091506106e79050565b600485600781111561044e57fe5b14156104fc5786516040805180820190915260198152600080516020610b3483398151915260208201529060421461049c5760405160e560020a62461bcd0281526004016101219190610a51565b508660018151811015156104ac57fe5b016020015160f860020a9081900481020493506104ca8760026106f3565b92506104d78760226106f3565b9150600189858585604051600081526020016040526040516103f89493929190610a13565b600585600781111561050a57fe5b14156105ef5786516040805180820190915260198152600080516020610b348339815191526020820152906042146105585760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561056857fe5b016020015160f860020a9081900481020493506105868760026106f3565b92506105938760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a4100000000008152601b81018c9052815190819003603b01812060008252602091909101918290529193506001916103f891879087908790610a13565b60068560078111156105fd57fe5b141561068d5760405160e160020a630b135d3f028152600160a060020a03891690631626ba7e90610634908c908b906004016109f3565b602060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106869190810190610849565b95506106e7565b600785600781111561069b57fe5b14156106cc57600089815260208181526040808320600160a060020a038c16845290915290205460ff1695506106e7565b60405160e560020a62461bcd02815260040161012190610a62565b50505050509392505050565b60008160200183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f722065815260200160a960020a6a38bab0b6103a37901999170281525090151561076e5760405160e560020a62461bcd0281526004016101219190610a51565b505060208183018101519101905b92915050565b600061078e8235610ae1565b9392505050565b600061078e8251610ad3565b600061078e8235610ad8565b600080601f830184136107bf57600080fd5b5081356001604060020a038111156107d657600080fd5b6020830191508360018202830111156107ee57600080fd5b9250929050565b6000601f8201831361080657600080fd5b813561081961081482610aa8565b610a82565b9150808252602083016020830185838301111561083557600080fd5b610840838284610aed565b50505092915050565b60006020828403121561085b57600080fd5b60006101688484610795565b6000806000806060858703121561087d57600080fd5b600061088987876107a1565b945050602061089a87828801610782565b93505060408501356001604060020a038111156108b657600080fd5b6108c2878288016107ad565b95989497509550505050565b6000806000606084860312156108e357600080fd5b60006108ef86866107a1565b935050602061090086828701610782565b92505060408401356001604060020a0381111561091c57600080fd5b610928868287016107f5565b9150509250925092565b61093b81610ad3565b82525050565b61093b81610ad8565b600061095582610acf565b808452610969816020860160208601610af9565b61097281610b29565b9093016020019392505050565b601b81527f556e737570706f72746564207369676e617475726520747970652e0000000000602082015260400190565b60178152604960020a7624b63632b3b0b61039b4b3b730ba3ab932903a3cb8329702602082015260400190565b61093b81610adb565b6020810161077c8284610932565b60408101610a018285610941565b8181036020830152610168818461094a565b60808101610a218287610941565b610a2e60208301866109dc565b610a3b6040830185610941565b610a486060830184610941565b95945050505050565b6020808252810161078e818461094a565b6020808252810161077c8161097f565b6020808252810161077c816109af565b6040518181016001604060020a0381118282101715610aa057600080fd5b604052919050565b60006001604060020a03821115610abe57600080fd5b506020601f91909101601f19160190565b5190565b151590565b90565b60ff1690565b600160a060020a031690565b82818337506000910152565b60005b83811015610b14578181015183820152602001610afc565b83811115610b23576000848401525b50505050565b601f01601f1916905600496e76616c6964207369676e6174757265206c656e6774682e00000000000000a265627a7a723058206dd18ebdbdbccbf01972e1e87a70ff8aeebc39f06e0899448a85e0cad1ab9fe86c6578706572696d656e74616cf50037",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x32 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3683EF8E DUP2 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0xABBA41CC EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57 PUSH2 0x52 CALLDATASIZE PUSH1 0x4 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x170 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 DUP5 PUSH2 0x170 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 DUP8 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1FE JUMPI INVALID JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x20E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x295 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x305 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND CALLER EQ SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x440 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x371 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x38F DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x39C DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 DUP2 AND SWAP1 DUP3 AND EQ SWAP8 POP SWAP2 POP PUSH2 0x6E7 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x44E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x4FC JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AC JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x4CA DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x4D7 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP10 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x50A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5EF JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x568 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x586 DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x593 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x5FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0xB135D3F MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x634 SWAP1 DUP13 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x686 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x849 JUMP JUMPDEST SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA62 JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP POP PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 MLOAD PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x819 PUSH2 0x814 DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x840 DUP4 DUP3 DUP5 PUSH2 0xAED JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x889 DUP8 DUP8 PUSH2 0x7A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x89A DUP8 DUP3 DUP9 ADD PUSH2 0x782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP8 DUP3 DUP9 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8EF DUP7 DUP7 PUSH2 0x7A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x900 DUP7 DUP3 DUP8 ADD PUSH2 0x782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x928 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x955 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x969 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH1 0x49 PUSH1 0x2 EXP PUSH23 0x24B63632B3B0B61039B4B3B730BA3AB932903A3CB83297 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x77C DUP3 DUP5 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xA01 DUP3 DUP6 PUSH2 0x941 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x168 DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xA21 DUP3 DUP8 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA2E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0xA3B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA48 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x941 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x78E DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB14 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAFC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB23 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP 0x49 PUSH15 0x76616C6964207369676E6174757265 KECCAK256 PUSH13 0x656E6774682E00000000000000 LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH14 0xD18EBDBDBCCBF01972E1E87A70FF DUP11 0xee 0xbc CODECOPY CREATE PUSH15 0x899448A85E0CAD1AB9FE86C657870 PUSH6 0x72696D656E74 PUSH2 0x6CF5 STOP CALLDATACOPY ",
>>>>>>> 80c93e25... Migrations
=======
				"object": "0x608060405234801561001057600080fd5b50610b8d806100206000396000f3006080604052600436106100325763ffffffff60e060020a6000350416633683ef8e8114610037578063abba41cc14610059575b600080fd5b34801561004357600080fd5b50610057610052366004610867565b61008f565b005b34801561006557600080fd5b506100796100743660046108ce565b61015b565b60405161008691906109e5565b60405180910390f35b6100ca848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843750610170945050505050565b60408051808201909152601c81527f5369676e61747572652076616c69646174696f6e206661696c65642e00000000602082015290151561012a5760405160e560020a62461bcd0281526004016101219190610a51565b60405180910390fd5b505050600091825260208281526040808420600160a060020a0390931684529190529020805460ff19166001179055565b6000610168848484610170565b949350505050565b600080600080600080600187511015604080519081016040528060198152602001600080516020610b348339815191528152509015156101c65760405160e560020a62461bcd0281526004016101219190610a51565b508660008151811015156101d657fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1660078111156101fe57fe5b9450600085600781111561020e57fe5b141561022f5760405160e560020a62461bcd02815260040161012190610a72565b600185600781111561023d57fe5b14156102955786516040805180820190915260198152600080516020610b3483398151915260208201529060011461028b5760405160e560020a62461bcd0281526004016101219190610a51565b50600095506106e7565b60028560078111156102a357fe5b14156103055786516040805180820190915260198152600080516020610b348339815191526020820152906001146102f15760405160e560020a62461bcd0281526004016101219190610a51565b50600160a060020a038816331495506106e7565b600385600781111561031357fe5b14156104405786516040805180820190915260198152600080516020610b348339815191526020820152906042146103615760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561037157fe5b016020015160f860020a90819004810204935061038f8760026106f3565b925061039c8760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c81018c9052815190819003603c01812060008252602091909101918290529193506001916103f891879087908790610a13565b60206040516020810390808403906000865af115801561041c573d6000803e3d6000fd5b5050604051601f190151600160a060020a038a811690821614975091506106e79050565b600485600781111561044e57fe5b14156104fc5786516040805180820190915260198152600080516020610b3483398151915260208201529060421461049c5760405160e560020a62461bcd0281526004016101219190610a51565b508660018151811015156104ac57fe5b016020015160f860020a9081900481020493506104ca8760026106f3565b92506104d78760226106f3565b9150600189858585604051600081526020016040526040516103f89493929190610a13565b600585600781111561050a57fe5b14156105ef5786516040805180820190915260198152600080516020610b348339815191526020820152906042146105585760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561056857fe5b016020015160f860020a9081900481020493506105868760026106f3565b92506105938760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a4100000000008152601b81018c9052815190819003603b01812060008252602091909101918290529193506001916103f891879087908790610a13565b60068560078111156105fd57fe5b141561068d5760405160e160020a630b135d3f028152600160a060020a03891690631626ba7e90610634908c908b906004016109f3565b602060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106869190810190610849565b95506106e7565b600785600781111561069b57fe5b14156106cc57600089815260208181526040808320600160a060020a038c16845290915290205460ff1695506106e7565b60405160e560020a62461bcd02815260040161012190610a62565b50505050509392505050565b60008160200183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f722065815260200160a960020a6a38bab0b6103a37901999170281525090151561076e5760405160e560020a62461bcd0281526004016101219190610a51565b505060208183018101519101905b92915050565b600061078e8235610ae1565b9392505050565b600061078e8251610ad3565b600061078e8235610ad8565b600080601f830184136107bf57600080fd5b5081356001604060020a038111156107d657600080fd5b6020830191508360018202830111156107ee57600080fd5b9250929050565b6000601f8201831361080657600080fd5b813561081961081482610aa8565b610a82565b9150808252602083016020830185838301111561083557600080fd5b610840838284610aed565b50505092915050565b60006020828403121561085b57600080fd5b60006101688484610795565b6000806000806060858703121561087d57600080fd5b600061088987876107a1565b945050602061089a87828801610782565b93505060408501356001604060020a038111156108b657600080fd5b6108c2878288016107ad565b95989497509550505050565b6000806000606084860312156108e357600080fd5b60006108ef86866107a1565b935050602061090086828701610782565b92505060408401356001604060020a0381111561091c57600080fd5b610928868287016107f5565b9150509250925092565b61093b81610ad3565b82525050565b61093b81610ad8565b600061095582610acf565b808452610969816020860160208601610af9565b61097281610b29565b9093016020019392505050565b601b81527f556e737570706f72746564207369676e617475726520747970652e0000000000602082015260400190565b60178152604960020a7624b63632b3b0b61039b4b3b730ba3ab932903a3cb8329702602082015260400190565b61093b81610adb565b6020810161077c8284610932565b60408101610a018285610941565b8181036020830152610168818461094a565b60808101610a218287610941565b610a2e60208301866109dc565b610a3b6040830185610941565b610a486060830184610941565b95945050505050565b6020808252810161078e818461094a565b6020808252810161077c8161097f565b6020808252810161077c816109af565b6040518181016001604060020a0381118282101715610aa057600080fd5b604052919050565b60006001604060020a03821115610abe57600080fd5b506020601f91909101601f19160190565b5190565b151590565b90565b60ff1690565b600160a060020a031690565b82818337506000910152565b60005b83811015610b14578181015183820152602001610afc565b83811115610b23576000848401525b50505050565b601f01601f1916905600496e76616c6964207369676e6174757265206c656e6774682e00000000000000a265627a7a723058201f8a0ad39b2430b39339afffdadc5bde6440f98a5f4cca97f532f219a5aa55576c6578706572696d656e74616cf50037",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x32 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3683EF8E DUP2 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0xABBA41CC EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57 PUSH2 0x52 CALLDATASIZE PUSH1 0x4 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x170 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 DUP5 PUSH2 0x170 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 DUP8 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1FE JUMPI INVALID JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x20E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x295 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x305 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND CALLER EQ SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x440 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x371 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x38F DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x39C DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 DUP2 AND SWAP1 DUP3 AND EQ SWAP8 POP SWAP2 POP PUSH2 0x6E7 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x44E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x4FC JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AC JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x4CA DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x4D7 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP10 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x50A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5EF JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x568 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x586 DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x593 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x5FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0xB135D3F MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x634 SWAP1 DUP13 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x686 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x849 JUMP JUMPDEST SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA62 JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP POP PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 MLOAD PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x819 PUSH2 0x814 DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x840 DUP4 DUP3 DUP5 PUSH2 0xAED JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x889 DUP8 DUP8 PUSH2 0x7A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x89A DUP8 DUP3 DUP9 ADD PUSH2 0x782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP8 DUP3 DUP9 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8EF DUP7 DUP7 PUSH2 0x7A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x900 DUP7 DUP3 DUP8 ADD PUSH2 0x782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x928 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x955 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x969 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH1 0x49 PUSH1 0x2 EXP PUSH23 0x24B63632B3B0B61039B4B3B730BA3AB932903A3CB83297 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x77C DUP3 DUP5 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xA01 DUP3 DUP6 PUSH2 0x941 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x168 DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xA21 DUP3 DUP8 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA2E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0xA3B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA48 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x941 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x78E DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB14 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAFC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB23 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP 0x49 PUSH15 0x76616C6964207369676E6174757265 KECCAK256 PUSH13 0x656E6774682E00000000000000 LOG2 PUSH6 0x627A7A723058 KECCAK256 0x1f DUP11 EXP 0xd3 SWAP12 0x24 ADDRESS 0xb3 SWAP4 CODECOPY 0xaf SELFDESTRUCT 0xda 0xdc JUMPDEST 0xde PUSH5 0x40F98A5F4C 0xca SWAP8 0xf5 ORIGIN CALLCODE NOT 0xa5 0xaa SSTORE JUMPI PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ",
>>>>>>> 49fa4038... Resolved edge case in Memcpy where where send would eventually turn "negative" and wrap around.
=======
				"object": "0x608060405234801561001057600080fd5b50610b8d806100206000396000f3006080604052600436106100325763ffffffff60e060020a6000350416633683ef8e8114610037578063abba41cc14610059575b600080fd5b34801561004357600080fd5b50610057610052366004610867565b61008f565b005b34801561006557600080fd5b506100796100743660046108ce565b61015b565b60405161008691906109e5565b60405180910390f35b6100ca848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843750610170945050505050565b60408051808201909152601c81527f5369676e61747572652076616c69646174696f6e206661696c65642e00000000602082015290151561012a5760405160e560020a62461bcd0281526004016101219190610a51565b60405180910390fd5b505050600091825260208281526040808420600160a060020a0390931684529190529020805460ff19166001179055565b6000610168848484610170565b949350505050565b600080600080600080600187511015604080519081016040528060198152602001600080516020610b348339815191528152509015156101c65760405160e560020a62461bcd0281526004016101219190610a51565b508660008151811015156101d657fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1660078111156101fe57fe5b9450600085600781111561020e57fe5b141561022f5760405160e560020a62461bcd02815260040161012190610a72565b600185600781111561023d57fe5b14156102955786516040805180820190915260198152600080516020610b3483398151915260208201529060011461028b5760405160e560020a62461bcd0281526004016101219190610a51565b50600095506106e7565b60028560078111156102a357fe5b14156103055786516040805180820190915260198152600080516020610b348339815191526020820152906001146102f15760405160e560020a62461bcd0281526004016101219190610a51565b50600160a060020a038816331495506106e7565b600385600781111561031357fe5b14156104405786516040805180820190915260198152600080516020610b348339815191526020820152906042146103615760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561037157fe5b016020015160f860020a90819004810204935061038f8760026106f3565b925061039c8760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c81018c9052815190819003603c01812060008252602091909101918290529193506001916103f891879087908790610a13565b60206040516020810390808403906000865af115801561041c573d6000803e3d6000fd5b5050604051601f190151600160a060020a038a811690821614975091506106e79050565b600485600781111561044e57fe5b14156104fc5786516040805180820190915260198152600080516020610b3483398151915260208201529060421461049c5760405160e560020a62461bcd0281526004016101219190610a51565b508660018151811015156104ac57fe5b016020015160f860020a9081900481020493506104ca8760026106f3565b92506104d78760226106f3565b9150600189858585604051600081526020016040526040516103f89493929190610a13565b600585600781111561050a57fe5b14156105ef5786516040805180820190915260198152600080516020610b348339815191526020820152906042146105585760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561056857fe5b016020015160f860020a9081900481020493506105868760026106f3565b92506105938760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a4100000000008152601b81018c9052815190819003603b01812060008252602091909101918290529193506001916103f891879087908790610a13565b60068560078111156105fd57fe5b141561068d5760405160e160020a630b135d3f028152600160a060020a03891690631626ba7e90610634908c908b906004016109f3565b602060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106869190810190610849565b95506106e7565b600785600781111561069b57fe5b14156106cc57600089815260208181526040808320600160a060020a038c16845290915290205460ff1695506106e7565b60405160e560020a62461bcd02815260040161012190610a62565b50505050509392505050565b60008160200183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f722065815260200160a960020a6a38bab0b6103a37901999170281525090151561076e5760405160e560020a62461bcd0281526004016101219190610a51565b505060208183018101519101905b92915050565b600061078e8235610ae1565b9392505050565b600061078e8251610ad3565b600061078e8235610ad8565b600080601f830184136107bf57600080fd5b5081356001604060020a038111156107d657600080fd5b6020830191508360018202830111156107ee57600080fd5b9250929050565b6000601f8201831361080657600080fd5b813561081961081482610aa8565b610a82565b9150808252602083016020830185838301111561083557600080fd5b610840838284610aed565b50505092915050565b60006020828403121561085b57600080fd5b60006101688484610795565b6000806000806060858703121561087d57600080fd5b600061088987876107a1565b945050602061089a87828801610782565b93505060408501356001604060020a038111156108b657600080fd5b6108c2878288016107ad565b95989497509550505050565b6000806000606084860312156108e357600080fd5b60006108ef86866107a1565b935050602061090086828701610782565b92505060408401356001604060020a0381111561091c57600080fd5b610928868287016107f5565b9150509250925092565b61093b81610ad3565b82525050565b61093b81610ad8565b600061095582610acf565b808452610969816020860160208601610af9565b61097281610b29565b9093016020019392505050565b601b81527f556e737570706f72746564207369676e617475726520747970652e0000000000602082015260400190565b60178152604960020a7624b63632b3b0b61039b4b3b730ba3ab932903a3cb8329702602082015260400190565b61093b81610adb565b6020810161077c8284610932565b60408101610a018285610941565b8181036020830152610168818461094a565b60808101610a218287610941565b610a2e60208301866109dc565b610a3b6040830185610941565b610a486060830184610941565b95945050505050565b6020808252810161078e818461094a565b6020808252810161077c8161097f565b6020808252810161077c816109af565b6040518181016001604060020a0381118282101715610aa057600080fd5b604052919050565b60006001604060020a03821115610abe57600080fd5b506020601f91909101601f19160190565b5190565b151590565b90565b60ff1690565b600160a060020a031690565b82818337506000910152565b60005b83811015610b14578181015183820152602001610afc565b83811115610b23576000848401525b50505050565b601f01601f1916905600496e76616c6964207369676e6174757265206c656e6774682e00000000000000a265627a7a7230582090e2306f32833712a39e8c017fa98753fef1cbd1b215474d46a5bdd46b3db3756c6578706572696d656e74616cf50037",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x32 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3683EF8E DUP2 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0xABBA41CC EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57 PUSH2 0x52 CALLDATASIZE PUSH1 0x4 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x170 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 DUP5 PUSH2 0x170 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 DUP8 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1FE JUMPI INVALID JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x20E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x295 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x305 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND CALLER EQ SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x440 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x371 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x38F DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x39C DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 DUP2 AND SWAP1 DUP3 AND EQ SWAP8 POP SWAP2 POP PUSH2 0x6E7 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x44E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x4FC JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AC JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x4CA DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x4D7 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP10 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x50A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5EF JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x568 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x586 DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x593 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x5FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0xB135D3F MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x634 SWAP1 DUP13 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x686 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x849 JUMP JUMPDEST SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA62 JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP POP PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 MLOAD PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x819 PUSH2 0x814 DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x840 DUP4 DUP3 DUP5 PUSH2 0xAED JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x889 DUP8 DUP8 PUSH2 0x7A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x89A DUP8 DUP3 DUP9 ADD PUSH2 0x782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP8 DUP3 DUP9 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8EF DUP7 DUP7 PUSH2 0x7A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x900 DUP7 DUP3 DUP8 ADD PUSH2 0x782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x928 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x955 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x969 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH1 0x49 PUSH1 0x2 EXP PUSH23 0x24B63632B3B0B61039B4B3B730BA3AB932903A3CB83297 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x77C DUP3 DUP5 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xA01 DUP3 DUP6 PUSH2 0x941 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x168 DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xA21 DUP3 DUP8 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA2E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0xA3B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA48 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x941 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x78E DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB14 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAFC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB23 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP 0x49 PUSH15 0x76616C6964207369676E6174757265 KECCAK256 PUSH13 0x656E6774682E00000000000000 LOG2 PUSH6 0x627A7A723058 KECCAK256 SWAP1 0xe2 ADDRESS PUSH16 0x32833712A39E8C017FA98753FEF1CBD1 0xb2 ISZERO 0x47 0x4d 0x46 0xa5 0xbd 0xd4 PUSH12 0x3DB3756C6578706572696D65 PUSH15 0x74616CF50037000000000000000000 ",
>>>>>>> 947f222f... Style audit for proxies + libmem + libbytes
				"sourceMap": "703:380:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;703:380:5;;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
<<<<<<< HEAD
				"object": "0x6080604052600436106100325763ffffffff60e060020a6000350416633683ef8e8114610037578063abba41cc14610059575b600080fd5b34801561004357600080fd5b50610057610052366004610867565b61008f565b005b34801561006557600080fd5b506100796100743660046108ce565b61015b565b60405161008691906109e5565b60405180910390f35b6100ca848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843750610170945050505050565b60408051808201909152601c81527f5369676e61747572652076616c69646174696f6e206661696c65642e00000000602082015290151561012a5760405160e560020a62461bcd0281526004016101219190610a51565b60405180910390fd5b505050600091825260208281526040808420600160a060020a0390931684529190529020805460ff19166001179055565b6000610168848484610170565b949350505050565b600080600080600080600187511015604080519081016040528060198152602001600080516020610b348339815191528152509015156101c65760405160e560020a62461bcd0281526004016101219190610a51565b508660008151811015156101d657fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1660078111156101fe57fe5b9450600085600781111561020e57fe5b141561022f5760405160e560020a62461bcd02815260040161012190610a72565b600185600781111561023d57fe5b14156102955786516040805180820190915260198152600080516020610b3483398151915260208201529060011461028b5760405160e560020a62461bcd0281526004016101219190610a51565b50600095506106e7565b60028560078111156102a357fe5b14156103055786516040805180820190915260198152600080516020610b348339815191526020820152906001146102f15760405160e560020a62461bcd0281526004016101219190610a51565b50600160a060020a038816331495506106e7565b600385600781111561031357fe5b14156104405786516040805180820190915260198152600080516020610b348339815191526020820152906042146103615760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561037157fe5b016020015160f860020a90819004810204935061038f8760026106f3565b925061039c8760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c81018c9052815190819003603c01812060008252602091909101918290529193506001916103f891879087908790610a13565b60206040516020810390808403906000865af115801561041c573d6000803e3d6000fd5b5050604051601f190151600160a060020a038a811690821614975091506106e79050565b600485600781111561044e57fe5b14156104fc5786516040805180820190915260198152600080516020610b3483398151915260208201529060421461049c5760405160e560020a62461bcd0281526004016101219190610a51565b508660018151811015156104ac57fe5b016020015160f860020a9081900481020493506104ca8760026106f3565b92506104d78760226106f3565b9150600189858585604051600081526020016040526040516103f89493929190610a13565b600585600781111561050a57fe5b14156105ef5786516040805180820190915260198152600080516020610b348339815191526020820152906042146105585760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561056857fe5b016020015160f860020a9081900481020493506105868760026106f3565b92506105938760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a4100000000008152601b81018c9052815190819003603b01812060008252602091909101918290529193506001916103f891879087908790610a13565b60068560078111156105fd57fe5b141561068d5760405160e160020a630b135d3f028152600160a060020a03891690631626ba7e90610634908c908b906004016109f3565b602060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106869190810190610849565b95506106e7565b600785600781111561069b57fe5b14156106cc57600089815260208181526040808320600160a060020a038c16845290915290205460ff1695506106e7565b60405160e560020a62461bcd02815260040161012190610a62565b50505050509392505050565b60008160200183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f722065815260200160a960020a6a38bab0b6103a37901999170281525090151561076e5760405160e560020a62461bcd0281526004016101219190610a51565b505060208183018101519101905b92915050565b600061078e8235610ae1565b9392505050565b600061078e8251610ad3565b600061078e8235610ad8565b600080601f830184136107bf57600080fd5b5081356001604060020a038111156107d657600080fd5b6020830191508360018202830111156107ee57600080fd5b9250929050565b6000601f8201831361080657600080fd5b813561081961081482610aa8565b610a82565b9150808252602083016020830185838301111561083557600080fd5b610840838284610aed565b50505092915050565b60006020828403121561085b57600080fd5b60006101688484610795565b6000806000806060858703121561087d57600080fd5b600061088987876107a1565b945050602061089a87828801610782565b93505060408501356001604060020a038111156108b657600080fd5b6108c2878288016107ad565b95989497509550505050565b6000806000606084860312156108e357600080fd5b60006108ef86866107a1565b935050602061090086828701610782565b92505060408401356001604060020a0381111561091c57600080fd5b610928868287016107f5565b9150509250925092565b61093b81610ad3565b82525050565b61093b81610ad8565b600061095582610acf565b808452610969816020860160208601610af9565b61097281610b29565b9093016020019392505050565b601b81527f556e737570706f72746564207369676e617475726520747970652e0000000000602082015260400190565b60178152604960020a7624b63632b3b0b61039b4b3b730ba3ab932903a3cb8329702602082015260400190565b61093b81610adb565b6020810161077c8284610932565b60408101610a018285610941565b8181036020830152610168818461094a565b60808101610a218287610941565b610a2e60208301866109dc565b610a3b6040830185610941565b610a486060830184610941565b95945050505050565b6020808252810161078e818461094a565b6020808252810161077c8161097f565b6020808252810161077c816109af565b6040518181016001604060020a0381118282101715610aa057600080fd5b604052919050565b60006001604060020a03821115610abe57600080fd5b506020601f91909101601f19160190565b5190565b151590565b90565b60ff1690565b600160a060020a031690565b82818337506000910152565b60005b83811015610b14578181015183820152602001610afc565b83811115610b23576000848401525b50505050565b601f01601f1916905600496e76616c6964207369676e6174757265206c656e6774682e00000000000000a265627a7a723058201f8a0ad39b2430b39339afffdadc5bde6440f98a5f4cca97f532f219a5aa55576c6578706572696d656e74616cf50037",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x32 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3683EF8E DUP2 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0xABBA41CC EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57 PUSH2 0x52 CALLDATASIZE PUSH1 0x4 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x170 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 DUP5 PUSH2 0x170 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 DUP8 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1FE JUMPI INVALID JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x20E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x295 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x305 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND CALLER EQ SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x440 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x371 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x38F DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x39C DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 DUP2 AND SWAP1 DUP3 AND EQ SWAP8 POP SWAP2 POP PUSH2 0x6E7 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x44E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x4FC JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AC JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x4CA DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x4D7 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP10 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x50A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5EF JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x568 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x586 DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x593 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x5FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0xB135D3F MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x634 SWAP1 DUP13 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x686 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x849 JUMP JUMPDEST SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA62 JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP POP PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 MLOAD PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x819 PUSH2 0x814 DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x840 DUP4 DUP3 DUP5 PUSH2 0xAED JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x889 DUP8 DUP8 PUSH2 0x7A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x89A DUP8 DUP3 DUP9 ADD PUSH2 0x782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP8 DUP3 DUP9 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8EF DUP7 DUP7 PUSH2 0x7A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x900 DUP7 DUP3 DUP8 ADD PUSH2 0x782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x928 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x955 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x969 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH1 0x49 PUSH1 0x2 EXP PUSH23 0x24B63632B3B0B61039B4B3B730BA3AB932903A3CB83297 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x77C DUP3 DUP5 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xA01 DUP3 DUP6 PUSH2 0x941 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x168 DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xA21 DUP3 DUP8 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA2E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0xA3B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA48 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x941 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x78E DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB14 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAFC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB23 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP 0x49 PUSH15 0x76616C6964207369676E6174757265 KECCAK256 PUSH13 0x656E6774682E00000000000000 LOG2 PUSH6 0x627A7A723058 KECCAK256 0x1f DUP11 EXP 0xd3 SWAP12 0x24 ADDRESS 0xb3 SWAP4 CODECOPY 0xaf SELFDESTRUCT 0xda 0xdc JUMPDEST 0xde PUSH5 0x40F98A5F4C 0xca SWAP8 0xf5 ORIGIN CALLCODE NOT 0xa5 0xaa SSTORE JUMPI PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ",
				"sourceMap": "703:380:5:-;;;;;;;;;-1:-1:-1;;;703:380:5;;;;;;;;;;;;;;;;;;1297:280:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1297:280:0;;;;;;;;;;;769:312:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;769:312:5;;;;;;;;;;;;;;;;;;;;;;;;;1297:280:0;1438:41;1455:4;1461:6;1469:9;;1438:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1438:16:0;;-1:-1:-1;;;;;1438:41:0:i;:::-;1493:27;;;;;;;;;;;;;;;;;;1417:113;;;;;;-1:-1:-1;;;;;1417:113:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1540:9:0;:15;;;;;;;;;;;-1:-1:-1;;;;;1540:23:0;;;;;;;;;;:30;;-1:-1:-1;;1540:30:0;1566:4;1540:30;;;1297:280::o;769:312:5:-;925:12;963:87;993:4;1011:6;1031:9;963:16;:87::i;:::-;953:97;769:312;-1:-1:-1;;;;769:312:5:o;1942:5431:0:-;2094:12;2336:27;2459:7;2476:9;2495;2514:17;2277:1;2257:9;:16;:21;;2292:24;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2292:24:0;;;2236:90;;;;;;;-1:-1:-1;;;;;2236:90:0;;;;;;;;;;;2386:9;2396:1;2386:12;;;;;;;;;;;;;;;-1:-1:-1;;;2386:12:0;;-1:-1:-1;;;2386:12:0;-1:-1:-1;;;2380:19:0;;2366:34;;;;;;;;;;2336:64;-1:-1:-1;2880:21:0;2863:13;:38;;;;;;;;;2859:4041;;;3038:33;;-1:-1:-1;;;;;3038:33:0;;;;;;;;2859:4041;3352:21;3335:13;:38;;;;;;;;;3331:3569;;;3414:16;;3453:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3453:24:0;;;;;3434:1;3414:21;3389:102;;;;-1:-1:-1;;;;;3389:102:0;;;;;;;;;;-1:-1:-1;3515:5:0;;-1:-1:-1;3534:14:0;;3331:3569;4137:20;4120:13;:37;;;;;;;;;4116:2784;;;4198:16;;4237:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4237:24:0;;;;;4218:1;4198:21;4173:102;;;;-1:-1:-1;;;;;4173:102:0;;;;;;;;;;-1:-1:-1;;;;;;4299:20:0;;4309:10;4299:20;;-1:-1:-1;4333:14:0;;4116:2784;4424:23;4407:13;:40;;;;;;;;;4403:2497;;;4488:16;;4528:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4528:24:0;;;;;4508:2;4488:22;4463:103;;;;-1:-1:-1;;;;;4463:103:0;;;;;;;;;;;4590:9;4600:1;4590:12;;;;;;;;;;;;;;-1:-1:-1;;;4590:12:0;;;;;;4584:19;;-1:-1:-1;4621:25:0;4633:9;4644:1;4621:11;:25::i;:::-;4617:29;;4664:26;4676:9;4687:2;4664:11;:26::i;:::-;4743:51;;;;;;;;;;;;;;;;;;;;;;;4716:149;;4743:51;4716:149;;;;;;;;4660:30;;-1:-1:-1;4716:149:0;;;;4812:1;;4831;;4660:30;;4716:149;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4716:149:0;;-1:-1:-1;;4716:149:0;;-1:-1:-1;;;;;4889:19:0;;;;;;;;-1:-1:-1;4716:149:0;-1:-1:-1;4922:14:0;;-1:-1:-1;4922:14:0;4403:2497;5009:20;4992:13;:37;;;;;;;;;4988:1912;;;5070:16;;5110:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5110:24:0;;;;;5090:2;5070:22;5045:103;;;;-1:-1:-1;;;;;5045:103:0;;;;;;;;;;;5172:9;5182:1;5172:12;;;;;;;;;;;;;;-1:-1:-1;;;5172:12:0;;;;;;5166:19;;-1:-1:-1;5203:25:0;5215:9;5226:1;5203:11;:25::i;:::-;5199:29;;5246:26;5258:9;5269:2;5246:11;:26::i;:::-;5242:30;;5298:24;5308:4;5314:1;5317;5320;5298:24;;;;;;;;;;;;;;;;;;;4988:1912;5958:20;5941:13;:37;;;;;;;;;5937:963;;;6019:16;;6059:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6059:24:0;;;;;6039:2;6019:22;5994:103;;;;-1:-1:-1;;;;;5994:103:0;;;;;;;;;;;6121:9;6131:1;6121:12;;;;;;;;;;;;;;-1:-1:-1;;;6121:12:0;;;;;;6115:19;;-1:-1:-1;6152:25:0;6164:9;6175:1;6152:11;:25::i;:::-;6148:29;;6195:26;6207:9;6218:2;6195:11;:26::i;:::-;6274:53;;;;;;;;;;;;;;;;;;;;;;;6247:151;;6274:53;6247:151;;;;;;;;6191:30;;-1:-1:-1;6247:151:0;;;;6345:1;;6364;;6191:30;;6247:151;;5937:963;6557:22;6540:13;:39;;;;;;;;;6536:364;;;6605:49;;-1:-1:-1;;;;;6605:49:0;;-1:-1:-1;;;;;6605:32:0;;;;;:49;;6638:4;;6644:9;;6605:49;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6605:49:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6605:49:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6605:49:0;;;;;;;;;6595:59;-1:-1:-1;6668:14:0;;6536:364;6789:23;6772:13;:40;;;;;;;;;6768:132;;;6838:9;:15;;;;;;;;;;;-1:-1:-1;;;;;6838:23:0;;;;;;;;;;;;;-1:-1:-1;6875:14:0;;6768:132;7329:37;;-1:-1:-1;;;;;7329:37:0;;;;;;;;1942:5431;;;;;;;;;;;:::o;4956:472:6:-;5077:14;5140:5;5148:2;5140:10;5128:1;:8;:22;;5164;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5164:22:6;;;5107:89;;;;;;;-1:-1:-1;;;;;5107:89:6;;;;;;;;;;-1:-1:-1;;5277:2:6;5375:13;;;;;5369:20;5268:11;;;4956:472;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;130:116;;205:36;233:6;227:13;205:36;;253:118;;320:46;358:6;345:20;320:46;;392:335;;;499:4;487:17;;483:27;-1:-1;473:2;;524:1;521;514:12;473:2;-1:-1;544:20;;-1:-1;;;;;573:30;;570:2;;;616:1;613;606:12;570:2;650:4;642:6;638:17;626:29;;700:3;693;685:6;681:16;671:8;667:31;664:40;661:2;;;717:1;714;707:12;661:2;466:261;;;;;;736:440;;830:4;818:17;;814:27;-1:-1;804:2;;855:1;852;845:12;804:2;892:6;879:20;914:64;929:48;970:6;929:48;;;914:64;;;905:73;;998:6;991:5;984:21;1034:4;1026:6;1022:17;1067:4;1060:5;1056:16;1102:3;1093:6;1088:3;1084:16;1081:25;1078:2;;;1119:1;1116;1109:12;1078:2;1129:41;1163:6;1158:3;1153;1129:41;;;797:379;;;;;;;;1184:257;;1296:2;1284:9;1275:7;1271:23;1267:32;1264:2;;;1312:1;1309;1302:12;1264:2;1347:1;1364:61;1417:7;1397:9;1364:61;;1448:615;;;;;1605:2;1593:9;1584:7;1580:23;1576:32;1573:2;;;1621:1;1618;1611:12;1573:2;1656:1;1673:53;1718:7;1698:9;1673:53;;;1663:63;;1635:97;1763:2;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;;;1771:63;;1742:98;1899:2;1888:9;1884:18;1871:32;-1:-1;;;;;1915:6;1912:30;1909:2;;;1955:1;1952;1945:12;1909:2;1983:64;2039:7;2030:6;2019:9;2015:22;1983:64;;;1567:496;;;;-1:-1;1965:82;-1:-1;;;;1567:496;2070:595;;;;2217:2;2205:9;2196:7;2192:23;2188:32;2185:2;;;2233:1;2230;2223:12;2185:2;2268:1;2285:53;2330:7;2310:9;2285:53;;;2275:63;;2247:97;2375:2;2393:53;2438:7;2429:6;2418:9;2414:22;2393:53;;;2383:63;;2354:98;2511:2;2500:9;2496:18;2483:32;-1:-1;;;;;2527:6;2524:30;2521:2;;;2567:1;2564;2557:12;2521:2;2587:62;2641:7;2632:6;2621:9;2617:22;2587:62;;;2577:72;;2462:193;2179:486;;;;;;2672:101;2739:28;2761:5;2739:28;;;2734:3;2727:41;2721:52;;;2780:110;2853:31;2878:5;2853:31;;2897:297;;2997:38;3029:5;2997:38;;;3052:6;3047:3;3040:19;3064:63;3120:6;3113:4;3108:3;3104:14;3097:4;3090:5;3086:16;3064:63;;;3159:29;3181:6;3159:29;;;3139:50;;;3152:4;3139:50;;2977:217;-1:-1;;;2977:217;3501:296;3656:2;3644:15;;3693:66;3688:2;3679:12;;3672:88;3788:2;3779:12;;3637:160;3806:296;3961:2;3949:15;;-1:-1;;;;;3993:2;3984:12;;3977:88;4093:2;4084:12;;3942:160;4110:104;4179:29;4202:5;4179:29;;4221:181;4323:2;4308:18;;4337:55;4312:9;4365:6;4337:55;;4409:378;4563:2;4548:18;;4577:61;4552:9;4611:6;4577:61;;;4686:9;4680:4;4676:20;4671:2;4660:9;4656:18;4649:48;4711:66;4772:4;4763:6;4711:66;;4794:489;4982:3;4967:19;;4997:61;4971:9;5031:6;4997:61;;;5069:58;5123:2;5112:9;5108:18;5099:6;5069:58;;;5138:62;5196:2;5185:9;5181:18;5172:6;5138:62;;;5211;5269:2;5258:9;5254:18;5245:6;5211:62;;;4953:330;;;;;;;;5290:273;5414:2;5428:47;;;5399:18;;5489:64;5399:18;5539:6;5489:64;;5570:387;5751:2;5765:47;;;5736:18;;5826:121;5736:18;5826:121;;5964:387;6145:2;6159:47;;;6130:18;;6220:121;6130:18;6220:121;;6358:256;6420:2;6414:9;6446:17;;;-1:-1;;;;;6506:34;;6542:22;;;6503:62;6500:2;;;6578:1;6575;6568:12;6500:2;6594;6587:22;6398:216;;-1:-1;6398:216;6621:258;;-1:-1;;;;;6756:6;6753:30;6750:2;;;6796:1;6793;6786:12;6750:2;-1:-1;6869:4;6840;6817:17;;;;-1:-1;;6813:33;6859:15;;6687:192;6886:91;6960:12;;6944:33;7079:92;7152:13;7145:21;;7128:43;7178:79;7247:5;7230:27;7264:88;7342:4;7331:16;;7314:38;7359:128;-1:-1;;;;;7428:54;;7411:76;7680:145;7761:6;7756:3;7751;7738:30;-1:-1;7817:1;7799:16;;7792:27;7731:94;7834:268;7899:1;7906:101;7920:6;7917:1;7914:13;7906:101;;;7987:11;;;7981:18;7968:11;;;7961:39;7942:2;7935:10;7906:101;;;8022:6;8019:1;8016:13;8013:2;;;8087:1;8078:6;8073:3;8069:16;8062:27;8013:2;7883:219;;;;;8110:97;8198:2;8178:14;-1:-1;;8174:28;;8158:49"
>>>>>>> 5b211b9e... LibMem + TestLibMem + LibAssetProxyDecoder + DummyERC721Receiver
=======
				"object": "0x6080604052600436106100325763ffffffff60e060020a6000350416633683ef8e8114610037578063abba41cc14610059575b600080fd5b34801561004357600080fd5b50610057610052366004610867565b61008f565b005b34801561006557600080fd5b506100796100743660046108ce565b61015b565b60405161008691906109e5565b60405180910390f35b6100ca848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843750610170945050505050565b60408051808201909152601c81527f5369676e61747572652076616c69646174696f6e206661696c65642e00000000602082015290151561012a5760405160e560020a62461bcd0281526004016101219190610a51565b60405180910390fd5b505050600091825260208281526040808420600160a060020a0390931684529190529020805460ff19166001179055565b6000610168848484610170565b949350505050565b600080600080600080600187511015604080519081016040528060198152602001600080516020610b348339815191528152509015156101c65760405160e560020a62461bcd0281526004016101219190610a51565b508660008151811015156101d657fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1660078111156101fe57fe5b9450600085600781111561020e57fe5b141561022f5760405160e560020a62461bcd02815260040161012190610a72565b600185600781111561023d57fe5b14156102955786516040805180820190915260198152600080516020610b3483398151915260208201529060011461028b5760405160e560020a62461bcd0281526004016101219190610a51565b50600095506106e7565b60028560078111156102a357fe5b14156103055786516040805180820190915260198152600080516020610b348339815191526020820152906001146102f15760405160e560020a62461bcd0281526004016101219190610a51565b50600160a060020a038816331495506106e7565b600385600781111561031357fe5b14156104405786516040805180820190915260198152600080516020610b348339815191526020820152906042146103615760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561037157fe5b016020015160f860020a90819004810204935061038f8760026106f3565b925061039c8760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c81018c9052815190819003603c01812060008252602091909101918290529193506001916103f891879087908790610a13565b60206040516020810390808403906000865af115801561041c573d6000803e3d6000fd5b5050604051601f190151600160a060020a038a811690821614975091506106e79050565b600485600781111561044e57fe5b14156104fc5786516040805180820190915260198152600080516020610b3483398151915260208201529060421461049c5760405160e560020a62461bcd0281526004016101219190610a51565b508660018151811015156104ac57fe5b016020015160f860020a9081900481020493506104ca8760026106f3565b92506104d78760226106f3565b9150600189858585604051600081526020016040526040516103f89493929190610a13565b600585600781111561050a57fe5b14156105ef5786516040805180820190915260198152600080516020610b348339815191526020820152906042146105585760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561056857fe5b016020015160f860020a9081900481020493506105868760026106f3565b92506105938760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a4100000000008152601b81018c9052815190819003603b01812060008252602091909101918290529193506001916103f891879087908790610a13565b60068560078111156105fd57fe5b141561068d5760405160e160020a630b135d3f028152600160a060020a03891690631626ba7e90610634908c908b906004016109f3565b602060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106869190810190610849565b95506106e7565b600785600781111561069b57fe5b14156106cc57600089815260208181526040808320600160a060020a038c16845290915290205460ff1695506106e7565b60405160e560020a62461bcd02815260040161012190610a62565b50505050509392505050565b60008160200183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f722065815260200160a960020a6a38bab0b6103a37901999170281525090151561076e5760405160e560020a62461bcd0281526004016101219190610a51565b505060208183018101519101905b92915050565b600061078e8235610ae1565b9392505050565b600061078e8251610ad3565b600061078e8235610ad8565b600080601f830184136107bf57600080fd5b5081356001604060020a038111156107d657600080fd5b6020830191508360018202830111156107ee57600080fd5b9250929050565b6000601f8201831361080657600080fd5b813561081961081482610aa8565b610a82565b9150808252602083016020830185838301111561083557600080fd5b610840838284610aed565b50505092915050565b60006020828403121561085b57600080fd5b60006101688484610795565b6000806000806060858703121561087d57600080fd5b600061088987876107a1565b945050602061089a87828801610782565b93505060408501356001604060020a038111156108b657600080fd5b6108c2878288016107ad565b95989497509550505050565b6000806000606084860312156108e357600080fd5b60006108ef86866107a1565b935050602061090086828701610782565b92505060408401356001604060020a0381111561091c57600080fd5b610928868287016107f5565b9150509250925092565b61093b81610ad3565b82525050565b61093b81610ad8565b600061095582610acf565b808452610969816020860160208601610af9565b61097281610b29565b9093016020019392505050565b601b81527f556e737570706f72746564207369676e617475726520747970652e0000000000602082015260400190565b60178152604960020a7624b63632b3b0b61039b4b3b730ba3ab932903a3cb8329702602082015260400190565b61093b81610adb565b6020810161077c8284610932565b60408101610a018285610941565b8181036020830152610168818461094a565b60808101610a218287610941565b610a2e60208301866109dc565b610a3b6040830185610941565b610a486060830184610941565b95945050505050565b6020808252810161078e818461094a565b6020808252810161077c8161097f565b6020808252810161077c816109af565b6040518181016001604060020a0381118282101715610aa057600080fd5b604052919050565b60006001604060020a03821115610abe57600080fd5b506020601f91909101601f19160190565b5190565b151590565b90565b60ff1690565b600160a060020a031690565b82818337506000910152565b60005b83811015610b14578181015183820152602001610afc565b83811115610b23576000848401525b50505050565b601f01601f1916905600496e76616c6964207369676e6174757265206c656e6774682e00000000000000a265627a7a7230582090e2306f32833712a39e8c017fa98753fef1cbd1b215474d46a5bdd46b3db3756c6578706572696d656e74616cf50037",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x32 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3683EF8E DUP2 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0xABBA41CC EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57 PUSH2 0x52 CALLDATASIZE PUSH1 0x4 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x170 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 DUP5 PUSH2 0x170 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 DUP8 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1FE JUMPI INVALID JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x20E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x295 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x305 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND CALLER EQ SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x440 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x371 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x38F DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x39C DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 DUP2 AND SWAP1 DUP3 AND EQ SWAP8 POP SWAP2 POP PUSH2 0x6E7 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x44E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x4FC JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AC JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x4CA DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x4D7 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP10 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x50A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5EF JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x568 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x586 DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x593 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x5FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0xB135D3F MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x634 SWAP1 DUP13 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x686 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x849 JUMP JUMPDEST SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA62 JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP POP PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 MLOAD PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x819 PUSH2 0x814 DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x840 DUP4 DUP3 DUP5 PUSH2 0xAED JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x889 DUP8 DUP8 PUSH2 0x7A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x89A DUP8 DUP3 DUP9 ADD PUSH2 0x782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP8 DUP3 DUP9 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8EF DUP7 DUP7 PUSH2 0x7A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x900 DUP7 DUP3 DUP8 ADD PUSH2 0x782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x928 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x955 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x969 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH1 0x49 PUSH1 0x2 EXP PUSH23 0x24B63632B3B0B61039B4B3B730BA3AB932903A3CB83297 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x77C DUP3 DUP5 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xA01 DUP3 DUP6 PUSH2 0x941 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x168 DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xA21 DUP3 DUP8 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA2E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0xA3B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA48 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x941 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x78E DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB14 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAFC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB23 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP 0x49 PUSH15 0x76616C6964207369676E6174757265 KECCAK256 PUSH13 0x656E6774682E00000000000000 LOG2 PUSH6 0x627A7A723058 KECCAK256 SWAP1 0xe2 ADDRESS PUSH16 0x32833712A39E8C017FA98753FEF1CBD1 0xb2 ISZERO 0x47 0x4d 0x46 0xa5 0xbd 0xd4 PUSH12 0x3DB3756C6578706572696D65 PUSH15 0x74616CF50037000000000000000000 ",
				"sourceMap": "703:380:5:-;;;;;;;;;-1:-1:-1;;;703:380:5;;;;;;;;;;;;;;;;;;1297:280:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1297:280:0;;;;;;;;;;;769:312:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;769:312:5;;;;;;;;;;;;;;;;;;;;;;;;;1297:280:0;1438:41;1455:4;1461:6;1469:9;;1438:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1438:16:0;;-1:-1:-1;;;;;1438:41:0:i;:::-;1493:27;;;;;;;;;;;;;;;;;;1417:113;;;;;;-1:-1:-1;;;;;1417:113:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1540:9:0;:15;;;;;;;;;;;-1:-1:-1;;;;;1540:23:0;;;;;;;;;;:30;;-1:-1:-1;;1540:30:0;1566:4;1540:30;;;1297:280::o;769:312:5:-;925:12;963:87;993:4;1011:6;1031:9;963:16;:87::i;:::-;953:97;769:312;-1:-1:-1;;;;769:312:5:o;1942:5431:0:-;2094:12;2336:27;2459:7;2476:9;2495;2514:17;2277:1;2257:9;:16;:21;;2292:24;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2292:24:0;;;2236:90;;;;;;;-1:-1:-1;;;;;2236:90:0;;;;;;;;;;;2386:9;2396:1;2386:12;;;;;;;;;;;;;;;-1:-1:-1;;;2386:12:0;;-1:-1:-1;;;2386:12:0;-1:-1:-1;;;2380:19:0;;2366:34;;;;;;;;;;2336:64;-1:-1:-1;2880:21:0;2863:13;:38;;;;;;;;;2859:4041;;;3038:33;;-1:-1:-1;;;;;3038:33:0;;;;;;;;2859:4041;3352:21;3335:13;:38;;;;;;;;;3331:3569;;;3414:16;;3453:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3453:24:0;;;;;3434:1;3414:21;3389:102;;;;-1:-1:-1;;;;;3389:102:0;;;;;;;;;;-1:-1:-1;3515:5:0;;-1:-1:-1;3534:14:0;;3331:3569;4137:20;4120:13;:37;;;;;;;;;4116:2784;;;4198:16;;4237:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4237:24:0;;;;;4218:1;4198:21;4173:102;;;;-1:-1:-1;;;;;4173:102:0;;;;;;;;;;-1:-1:-1;;;;;;4299:20:0;;4309:10;4299:20;;-1:-1:-1;4333:14:0;;4116:2784;4424:23;4407:13;:40;;;;;;;;;4403:2497;;;4488:16;;4528:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4528:24:0;;;;;4508:2;4488:22;4463:103;;;;-1:-1:-1;;;;;4463:103:0;;;;;;;;;;;4590:9;4600:1;4590:12;;;;;;;;;;;;;;-1:-1:-1;;;4590:12:0;;;;;;4584:19;;-1:-1:-1;4621:25:0;4633:9;4644:1;4621:11;:25::i;:::-;4617:29;;4664:26;4676:9;4687:2;4664:11;:26::i;:::-;4743:51;;;;;;;;;;;;;;;;;;;;;;;4716:149;;4743:51;4716:149;;;;;;;;4660:30;;-1:-1:-1;4716:149:0;;;;4812:1;;4831;;4660:30;;4716:149;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4716:149:0;;-1:-1:-1;;4716:149:0;;-1:-1:-1;;;;;4889:19:0;;;;;;;;-1:-1:-1;4716:149:0;-1:-1:-1;4922:14:0;;-1:-1:-1;4922:14:0;4403:2497;5009:20;4992:13;:37;;;;;;;;;4988:1912;;;5070:16;;5110:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5110:24:0;;;;;5090:2;5070:22;5045:103;;;;-1:-1:-1;;;;;5045:103:0;;;;;;;;;;;5172:9;5182:1;5172:12;;;;;;;;;;;;;;-1:-1:-1;;;5172:12:0;;;;;;5166:19;;-1:-1:-1;5203:25:0;5215:9;5226:1;5203:11;:25::i;:::-;5199:29;;5246:26;5258:9;5269:2;5246:11;:26::i;:::-;5242:30;;5298:24;5308:4;5314:1;5317;5320;5298:24;;;;;;;;;;;;;;;;;;;4988:1912;5958:20;5941:13;:37;;;;;;;;;5937:963;;;6019:16;;6059:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6059:24:0;;;;;6039:2;6019:22;5994:103;;;;-1:-1:-1;;;;;5994:103:0;;;;;;;;;;;6121:9;6131:1;6121:12;;;;;;;;;;;;;;-1:-1:-1;;;6121:12:0;;;;;;6115:19;;-1:-1:-1;6152:25:0;6164:9;6175:1;6152:11;:25::i;:::-;6148:29;;6195:26;6207:9;6218:2;6195:11;:26::i;:::-;6274:53;;;;;;;;;;;;;;;;;;;;;;;6247:151;;6274:53;6247:151;;;;;;;;6191:30;;-1:-1:-1;6247:151:0;;;;6345:1;;6364;;6191:30;;6247:151;;5937:963;6557:22;6540:13;:39;;;;;;;;;6536:364;;;6605:49;;-1:-1:-1;;;;;6605:49:0;;-1:-1:-1;;;;;6605:32:0;;;;;:49;;6638:4;;6644:9;;6605:49;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6605:49:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6605:49:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6605:49:0;;;;;;;;;6595:59;-1:-1:-1;6668:14:0;;6536:364;6789:23;6772:13;:40;;;;;;;;;6768:132;;;6838:9;:15;;;;;;;;;;;-1:-1:-1;;;;;6838:23:0;;;;;;;;;;;;;-1:-1:-1;6875:14:0;;6768:132;7329:37;;-1:-1:-1;;;;;7329:37:0;;;;;;;;1942:5431;;;;;;;;;;;:::o;4956:472:6:-;5077:14;5140:5;5148:2;5140:10;5128:1;:8;:22;;5164;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5164:22:6;;;5107:89;;;;;;;-1:-1:-1;;;;;5107:89:6;;;;;;;;;;-1:-1:-1;;5277:2:6;5375:13;;;;;5369:20;5268:11;;;4956:472;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;130:116;;205:36;233:6;227:13;205:36;;253:118;;320:46;358:6;345:20;320:46;;392:335;;;499:4;487:17;;483:27;-1:-1;473:2;;524:1;521;514:12;473:2;-1:-1;544:20;;-1:-1;;;;;573:30;;570:2;;;616:1;613;606:12;570:2;650:4;642:6;638:17;626:29;;700:3;693;685:6;681:16;671:8;667:31;664:40;661:2;;;717:1;714;707:12;661:2;466:261;;;;;;736:440;;830:4;818:17;;814:27;-1:-1;804:2;;855:1;852;845:12;804:2;892:6;879:20;914:64;929:48;970:6;929:48;;;914:64;;;905:73;;998:6;991:5;984:21;1034:4;1026:6;1022:17;1067:4;1060:5;1056:16;1102:3;1093:6;1088:3;1084:16;1081:25;1078:2;;;1119:1;1116;1109:12;1078:2;1129:41;1163:6;1158:3;1153;1129:41;;;797:379;;;;;;;;1184:257;;1296:2;1284:9;1275:7;1271:23;1267:32;1264:2;;;1312:1;1309;1302:12;1264:2;1347:1;1364:61;1417:7;1397:9;1364:61;;1448:615;;;;;1605:2;1593:9;1584:7;1580:23;1576:32;1573:2;;;1621:1;1618;1611:12;1573:2;1656:1;1673:53;1718:7;1698:9;1673:53;;;1663:63;;1635:97;1763:2;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;;;1771:63;;1742:98;1899:2;1888:9;1884:18;1871:32;-1:-1;;;;;1915:6;1912:30;1909:2;;;1955:1;1952;1945:12;1909:2;1983:64;2039:7;2030:6;2019:9;2015:22;1983:64;;;1567:496;;;;-1:-1;1965:82;-1:-1;;;;1567:496;2070:595;;;;2217:2;2205:9;2196:7;2192:23;2188:32;2185:2;;;2233:1;2230;2223:12;2185:2;2268:1;2285:53;2330:7;2310:9;2285:53;;;2275:63;;2247:97;2375:2;2393:53;2438:7;2429:6;2418:9;2414:22;2393:53;;;2383:63;;2354:98;2511:2;2500:9;2496:18;2483:32;-1:-1;;;;;2527:6;2524:30;2521:2;;;2567:1;2564;2557:12;2521:2;2587:62;2641:7;2632:6;2621:9;2617:22;2587:62;;;2577:72;;2462:193;2179:486;;;;;;2672:101;2739:28;2761:5;2739:28;;;2734:3;2727:41;2721:52;;;2780:110;2853:31;2878:5;2853:31;;2897:297;;2997:38;3029:5;2997:38;;;3052:6;3047:3;3040:19;3064:63;3120:6;3113:4;3108:3;3104:14;3097:4;3090:5;3086:16;3064:63;;;3159:29;3181:6;3159:29;;;3139:50;;;3152:4;3139:50;;2977:217;-1:-1;;;2977:217;3501:296;3656:2;3644:15;;3693:66;3688:2;3679:12;;3672:88;3788:2;3779:12;;3637:160;3806:296;3961:2;3949:15;;-1:-1;;;;;3993:2;3984:12;;3977:88;4093:2;4084:12;;3942:160;4110:104;4179:29;4202:5;4179:29;;4221:181;4323:2;4308:18;;4337:55;4312:9;4365:6;4337:55;;4409:378;4563:2;4548:18;;4577:61;4552:9;4611:6;4577:61;;;4686:9;4680:4;4676:20;4671:2;4660:9;4656:18;4649:48;4711:66;4772:4;4763:6;4711:66;;4794:489;4982:3;4967:19;;4997:61;4971:9;5031:6;4997:61;;;5069:58;5123:2;5112:9;5108:18;5099:6;5069:58;;;5138:62;5196:2;5185:9;5181:18;5172:6;5138:62;;;5211;5269:2;5258:9;5254:18;5245:6;5211:62;;;4953:330;;;;;;;;5290:273;5414:2;5428:47;;;5399:18;;5489:64;5399:18;5539:6;5489:64;;5570:387;5751:2;5765:47;;;5736:18;;5826:121;5736:18;5826:121;;5964:387;6145:2;6159:47;;;6130:18;;6220:121;6130:18;6220:121;;6358:256;6420:2;6414:9;6446:17;;;-1:-1;;;;;6506:34;;6542:22;;;6503:62;6500:2;;;6578:1;6575;6568:12;6500:2;6594;6587:22;6398:216;;-1:-1;6398:216;6621:258;;-1:-1;;;;;6756:6;6753:30;6750:2;;;6796:1;6793;6786:12;6750:2;-1:-1;6869:4;6840;6817:17;;;;-1:-1;;6813:33;6859:15;;6687:192;6886:91;6960:12;;6944:33;7079:92;7152:13;7145:21;;7128:43;7178:79;7247:5;7230:27;7264:88;7342:4;7331:16;;7314:38;7359:128;-1:-1;;;;;7428:54;;7411:76;7680:145;7761:6;7756:3;7751;7738:30;-1:-1;7817:1;7799:16;;7792:27;7731:94;7834:268;7899:1;7906:101;7920:6;7917:1;7914:13;7906:101;;;7987:11;;;7981:18;7968:11;;;7961:39;7942:2;7935:10;7906:101;;;8022:6;8019:1;8016:13;8013:2;;;8087:1;8078:6;8073:3;8069:16;8062:27;8013:2;7883:219;;;;;8110:97;8198:2;8178:14;-1:-1;;8174:28;;8158:49"
>>>>>>> 947f222f... Style audit for proxies + libmem + libbytes
			}
		}
	},
	"sources": {
		"current/protocol/Exchange/MixinSignatureValidator.sol": {
			"id": 0
		},
<<<<<<< HEAD
<<<<<<< HEAD
		"current/protocol/Exchange/MixinTransactions.sol": {
			"id": 1
		},
		"current/protocol/Exchange/interfaces/ISignatureValidator.sol": {
			"id": 2
		},
		"current/protocol/Exchange/interfaces/ITransactions.sol": {
			"id": 3
		},
		"current/protocol/Exchange/interfaces/IValidator.sol": {
			"id": 4
		},
		"current/protocol/Exchange/interfaces/IWallet.sol": {
			"id": 5
		},
		"current/protocol/Exchange/libs/LibExchangeErrors.sol": {
			"id": 6
		},
		"current/protocol/Exchange/mixins/MSignatureValidator.sol": {
			"id": 7
		},
		"current/protocol/Exchange/mixins/MTransactions.sol": {
			"id": 8
		},
		"current/test/TestSignatureValidator/TestSignatureValidator.sol": {
			"id": 9
		},
		"current/utils/LibBytes/LibBytes.sol": {
			"id": 10
		}
	},
	"sourceCodes": {
		"current/protocol/Exchange/MixinSignatureValidator.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\nimport \"./mixins/MSignatureValidator.sol\";\nimport \"./mixins/MTransactions.sol\";\nimport \"./interfaces/IWallet.sol\";\nimport \"./interfaces/IValidator.sol\";\nimport \"./libs/LibExchangeErrors.sol\";\nimport \"../../utils/LibBytes/LibBytes.sol\";\n\ncontract MixinSignatureValidator is\n    LibBytes,\n    LibExchangeErrors,\n    MSignatureValidator,\n    MTransactions\n{\n\n    // Mapping of hash => signer => signed\n    mapping (bytes32 => mapping (address => bool)) public preSigned;\n\n    // Mapping of signer => validator => approved\n    mapping (address => mapping (address => bool)) public allowedValidators;\n\n    /// @dev Approves a hash on-chain using any valid signature type.\n    ///      After presigning a hash, the preSign signature type will become valid for that hash and signer.\n    /// @param signer Address that should have signed the given hash.\n    /// @param signature Proof that the hash has been signed by signer.\n    function preSign(\n        bytes32 hash,\n        address signer,\n        bytes signature\n    )\n        external\n    {\n        require(\n            isValidSignature(hash, signer, signature),\n            SIGNATURE_VALIDATION_FAILED\n        );\n        preSigned[hash][signer] = true;\n    }\n\n    /// @dev Approves/unnapproves a Validator contract to verify signatures on signer's behalf.\n    /// @param validator Address of Validator contract.\n    /// @param approval Approval or disapproval of  Validator contract.\n    function setSignatureValidatorApproval(\n        address validator,\n        bool approval\n    )\n        external\n    {\n        address signer = getCurrentContextAddress();\n        allowedValidators[signer][validator] = approval;\n    }\n\n    /// @dev Verifies that a hash has been signed by the given signer.\n    /// @param hash Any 32 byte hash.\n    /// @param signer Address that should have signed the given hash.\n    /// @param signature Proof that the hash has been signed by signer.\n    /// @return True if the address recovered from the provided signature matches the input signer address.\n    function isValidSignature(\n        bytes32 hash,\n        address signer,\n        bytes memory signature\n    )\n        internal\n        view\n        returns (bool isValid)\n    {\n        // TODO: Domain separation: make hash depend on role. (Taker sig should not be valid as maker sig, etc.)\n        require(\n            signature.length >= 1,\n            INVALID_SIGNATURE_LENGTH\n        );\n\n        // Pop last byte off of signature byte array.\n        SignatureType signatureType = SignatureType(uint8(popByte(signature)));\n\n        // Variables are not scoped in Solidity.\n        uint8 v;\n        bytes32 r;\n        bytes32 s;\n        address recovered;\n\n        // Always illegal signature.\n        // This is always an implicit option since a signer can create a\n        // signature array with invalid type or length. We may as well make\n        // it an explicit option. This aids testing and analysis. It is\n        // also the initialization value for the enum type.\n        if (signatureType == SignatureType.Illegal) {\n            revert(ILLEGAL_SIGNATURE_TYPE);\n\n        // Always invalid signature.\n        // Like Illegal, this is always implicitly available and therefore\n        // offered explicitly. It can be implicitly created by providing\n        // a correctly formatted but incorrect signature.\n        } else if (signatureType == SignatureType.Invalid) {\n            require(\n                signature.length == 0,\n                INVALID_SIGNATURE_LENGTH\n            );\n            isValid = false;\n            return isValid;\n\n        // Signature using EIP712\n        } else if (signatureType == SignatureType.EIP712) {\n            require(\n                signature.length == 65,\n                INVALID_SIGNATURE_LENGTH\n            );\n            v = uint8(signature[0]);\n            r = readBytes32(signature, 1);\n            s = readBytes32(signature, 33);\n            recovered = ecrecover(hash, v, r, s);\n            isValid = signer == recovered;\n            return isValid;\n\n        // Signed using web3.eth_sign\n        } else if (signatureType == SignatureType.EthSign) {\n            require(\n                signature.length == 65,\n                INVALID_SIGNATURE_LENGTH\n            );\n            v = uint8(signature[0]);\n            r = readBytes32(signature, 1);\n            s = readBytes32(signature, 33);\n            recovered = ecrecover(\n                keccak256(\"\\x19Ethereum Signed Message:\\n32\", hash),\n                v,\n                r,\n                s\n            );\n            isValid = signer == recovered;\n            return isValid;\n\n        // Implicitly signed by caller.\n        // The signer has initiated the call. In the case of non-contract\n        // accounts it means the transaction itself was signed.\n        // Example: let's say for a particular operation three signatures\n        // A, B and C are required. To submit the transaction, A and B can\n        // give a signature to C, who can then submit the transaction using\n        // `Caller` for his own signature. Or A and C can sign and B can\n        // submit using `Caller`. Having `Caller` allows this flexibility.\n        } else if (signatureType == SignatureType.Caller) {\n            require(\n                signature.length == 0,\n                INVALID_SIGNATURE_LENGTH\n            );\n            isValid = signer == msg.sender;\n            return isValid;\n\n        // Signature verified by wallet contract.\n        // If used with an order, the maker of the order is the wallet contract.\n        } else if (signatureType == SignatureType.Wallet) {\n            isValid = IWallet(signer).isValidSignature(hash, signature);\n            return isValid;\n\n        // Signature verified by validator contract.\n        // If used with an order, the maker of the order can still be an EOA.\n        // A signature using this type should be encoded as:\n        // | Offset   | Length | Contents                        |\n        // | 0x00     | x      | Signature to validate           |\n        // | 0x00 + x | 20     | Address of validator contract   |\n        // | 0x14 + x | 1      | Signature type is always \"\\x06\" |\n        } else if (signatureType == SignatureType.Validator) {\n            // Pop last 20 bytes off of signature byte array.\n            address validator = popAddress(signature);\n            // Ensure signer has approved validator.\n            if (!allowedValidators[signer][validator]) {\n                return false;\n            }\n            isValid = IValidator(validator).isValidSignature(\n                hash,\n                signer,\n                signature\n            );\n            return isValid;\n\n        // Signer signed hash previously using the preSign function.\n        } else if (signatureType == SignatureType.PreSigned) {\n            isValid = preSigned[hash][signer];\n            return isValid;\n\n        // Signature from Trezor hardware wallet.\n        // It differs from web3.eth_sign in the encoding of message length\n        // (Bitcoin varint encoding vs ascii-decimal, the latter is not\n        // self-terminating which leads to ambiguities).\n        // See also:\n        // https://en.bitcoin.it/wiki/Protocol_documentation#Variable_length_integer\n        // https://github.com/trezor/trezor-mcu/blob/master/firmware/ethereum.c#L602\n        // https://github.com/trezor/trezor-mcu/blob/master/firmware/crypto.c#L36\n        } else if (signatureType == SignatureType.Trezor) {\n            require(\n                signature.length == 65,\n                INVALID_SIGNATURE_LENGTH\n            );\n            v = uint8(signature[0]);\n            r = readBytes32(signature, 1);\n            s = readBytes32(signature, 33);\n            recovered = ecrecover(\n                keccak256(\"\\x19Ethereum Signed Message:\\n\\x41\", hash),\n                v,\n                r,\n                s\n            );\n            isValid = signer == recovered;\n            return isValid;\n\n        // Signer signed hash previously using the preSign function\n        } else if (signatureType == SignatureType.PreSigned) {\n            isValid = preSigned[hash][signer];\n            return isValid;\n        }\n\n        // Anything else is illegal (We do not return false because\n        // the signature may actually be valid, just not in a format\n        // that we currently support. In this case returning false\n        // may lead the caller to incorrectly believe that the\n        // signature was invalid.)\n        revert(UNSUPPORTED_SIGNATURE_TYPE);\n    }\n}\n",
		"current/protocol/Exchange/MixinTransactions.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\npragma solidity ^0.4.24;\n\nimport \"./mixins/MSignatureValidator.sol\";\nimport \"./mixins/MTransactions.sol\";\nimport \"./libs/LibExchangeErrors.sol\";\n\ncontract MixinTransactions is\n    LibExchangeErrors,\n    MSignatureValidator,\n    MTransactions\n{\n\n    // Mapping of transaction hash => executed\n    // This prevents transactions from being executed more than once.\n    mapping (bytes32 => bool) public transactions;\n\n    // Address of current transaction signer\n    address public currentContextAddress;\n\n    /// @dev Executes an exchange method call in the context of signer.\n    /// @param salt Arbitrary number to ensure uniqueness of transaction hash.\n    /// @param signer Address of transaction signer.\n    /// @param data AbiV2 encoded calldata.\n    /// @param signature Proof of signer transaction by signer.\n    function executeTransaction(\n        uint256 salt,\n        address signer,\n        bytes data,\n        bytes signature\n    )\n        external\n    {\n        // Prevent reentrancy\n        require(\n            currentContextAddress == address(0),\n            REENTRANCY_NOT_ALLOWED\n        );\n\n        // Calculate transaction hash\n        bytes32 transactionHash = keccak256(\n            address(this),\n            signer,\n            salt,\n            data\n        );\n\n        // Validate transaction has not been executed\n        require(\n            !transactions[transactionHash],\n            DUPLICATE_TRANSACTION_HASH\n        );\n\n        // TODO: is SignatureType.Caller necessary if we make this check?\n        if (signer != msg.sender) {\n            // Validate signature\n            require(\n                isValidSignature(transactionHash, signer, signature),\n                SIGNATURE_VALIDATION_FAILED\n            );\n\n            // Set the current transaction signer\n            currentContextAddress = signer;\n        }\n\n        // Execute transaction\n        transactions[transactionHash] = true;\n        require(\n            address(this).delegatecall(data),\n            TRANSACTION_EXECUTION_FAILED\n        );\n\n        // Reset current transaction signer\n        // TODO: Check if gas is paid when currentContextAddress is already 0.\n        currentContextAddress = address(0);\n    }\n\n    /// @dev The current function will be called in the context of this address (either 0x transaction signer or `msg.sender`).\n    ///      If calling a fill function, this address will represent the taker.\n    ///      If calling a cancel function, this address will represent the maker.\n    /// @return Signer of 0x transaction if entry point is `executeTransaction`.\n    ///         `msg.sender` if entry point is any other function.\n    function getCurrentContextAddress()\n        internal\n        view\n        returns (address)\n    {\n        address contextAddress = currentContextAddress == address(0) ? msg.sender : currentContextAddress;\n        return contextAddress;\n    }\n}\n",
		"current/protocol/Exchange/interfaces/ISignatureValidator.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract ISignatureValidator {\n\n    /// @dev Approves a hash on-chain using any valid signature type.\n    ///      After presigning a hash, the preSign signature type will become valid for that hash and signer.\n    /// @param signer Address that should have signed the given hash.\n    /// @param signature Proof that the hash has been signed by signer.\n    function preSign(\n        bytes32 hash,\n        address signer,\n        bytes signature\n    )\n        external;\n    \n    /// @dev Approves/unnapproves a Validator contract to verify signatures on signer's behalf.\n    /// @param validator Address of Validator contract.\n    /// @param approval Approval or disapproval of  Validator contract.\n    function setSignatureValidatorApproval(\n        address validator,\n        bool approval\n    )\n        external;\n}\n",
		"current/protocol/Exchange/interfaces/ITransactions.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\npragma solidity ^0.4.24;\n\ncontract ITransactions {\n\n    /// @dev Executes an exchange method call in the context of signer.\n    /// @param salt Arbitrary number to ensure uniqueness of transaction hash.\n    /// @param signer Address of transaction signer.\n    /// @param data AbiV2 encoded calldata.\n    /// @param signature Proof of signer transaction by signer.\n    function executeTransaction(\n        uint256 salt,\n        address signer,\n        bytes data,\n        bytes signature)\n        external;\n}\n",
		"current/protocol/Exchange/interfaces/IValidator.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.23;\n\ncontract IValidator {\n\n    /// @dev Verifies that a signature is valid.\n    /// @param hash Message hash that is signed.\n    /// @param signer Address that should have signed the given hash.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    function isValidSignature(\n        bytes32 hash,\n        address signer,\n        bytes signature\n    )\n        external\n        view\n        returns (bool isValid);\n}\n",
		"current/protocol/Exchange/interfaces/IWallet.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract IWallet {\n\n    /// @dev Verifies that a signature is valid.\n    /// @param hash Message hash that is signed.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    function isValidSignature(\n        bytes32 hash,\n        bytes signature\n    )\n        external\n        view\n        returns (bool isValid);\n}\n",
		"current/protocol/Exchange/libs/LibExchangeErrors.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract LibExchangeErrors {\n\n    // Core revert reasons\n    string constant GT_ZERO_AMOUNT_REQUIRED = \"Amount must be greater than 0.\";\n    string constant SIGNATURE_VALIDATION_FAILED = \"Signature validation failed.\";\n    string constant INVALID_SENDER = \"Invalid `msg.sender`.\";\n    string constant INVALID_CONTEXT = \"Function called in an invalid context.\";\n    string constant INVALID_NEW_MAKER_EPOCH = \"Specified salt must be greater than or equal to existing makerEpoch.\";\n\n    // Order revert reasons\n    string constant INVALID_ORDER_TAKER_ASSET_AMOUNT = \"Invalid order taker asset amount: expected a non-zero value.\";\n    string constant INVALID_ORDER_MAKER_ASSET_AMOUNT = \"Invalid order maker asset amount: expected a non-zero value.\";\n\n    // Transaction revert reasons\n    string constant REENTRANCY_NOT_ALLOWED = \"`executeTransaction` is not allowed to call itself recursively.\";\n    string constant DUPLICATE_TRANSACTION_HASH = \"Transaction has already been executed.\";\n    string constant TRANSACTION_EXECUTION_FAILED = \"Transaction execution failed.\";\n\n    // Wrapper revert reasons\n    string constant COMPLETE_FILL_FAILED = \"Desired fill amount could not be completely filled.\";\n    string constant ASSET_DATA_MISMATCH = \"Asset data must be the same for each order.\";\n\n    // Asset proxy dispatcher revert reasons\n    string constant GT_ZERO_LENGTH_REQUIRED = \"Length must be greater than 0.\";\n    string constant OLD_ASSET_PROXY_MISMATCH = \"Old asset proxy does not match asset proxy at given id.\";\n    string constant NEW_ASSET_PROXY_MISMATCH = \"New asset proxy id does not match given id.\";\n\n    // Signature validator revert reasons\n    string constant INVALID_SIGNATURE_LENGTH = \"Invalid signature length.\";\n    string constant ILLEGAL_SIGNATURE_TYPE = \"Illegal signature type.\";\n    string constant UNSUPPORTED_SIGNATURE_TYPE = \"Unsupported signature type.\";\n\n    // Order matching revert reasons\n    string constant ASSET_MISMATCH_MAKER_TAKER = \"Left order maker asset is different from right order taker asset.\";\n    string constant ASSET_MISMATCH_TAKER_MAKER = \"Left order taker asset is different from right order maker asset.\";\n    string constant NEGATIVE_SPREAD = \"Matched orders must have a positive spread.\";\n    string constant MISCALCULATED_TRANSFER_AMOUNTS = \"A miscalculation occurred: the left maker would receive more than the right maker would spend.\";\n    string constant ROUNDING_ERROR_TRANSFER_AMOUNTS = \"A rounding error occurred when calculating transfer amounts for matched orders.\";\n    string constant FAILED_TO_CALCULATE_FILL_RESULTS_FOR_LEFT_ORDER = \"Failed to calculate fill results for left order.\";\n    string constant FAILED_TO_CALCULATE_FILL_RESULTS_FOR_RIGHT_ORDER = \"Failed to calculate fill results for right order.\";\n}\n",
		"current/protocol/Exchange/mixins/MSignatureValidator.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\nimport \"../interfaces/ISignatureValidator.sol\";\n\ncontract MSignatureValidator is\n    ISignatureValidator\n{\n    // Allowed signature types.\n    enum SignatureType {\n        Illegal,    // 0x00, default value\n        Invalid,    // 0x01\n        EIP712,     // 0x02\n        EthSign,    // 0x03\n        Caller,     // 0x04\n        Wallet,     // 0x05\n        Validator,  // 0x06\n        PreSigned,  // 0x07\n        Trezor      // 0x08\n    }\n\n    /// @dev Verifies that a signature is valid.\n    /// @param hash Message hash that is signed.\n    /// @param signer Address of signer.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    function isValidSignature(\n        bytes32 hash,\n        address signer,\n        bytes memory signature\n    )\n        internal\n        view\n        returns (bool isValid);\n}\n",
		"current/protocol/Exchange/mixins/MTransactions.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\npragma solidity ^0.4.24;\n\nimport \"../interfaces/ITransactions.sol\";\n\ncontract MTransactions is\n    ITransactions\n{\n\n    /// @dev The current function will be called in the context of this address (either 0x transaction signer or `msg.sender`).\n    ///      If calling a fill function, this address will represent the taker.\n    ///      If calling a cancel function, this address will represent the maker.\n    /// @return Signer of 0x transaction if entry point is `executeTransaction`.\n    ///         `msg.sender` if entry point is any other function.\n    function getCurrentContextAddress()\n        internal\n        view\n        returns (address);\n}\n",
		"current/test/TestSignatureValidator/TestSignatureValidator.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../../protocol/Exchange/MixinSignatureValidator.sol\";\nimport \"../../protocol/Exchange/MixinTransactions.sol\";\n\ncontract TestSignatureValidator is\n    MixinSignatureValidator,\n    MixinTransactions\n{\n\n    function publicIsValidSignature(\n        bytes32 hash,\n        address signer,\n        bytes memory signature\n    )\n        public\n        view\n        returns (bool isValid)\n    {\n        isValid = isValidSignature(\n            hash,\n            signer,\n            signature\n        );\n        return isValid;\n    }\n}\n",
		"current/utils/LibBytes/LibBytes.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract LibBytes {\n\n    // Revert reasons\n    string constant GT_ZERO_LENGTH_REQUIRED = \"Length must be greater than 0.\";\n    string constant GTE_4_LENGTH_REQUIRED = \"Length must be greater than or equal to 4.\";\n    string constant GTE_20_LENGTH_REQUIRED = \"Length must be greater than or equal to 20.\";\n    string constant GTE_32_LENGTH_REQUIRED = \"Length must be greater than or equal to 32.\";\n    string constant INDEX_OUT_OF_BOUNDS = \"Specified array index is out of bounds.\";\n\n    /// @dev Pops the last byte off of a byte array by modifying its length.\n    /// @param b Byte array that will be modified.\n    /// @return The byte that was popped off.\n    function popByte(bytes memory b)\n        internal\n        pure\n        returns (bytes1 result)\n    {\n        require(\n            b.length > 0,\n            GT_ZERO_LENGTH_REQUIRED\n        );\n\n        // Store last byte.\n        result = b[b.length - 1];\n        \n        assembly {\n            // Decrement length of byte array.\n            let newLen := sub(mload(b), 1)\n            mstore(b, newLen)\n        }\n        return result;\n    }\n\n    /// @dev Pops the last 20 bytes off of a byte array by modifying its length.\n    /// @param b Byte array that will be modified.\n    /// @return The 20 byte address that was popped off.\n    function popAddress(bytes memory b)\n        internal\n        pure\n        returns (address result)\n    {\n        require(\n            b.length >= 20,\n            GTE_20_LENGTH_REQUIRED\n        );\n\n        // Store last 20 bytes.\n        result = readAddress(b, b.length - 20);\n\n        assembly {\n            // Subtract 20 from byte array length.\n            let newLen := sub(mload(b), 20)\n            mstore(b, newLen)\n        }\n        return result;\n    }\n\n    /// @dev Tests equality of two byte arrays.\n    /// @param lhs First byte array to compare.\n    /// @param rhs Second byte array to compare.\n    /// @return True if arrays are the same. False otherwise.\n    function areBytesEqual(\n        bytes memory lhs,\n        bytes memory rhs\n    )\n        internal\n        pure\n        returns (bool equal)\n    {\n        assembly {\n            // Get the number of words occupied by <lhs>\n            let lenFullWords := div(add(mload(lhs), 0x1F), 0x20)\n\n            // Add 1 to the number of words, to account for the length field\n            lenFullWords := add(lenFullWords, 0x1)\n\n            // Test equality word-by-word.\n            // Terminates early if there is a mismatch.\n            for {let i := 0} lt(i, lenFullWords) {i := add(i, 1)} {\n                let lhsWord := mload(add(lhs, mul(i, 0x20)))\n                let rhsWord := mload(add(rhs, mul(i, 0x20)))\n                equal := eq(lhsWord, rhsWord)\n                if eq(equal, 0) {\n                    // Break\n                    i := lenFullWords\n                }\n            }\n       }\n\n       return equal;\n    }\n\n    /// @dev Reads an address from a position in a byte array.\n    /// @param b Byte array containing an address.\n    /// @param index Index in byte array of address.\n    /// @return address from byte array.\n    function readAddress(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (address result)\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        ); \n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Read address from array memory\n        assembly {\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 20-byte mask to obtain address\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n        return result;\n    }\n\n    /// @dev Writes an address into a specific position in a byte array.\n    /// @param b Byte array to insert address into.\n    /// @param index Index in byte array of address.\n    /// @param input Address to put into byte array.\n    function writeAddress(\n        bytes memory b,\n        uint256 index,\n        address input\n    )\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        ); \n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Store address into array memory\n        assembly {\n            // The address occupies 20 bytes and mstore stores 32 bytes.\n            // First fetch the 32-byte word where we'll be storing the address, then\n            // apply a mask so we have only the bytes in the word that the address will not occupy.\n            // Then combine these bytes with the address and store the 32 bytes back to memory with mstore.\n\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 12-byte mask to obtain extra bytes occupying word of memory where we'll store the address\n            let neighbors := and(mload(add(b, index)), 0xffffffffffffffffffffffff0000000000000000000000000000000000000000)\n\n            // Store the neighbors and address into memory\n            mstore(add(b, index), xor(input, neighbors))\n        }\n    }\n\n    /// @dev Reads a bytes32 value from a position in a byte array.\n    /// @param b Byte array containing a bytes32 value.\n    /// @param index Index in byte array of bytes32 value.\n    /// @return bytes32 value from byte array.\n    function readBytes32(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes32 result)\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            result := mload(add(b, index))\n        }\n        return result;\n    }\n\n    /// @dev Writes a bytes32 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input bytes32 to put into byte array.\n    function writeBytes32(\n        bytes memory b,\n        uint256 index,\n        bytes32 input\n    )\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            mstore(add(b, index), input)\n        }\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return uint256 value from byte array.\n    function readUint256(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (uint256 result)\n    {\n        return uint256(readBytes32(b, index));\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input uint256 to put into byte array.\n    function writeUint256(\n        bytes memory b,\n        uint256 index,\n        uint256 input\n    )\n        internal\n        pure\n    {\n        writeBytes32(b, index, bytes32(input));\n    }\n\n    /// @dev Reads the first 4 bytes from a byte array of arbitrary length.\n    /// @param b Byte array to read first 4 bytes from.\n    /// @return First 4 bytes of data.\n    function readFirst4(bytes memory b)\n        internal\n        pure\n        returns (bytes4 result)\n    {\n        require(\n            b.length >= 4,\n            GTE_4_LENGTH_REQUIRED\n        );\n        assembly {\n            result := mload(add(b, 32))\n        }\n        return result;\n    }\n}\n"
	},
	"sourceTreeHashHex": "0x2a113c7a53149259baaee90a9709869a036fcee7dd682706a25a4313e723735d",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.4.24+commit.e67f0147.js",
=======
=======
>>>>>>> 947f222f... Style audit for proxies + libmem + libbytes
		"current/protocol/Exchange/interfaces/ISignatureValidator.sol": {
			"id": 1
		},
		"current/protocol/Exchange/interfaces/ISigner.sol": {
			"id": 2
		},
		"current/protocol/Exchange/libs/LibExchangeErrors.sol": {
			"id": 3
		},
		"current/protocol/Exchange/mixins/MSignatureValidator.sol": {
			"id": 4
		},
		"current/test/TestSignatureValidator/TestSignatureValidator.sol": {
			"id": 5
		},
		"current/utils/LibBytes/LibBytes.sol": {
			"id": 6
		},
		"current/utils/LibMem/LibMem.sol": {
			"id": 7
		}
	},
	"sourceCodes": {
		"current/protocol/Exchange/MixinSignatureValidator.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\nimport \"./mixins/MSignatureValidator.sol\";\nimport \"./interfaces/ISigner.sol\";\nimport \"./libs/LibExchangeErrors.sol\";\nimport \"../../utils/LibBytes/LibBytes.sol\";\n\ncontract MixinSignatureValidator is\n    LibBytes,\n    LibExchangeErrors,\n    MSignatureValidator\n{\n\n    // Mapping of hash => signer => signed\n    mapping(bytes32 => mapping(address => bool)) preSigned;\n\n    /// @dev Approves a hash on-chain using any valid signature type.\n    ///      After presigning a hash, the preSign signature type will become valid for that hash and signer.\n    /// @param signer Address that should have signed the given hash.\n    /// @param signature Proof that the hash has been signed by signer.\n    function preSign(\n        bytes32 hash,\n        address signer,\n        bytes signature)\n        external\n    {\n        require(\n            isValidSignature(hash, signer, signature),\n            SIGNATURE_VALIDATION_FAILED\n        );\n        preSigned[hash][signer] = true;\n    }\n\n    /// @dev Verifies that a hash has been signed by the given signer.\n    /// @param hash Any 32 byte hash.\n    /// @param signer Address that should have signed the given hash.\n    /// @param signature Proof that the hash has been signed by signer.\n    /// @return True if the address recovered from the provided signature matches the input signer address.\n    function isValidSignature(\n        bytes32 hash,\n        address signer,\n        bytes memory signature)\n        internal\n        view\n        returns (bool isValid)\n    {\n        // TODO: Domain separation: make hash depend on role. (Taker sig should not be valid as maker sig, etc.)\n\n        require(\n            signature.length >= 1,\n            INVALID_SIGNATURE_LENGTH\n        );\n        SignatureType signatureType = SignatureType(uint8(signature[0]));\n\n        // Variables are not scoped in Solidity\n        uint8 v;\n        bytes32 r;\n        bytes32 s;\n        address recovered;\n\n        // Always illegal signature\n        // This is always an implicit option since a signer can create a\n        // signature array with invalid type or length. We may as well make\n        // it an explicit option. This aids testing and analysis. It is\n        // also the initialization value for the enum type.\n        if (signatureType == SignatureType.Illegal) {\n            // NOTE: Reason cannot be assigned to a variable because of https://github.com/ethereum/solidity/issues/4051\n            revert(\"Illegal signature type.\");\n\n        // Always invalid signature\n        // Like Illegal, this is always implicitly available and therefore\n        // offered explicitly. It can be implicitly created by providing\n        // a correctly formatted but incorrect signature.\n        } else if (signatureType == SignatureType.Invalid) {\n            require(\n                signature.length == 1,\n                INVALID_SIGNATURE_LENGTH\n            );\n            isValid = false;\n            return isValid;\n\n        // Implicitly signed by caller\n        // The signer has initiated the call. In the case of non-contract\n        // accounts it means the transaction itself was signed.\n        // Example: let's say for a particular operation three signatures\n        // A, B and C are required. To submit the transaction, A and B can\n        // give a signature to C, who can then submit the transaction using\n        // `Caller` for his own signature. Or A and C can sign and B can\n        // submit using `Caller`. Having `Caller` allows this flexibility.\n        } else if (signatureType == SignatureType.Caller) {\n            require(\n                signature.length == 1,\n                INVALID_SIGNATURE_LENGTH\n            );\n            isValid = signer == msg.sender;\n            return isValid;\n\n        // Signed using web3.eth_sign\n        } else if (signatureType == SignatureType.Ecrecover) {\n            require(\n                signature.length == 66,\n                INVALID_SIGNATURE_LENGTH\n            );\n            v = uint8(signature[1]);\n            r = readBytes32(signature, 2);\n            s = readBytes32(signature, 34);\n            recovered = ecrecover(\n                keccak256(\"\\x19Ethereum Signed Message:\\n32\", hash),\n                v,\n                r,\n                s\n            );\n            isValid = signer == recovered;\n            return isValid;\n\n        // Signature using EIP712\n        } else if (signatureType == SignatureType.EIP712) {\n            require(\n                signature.length == 66,\n                INVALID_SIGNATURE_LENGTH\n            );\n            v = uint8(signature[1]);\n            r = readBytes32(signature, 2);\n            s = readBytes32(signature, 34);\n            recovered = ecrecover(hash, v, r, s);\n            isValid = signer == recovered;\n            return isValid;\n\n        // Signature from Trezor hardware wallet\n        // It differs from web3.eth_sign in the encoding of message length\n        // (Bitcoin varint encoding vs ascii-decimal, the latter is not\n        // self-terminating which leads to ambiguities).\n        // See also:\n        // https://en.bitcoin.it/wiki/Protocol_documentation#Variable_length_integer\n        // https://github.com/trezor/trezor-mcu/blob/master/firmware/ethereum.c#L602\n        // https://github.com/trezor/trezor-mcu/blob/master/firmware/crypto.c#L36\n        } else if (signatureType == SignatureType.Trezor) {\n            require(\n                signature.length == 66,\n                INVALID_SIGNATURE_LENGTH\n            );\n            v = uint8(signature[1]);\n            r = readBytes32(signature, 2);\n            s = readBytes32(signature, 34);\n            recovered = ecrecover(\n                keccak256(\"\\x19Ethereum Signed Message:\\n\\x41\", hash),\n                v,\n                r,\n                s\n            );\n            isValid = signer == recovered;\n            return isValid;\n\n        // Signature verified by signer contract\n        } else if (signatureType == SignatureType.Contract) {\n            isValid = ISigner(signer).isValidSignature(hash, signature);\n            return isValid;\n\n        // Signer signed hash previously using the preSign function\n        } else if (signatureType == SignatureType.PreSigned) {\n            isValid = preSigned[hash][signer];\n            return isValid;\n        }\n\n        // Anything else is illegal (We do not return false because\n        // the signature may actually be valid, just not in a format\n        // that we currently support. In this case returning false\n        // may lead the caller to incorrectly believe that the\n        // signature was invalid.)\n        // NOTE: Reason cannot be assigned to a variable because of https://github.com/ethereum/solidity/issues/4051\n        revert(\"Unsupported signature type.\");\n    }\n}\n",
		"current/protocol/Exchange/interfaces/ISignatureValidator.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract ISignatureValidator {\n\n    /// @dev Approves a hash on-chain using any valid signature type.\n    ///      After presigning a hash, the preSign signature type will become valid for that hash and signer.\n    /// @param signer Address that should have signed the given hash.\n    /// @param signature Proof that the hash has been signed by signer.\n    function preSign(\n        bytes32 hash,\n        address signer,\n        bytes signature)\n        external;\n}\n",
		"current/protocol/Exchange/interfaces/ISigner.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract ISigner {\n\n    /// @dev Verifies that a signature is valid.\n    /// @param hash Message hash that is signed.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    function isValidSignature(\n        bytes32 hash,\n        bytes signature)\n        external\n        view\n        returns (bool isValid);\n}\n",
		"current/protocol/Exchange/libs/LibExchangeErrors.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract LibExchangeErrors {\n\n    // Core revert reasons\n    string constant GT_ZERO_AMOUNT_REQUIRED = \"Amount must be greater than 0.\";\n    string constant SIGNATURE_VALIDATION_FAILED = \"Signature validation failed.\";\n    string constant INVALID_SENDER = \"Invalid `msg.sender`.\";\n    string constant INVALID_CONTEXT = \"Function called in an invalid context.\";\n    string constant INVALID_NEW_MAKER_EPOCH = \"Specified salt must be greater than or equal to existing makerEpoch.\";\n\n    // Order revert reasons\n    string constant INVALID_ORDER_TAKER_ASSET_AMOUNT = \"Invalid order taker asset amount: expected a non-zero value.\";\n    string constant INVALID_ORDER_MAKER_ASSET_AMOUNT = \"Invalid order maker asset amount: expected a non-zero value.\";\n\n    // Transaction revert reasons\n    string constant DUPLICATE_TRANSACTION_HASH = \"Transaction has already been executed.\";\n    string constant TRANSACTION_EXECUTION_FAILED = \"Transaction execution failed.\";\n\n    // Wrapper revert reasons\n    string constant COMPLETE_FILL_FAILED = \"Desired fill amount could not be completely filled.\";\n    string constant ASSET_DATA_MISMATCH = \"Asset data must be the same for each order.\";\n\n    // Asset proxy dispatcher revert reasons\n    string constant GT_ZERO_LENGTH_REQUIRED = \"Length must be greater than 0.\";\n    string constant OLD_ASSET_PROXY_MISMATCH = \"Old asset proxy does not match asset proxy at given id.\";\n    string constant NEW_ASSET_PROXY_MISMATCH = \"New asset proxy id does not match given id.\";\n\n    // Signature validator revert reasons\n    string constant INVALID_SIGNATURE_LENGTH = \"Invalid signature length.\";\n    string constant ILLEGAL_SIGNATURE_TYPE = \"Illegal signature type.\";\n    string constant UNSUPPORTED_SIGNATURE_TYPE = \"Unsupported signature type.\";\n\n    // Order matching revert reasons\n    string constant ASSET_MISMATCH_MAKER_TAKER = \"Left order maker asset is different from right order taker asset.\";\n    string constant ASSET_MISMATCH_TAKER_MAKER = \"Left order taker asset is different from right order maker asset.\";\n    string constant NEGATIVE_SPREAD = \"Matched orders must have a positive spread.\";\n    string constant MISCALCULATED_TRANSFER_AMOUNTS = \"A miscalculation occurred: the left maker would receive more than the right maker would spend.\";\n    string constant ROUNDING_ERROR_TRANSFER_AMOUNTS = \"A rounding error occurred when calculating transfer amounts for matched orders.\";\n    string constant FAILED_TO_CALCULATE_FILL_RESULTS_FOR_LEFT_ORDER = \"Failed to calculate fill results for left order.\";\n    string constant FAILED_TO_CALCULATE_FILL_RESULTS_FOR_RIGHT_ORDER = \"Failed to calculate fill results for right order.\";\n}\n",
		"current/protocol/Exchange/mixins/MSignatureValidator.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\nimport \"../interfaces/ISignatureValidator.sol\";\n\ncontract MSignatureValidator is\n    ISignatureValidator\n{\n    // Allowed signature types.\n    enum SignatureType {\n        Illegal,  // Default value\n        Invalid,\n        Caller,\n        Ecrecover,\n        EIP712,\n        Trezor,\n        Contract,\n        PreSigned\n    }\n\n    /// @dev Verifies that a signature is valid.\n    /// @param hash Message hash that is signed.\n    /// @param signer Address of signer.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    function isValidSignature(\n        bytes32 hash,\n        address signer,\n        bytes memory signature)\n        internal\n        view\n        returns (bool isValid);\n}\n",
		"current/test/TestSignatureValidator/TestSignatureValidator.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../../protocol/Exchange/MixinSignatureValidator.sol\";\n\ncontract TestSignatureValidator is MixinSignatureValidator {\n\n    function publicIsValidSignature(\n        bytes32 hash,\n        address signer,\n        bytes memory signature)\n        public\n        view\n        returns (bool isValid)\n    {\n        isValid = isValidSignature(\n            hash,\n            signer,\n            signature\n        );\n        return isValid;\n    }\n}\n",
<<<<<<< HEAD
		"current/utils/LibBytes/LibBytes.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\nimport \"../LibMem/LibMem.sol\";\n\ncontract LibBytes is\n    LibMem\n{\n\n    // Revert reasons\n    string constant GTE_20_LENGTH_REQUIRED = \"Length must be greater than or equal to 20.\";\n    string constant GTE_32_LENGTH_REQUIRED = \"Length must be greater than or equal to 32.\";\n\n    /// @dev Tests equality of two byte arrays.\n    /// @param lhs First byte array to compare.\n    /// @param rhs Second byte array to compare.\n    /// @return True if arrays are the same. False otherwise.\n    function areBytesEqual(bytes memory lhs, bytes memory rhs)\n        internal\n        pure\n        returns (bool equal)\n    {\n        assembly {\n            // Get the number of words occupied by <lhs>\n            let lenFullWords := div(add(mload(lhs), 0x1F), 0x20)\n\n            // Add 1 to the number of words, to account for the length field\n            lenFullWords := add(lenFullWords, 0x1)\n\n            // Test equality word-by-word.\n            // Terminates early if there is a mismatch.\n            for {let i := 0} lt(i, lenFullWords) {i := add(i, 1)} {\n                let lhsWord := mload(add(lhs, mul(i, 0x20)))\n                let rhsWord := mload(add(rhs, mul(i, 0x20)))\n                equal := eq(lhsWord, rhsWord)\n                if eq(equal, 0) {\n                    // Break\n                    i := lenFullWords\n                }\n            }\n       }\n\n       return equal;\n    }\n\n    /// @dev Reads an address from a position in a byte array.\n    /// @param b Byte array containing an address.\n    /// @param index Index in byte array of address.\n    /// @return address from byte array.\n    function readAddress(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (address result)\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        );\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Read address from array memory\n        assembly {\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 20-byte mask to obtain address\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n        return result;\n    }\n\n    /// @dev Writes an address into a specific position in a byte array.\n    /// @param b Byte array to insert address into.\n    /// @param index Index in byte array of address.\n    /// @param input Address to put into byte array.\n    function writeAddress(\n        bytes memory b,\n        uint256 index,\n        address input\n    )\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        );\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Store address into array memory\n        assembly {\n            // The address occupies 20 bytes and mstore stores 32 bytes.\n            // First fetch the 32-byte word where we'll be storing the address, then\n            // apply a mask so we have only the bytes in the word that the address will not occupy.\n            // Then combine these bytes with the address and store the 32 bytes back to memory with mstore.\n\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 12-byte mask to obtain extra bytes occupying word of memory where we'll store the address\n            let neighbors := and(mload(add(b, index)), 0xffffffffffffffffffffffff0000000000000000000000000000000000000000)\n\n            // Store the neighbors and address into memory\n            mstore(add(b, index), xor(input, neighbors))\n        }\n    }\n\n    /// @dev Reads a bytes32 value from a position in a byte array.\n    /// @param b Byte array containing a bytes32 value.\n    /// @param index Index in byte array of bytes32 value.\n    /// @return bytes32 value from byte array.\n    function readBytes32(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes32 result)\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            result := mload(add(b, index))\n        }\n        return result;\n    }\n\n    /// @dev Writes a bytes32 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input bytes32 to put into byte array.\n    function writeBytes32(\n        bytes memory b,\n        uint256 index,\n        bytes32 input\n    )\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            mstore(add(b, index), input)\n        }\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return uint256 value from byte array.\n    function readUint256(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (uint256 result)\n    {\n        return uint256(readBytes32(b, index));\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input uint256 to put into byte array.\n    function writeUint256(\n        bytes memory b,\n        uint256 index,\n        uint256 input\n    )\n        internal\n        pure\n    {\n        writeBytes32(b, index, bytes32(input));\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return uint256 value from byte array.\n    function readBytes(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes memory result)\n    {\n        // Read length of nested bytes\n        uint256 nestedBytesLength = readUint256(b, index);\n        index += 32;\n\n        // Assert length of <b> is valid, given\n        // length of nested bytes\n        require(\n            b.length >= index + nestedBytesLength,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Allocate memory and copy value to result\n        result = new bytes(nestedBytesLength);\n        memcpy(\n            getMemAddress(result) + 32, // +32 skips array length\n            getMemAddress(b) + index + 32,\n            nestedBytesLength\n        );\n\n        return result;\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input uint256 to put into byte array.\n    function writeBytes(\n        bytes memory b,\n        uint256 index,\n        bytes memory input\n    )\n        internal\n        pure\n    {\n        // Read length of nested bytes\n        require(\n            b.length >= index + 32 /* 32 bytes to store length */ + input.length,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Copy <input> into <b>\n        memcpy(\n            getMemAddress(b) + index + 32,  // +32 to skip length of <b>\n            getMemAddress(input),           // include length of byte array\n            input.length + 32               // +32 bytes to store length\n        );\n    }\n}\n",
		"current/utils/LibMem/LibMem.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract LibMem {\n\n    function getMemAddress(bytes memory input)\n        internal\n        pure\n        returns (uint256 address_)\n    {\n        assembly {\n            address_ := input\n        }\n        return address_;\n    }\n\n    /// @dev Copies `length` bytes from memory location `source` to `dest`.\n    /// @param dest memory address to copy bytes to\n    /// @param source memory address to copy bytes from\n    /// @param length number of bytes to copy\n    function memcpy(\n        uint256 dest,\n        uint256 source,\n        uint256 length\n    )\n        internal\n        pure\n    {\n        if (length < 32) {\n            // Handle a partial word by reading destination and masking\n            // off the bits we are interested in.\n            // This correctly handles overlap, zero lengths and source == dest\n            assembly {\n                let mask := sub(exp(256, sub(32, length)), 1)\n                let s := and(mload(source), not(mask))\n                let d := and(mload(dest), mask)\n                mstore(dest, or(s, d))\n            }\n        } else {\n            // Skip the O(length) loop when source == dest.\n            if (source == dest) {\n                return;\n            }\n\n            // For large copies we copy whole words at a time. The final\n            // word is aligned to the end of the range (instead of after the\n            // previous) to handle partial words. So a copy will look like this:\n            //\n            //  ####\n            //      ####\n            //          ####\n            //            ####\n            //\n            // We handle overlap in the source and destination range by\n            // changing the copying direction. This prevents us from\n            // overwriting parts of source that we still need to copy.\n            //\n            // This correctly handles source == dest\n            //\n            if (source > dest) {\n                assembly {\n                    // Record the total number of full words to copy\n                    let nwords := div(length, 32)\n\n                    // We subtract 32 from `send` and `dend` because it\n                    // is easier to compare with in the loop, and these\n                    // are also the addresses we need for copying the\n                    // last bytes.\n                    length := sub(length, 32)\n                    let send := add(source, length)\n                    let dend := add(dest, length)\n\n                    // Remember the last 32 bytes of source\n                    // This needs to be done here and not after the loop\n                    // because we may have overwritten the last bytes in\n                    // source already due to overlap.\n                    let last := mload(send)\n\n                    // Copy whole words front to back\n                    for {let i := 0} lt(i, nwords) {i := add(i, 1)} {\n                        mstore(dest, mload(source))\n                        source := add(source, 32)\n                        dest := add(dest, 32)\n                    }\n\n                    // Write the last 32 bytes\n                    mstore(dend, last)\n                }\n            } else {\n                assembly {\n                    // Record the total number of full words to copy\n                    let nwords := div(length, 32)\n\n                    // We subtract 32 from `send` and `dend` because those\n                    // are the starting points when copying a word at the end.\n                    length := sub(length, 32)\n                    let send := add(source, length)\n                    let dend := add(dest, length)\n\n                    // Remember the first 32 bytes of source\n                    // This needs to be done here and not after the loop\n                    // because we may have overwritten the first bytes in\n                    // source already due to overlap.\n                    let first := mload(source)\n\n                    // Copy whole words back to front\n                    for {let i := 0} lt(i, nwords) {i := add(i, 1)} {\n                        mstore(dend, mload(send))\n                        send := sub(send, 32)\n                        dend := sub(dend, 32)\n                    }\n\n                    // Write the first 32 bytes\n                    mstore(dest, first)\n                }\n            }\n        }\n    }\n}\n"
	},
	"sourceTreeHashHex": "0xf49658a5b4e148c557aa25a2884f3351b15b6770ad16ccb9a3a78db0ffbc2d9f",
	"compiler": {
		"name": "solc",
		"version": "0.4.24",
>>>>>>> 5b211b9e... LibMem + TestLibMem + LibAssetProxyDecoder + DummyERC721Receiver
=======
		"current/utils/LibBytes/LibBytes.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\nimport \"../LibMem/LibMem.sol\";\n\ncontract LibBytes is\n    LibMem\n{\n\n    // Revert reasons\n    string constant GTE_20_LENGTH_REQUIRED = \"Length must be greater than or equal to 20.\";\n    string constant GTE_32_LENGTH_REQUIRED = \"Length must be greater than or equal to 32.\";\n\n    /// @dev Tests equality of two byte arrays.\n    /// @param lhs First byte array to compare.\n    /// @param rhs Second byte array to compare.\n    /// @return True if arrays are the same. False otherwise.\n    function areBytesEqual(bytes memory lhs, bytes memory rhs)\n        internal\n        pure\n        returns (bool equal)\n    {\n        assembly {\n            // Get the number of words occupied by <lhs>\n            let lenFullWords := div(add(mload(lhs), 0x1F), 0x20)\n\n            // Add 1 to the number of words, to account for the length field\n            lenFullWords := add(lenFullWords, 0x1)\n\n            // Test equality word-by-word.\n            // Terminates early if there is a mismatch.\n            for {let i := 0} lt(i, lenFullWords) {i := add(i, 1)} {\n                let lhsWord := mload(add(lhs, mul(i, 0x20)))\n                let rhsWord := mload(add(rhs, mul(i, 0x20)))\n                equal := eq(lhsWord, rhsWord)\n                if eq(equal, 0) {\n                    // Break\n                    i := lenFullWords\n                }\n            }\n       }\n\n       return equal;\n    }\n\n    /// @dev Reads an address from a position in a byte array.\n    /// @param b Byte array containing an address.\n    /// @param index Index in byte array of address.\n    /// @return address from byte array.\n    function readAddress(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (address result)\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        );\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Read address from array memory\n        assembly {\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 20-byte mask to obtain address\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n        return result;\n    }\n\n    /// @dev Writes an address into a specific position in a byte array.\n    /// @param b Byte array to insert address into.\n    /// @param index Index in byte array of address.\n    /// @param input Address to put into byte array.\n    function writeAddress(\n        bytes memory b,\n        uint256 index,\n        address input\n    )\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        );\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Store address into array memory\n        assembly {\n            // The address occupies 20 bytes and mstore stores 32 bytes.\n            // First fetch the 32-byte word where we'll be storing the address, then\n            // apply a mask so we have only the bytes in the word that the address will not occupy.\n            // Then combine these bytes with the address and store the 32 bytes back to memory with mstore.\n\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 12-byte mask to obtain extra bytes occupying word of memory where we'll store the address\n            let neighbors := and(mload(add(b, index)), 0xffffffffffffffffffffffff0000000000000000000000000000000000000000)\n\n            // Store the neighbors and address into memory\n            mstore(add(b, index), xor(input, neighbors))\n        }\n    }\n\n    /// @dev Reads a bytes32 value from a position in a byte array.\n    /// @param b Byte array containing a bytes32 value.\n    /// @param index Index in byte array of bytes32 value.\n    /// @return bytes32 value from byte array.\n    function readBytes32(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes32 result)\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            result := mload(add(b, index))\n        }\n        return result;\n    }\n\n    /// @dev Writes a bytes32 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input bytes32 to put into byte array.\n    function writeBytes32(\n        bytes memory b,\n        uint256 index,\n        bytes32 input\n    )\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            mstore(add(b, index), input)\n        }\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return uint256 value from byte array.\n    function readUint256(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (uint256 result)\n    {\n        return uint256(readBytes32(b, index));\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input uint256 to put into byte array.\n    function writeUint256(\n        bytes memory b,\n        uint256 index,\n        uint256 input\n    )\n        internal\n        pure\n    {\n        writeBytes32(b, index, bytes32(input));\n    }\n\n    /// @dev Reads nested bytes from a specific position.\n    /// @param b Byte array containing nested bytes.\n    /// @param index Index of nested bytes.\n    /// @return result Nested bytes.\n    function readBytes(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes memory result)\n    {\n        // Read length of nested bytes\n        uint256 nestedBytesLength = readUint256(b, index);\n        index += 32;\n\n        // Assert length of <b> is valid, given\n        // length of nested bytes\n        require(\n            b.length >= index + nestedBytesLength,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Allocate memory and copy value to result\n        result = new bytes(nestedBytesLength);\n        memcpy(\n            getMemAddress(result) + 32, // +32 skips array length\n            getMemAddress(b) + index + 32,\n            nestedBytesLength\n        );\n\n        return result;\n    }\n\n    /// @dev Inserts bytes at a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input bytes to insert.\n    function writeBytes(\n        bytes memory b,\n        uint256 index,\n        bytes memory input\n    )\n        internal\n        pure\n    {\n        // Read length of nested bytes\n        require(\n            b.length >= index + 32 /* 32 bytes to store length */ + input.length,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Copy <input> into <b>\n        memcpy(\n            getMemAddress(b) + index + 32,  // +32 to skip length of <b>\n            getMemAddress(input),           // include length of byte array\n            input.length + 32               // +32 bytes to store length\n        );\n    }\n}\n",
		"current/utils/LibMem/LibMem.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract LibMem\n{\n\n    /// @dev Gets the memory address for a byte array.\n    /// @param input Byte array to lookup.\n    /// @return memoryAddress Memory address of byte array.\n    function getMemAddress(bytes memory input)\n        internal\n        pure\n        returns (uint256 memoryAddress)\n    {\n        assembly {\n            memoryAddress := input\n        }\n        return memoryAddress;\n    }\n\n    /// @dev Copies `length` bytes from memory location `source` to `dest`.\n    /// @param dest memory address to copy bytes to.\n    /// @param source memory address to copy bytes from.\n    /// @param length number of bytes to copy.\n    function memcpy(\n        uint256 dest,\n        uint256 source,\n        uint256 length\n    )\n        internal\n        pure\n    {\n        if (length < 32) {\n            // Handle a partial word by reading destination and masking\n            // off the bits we are interested in.\n            // This correctly handles overlap, zero lengths and source == dest\n            assembly {\n                let mask := sub(exp(256, sub(32, length)), 1)\n                let s := and(mload(source), not(mask))\n                let d := and(mload(dest), mask)\n                mstore(dest, or(s, d))\n            }\n        } else {\n            // Skip the O(length) loop when source == dest.\n            if (source == dest) {\n                return;\n            }\n\n            // For large copies we copy whole words at a time. The final\n            // word is aligned to the end of the range (instead of after the\n            // previous) to handle partial words. So a copy will look like this:\n            //\n            //  ####\n            //      ####\n            //          ####\n            //            ####\n            //\n            // We handle overlap in the source and destination range by\n            // changing the copying direction. This prevents us from\n            // overwriting parts of source that we still need to copy.\n            //\n            // This correctly handles source == dest\n            //\n            if (source > dest) {\n                assembly {\n                    // Record the total number of full words to copy\n                    let nwords := div(length, 32)\n\n                    // We subtract 32 from `send` and `dend` because it\n                    // is easier to compare with in the loop, and these\n                    // are also the addresses we need for copying the\n                    // last bytes.\n                    length := sub(length, 32)\n                    let send := add(source, length)\n                    let dend := add(dest, length)\n\n                    // Remember the last 32 bytes of source\n                    // This needs to be done here and not after the loop\n                    // because we may have overwritten the last bytes in\n                    // source already due to overlap.\n                    let last := mload(send)\n\n                    // Copy whole words front to back\n                    for {let i := 0} lt(i, nwords) {i := add(i, 1)} {\n                        mstore(dest, mload(source))\n                        source := add(source, 32)\n                        dest := add(dest, 32)\n                    }\n\n                    // Write the last 32 bytes\n                    mstore(dend, last)\n                }\n            } else {\n                assembly {\n                    // Record the total number of full words to copy\n                    let nwords := div(length, 32)\n\n                    // We subtract 32 from `send` and `dend` because those\n                    // are the starting points when copying a word at the end.\n                    length := sub(length, 32)\n                    let send := add(source, length)\n                    let dend := add(dest, length)\n\n                    // Remember the first 32 bytes of source\n                    // This needs to be done here and not after the loop\n                    // because we may have overwritten the first bytes in\n                    // source already due to overlap.\n                    let first := mload(source)\n\n                    // Copy whole words back to front\n                    for {let i := 0} lt(i, nwords) {i := add(i, 1)} {\n                        mstore(dend, mload(send))\n                        send := sub(send, 32)\n                        dend := sub(dend, 32)\n                    }\n\n                    // Write the first 32 bytes\n                    mstore(dest, first)\n                }\n            }\n        }\n    }\n}\n"
	},
	"sourceTreeHashHex": "0x076f3f4866baed901c9b515f23162d080a824df4c7aecbca5ff6ed72bf5373da",
	"compiler": {
		"name": "solc",
		"version": "0.4.24",
>>>>>>> 947f222f... Style audit for proxies + libmem + libbytes
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 0
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap"
					]
				}
			}
		}
	},
	"networks": {}
<<<<<<< HEAD
}
=======
    "schemaVersion": "2.0.0",
    "contractName": "TestSignatureValidator",
    "compilerOutput": {
        "abi": [
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "hash",
                        "type": "bytes32"
                    },
                    {
                        "name": "signer",
                        "type": "address"
                    },
                    {
                        "name": "signature",
                        "type": "bytes"
                    }
                ],
                "name": "preSign",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "hash",
                        "type": "bytes32"
                    },
                    {
                        "name": "signer",
                        "type": "address"
                    },
                    {
                        "name": "signature",
                        "type": "bytes"
                    }
                ],
                "name": "publicIsValidSignature",
                "outputs": [
                    {
                        "name": "isValid",
                        "type": "bool"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            }
        ],
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object":
                    "0x608060405234801561001057600080fd5b50610b8d806100206000396000f3006080604052600436106100325763ffffffff60e060020a6000350416633683ef8e8114610037578063abba41cc14610059575b600080fd5b34801561004357600080fd5b50610057610052366004610867565b61008f565b005b34801561006557600080fd5b506100796100743660046108ce565b61015b565b60405161008691906109e5565b60405180910390f35b6100ca848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843750610170945050505050565b60408051808201909152601c81527f5369676e61747572652076616c69646174696f6e206661696c65642e00000000602082015290151561012a5760405160e560020a62461bcd0281526004016101219190610a51565b60405180910390fd5b505050600091825260208281526040808420600160a060020a0390931684529190529020805460ff19166001179055565b6000610168848484610170565b949350505050565b600080600080600080600187511015604080519081016040528060198152602001600080516020610b348339815191528152509015156101c65760405160e560020a62461bcd0281526004016101219190610a51565b508660008151811015156101d657fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1660078111156101fe57fe5b9450600085600781111561020e57fe5b141561022f5760405160e560020a62461bcd02815260040161012190610a72565b600185600781111561023d57fe5b14156102955786516040805180820190915260198152600080516020610b3483398151915260208201529060011461028b5760405160e560020a62461bcd0281526004016101219190610a51565b50600095506106e7565b60028560078111156102a357fe5b14156103055786516040805180820190915260198152600080516020610b348339815191526020820152906001146102f15760405160e560020a62461bcd0281526004016101219190610a51565b50600160a060020a038816331495506106e7565b600385600781111561031357fe5b14156104405786516040805180820190915260198152600080516020610b348339815191526020820152906042146103615760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561037157fe5b016020015160f860020a90819004810204935061038f8760026106f3565b925061039c8760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c81018c9052815190819003603c01812060008252602091909101918290529193506001916103f891879087908790610a13565b60206040516020810390808403906000865af115801561041c573d6000803e3d6000fd5b5050604051601f190151600160a060020a038a811690821614975091506106e79050565b600485600781111561044e57fe5b14156104fc5786516040805180820190915260198152600080516020610b3483398151915260208201529060421461049c5760405160e560020a62461bcd0281526004016101219190610a51565b508660018151811015156104ac57fe5b016020015160f860020a9081900481020493506104ca8760026106f3565b92506104d78760226106f3565b9150600189858585604051600081526020016040526040516103f89493929190610a13565b600585600781111561050a57fe5b14156105ef5786516040805180820190915260198152600080516020610b348339815191526020820152906042146105585760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561056857fe5b016020015160f860020a9081900481020493506105868760026106f3565b92506105938760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a4100000000008152601b81018c9052815190819003603b01812060008252602091909101918290529193506001916103f891879087908790610a13565b60068560078111156105fd57fe5b141561068d5760405160e160020a630b135d3f028152600160a060020a03891690631626ba7e90610634908c908b906004016109f3565b602060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106869190810190610849565b95506106e7565b600785600781111561069b57fe5b14156106cc57600089815260208181526040808320600160a060020a038c16845290915290205460ff1695506106e7565b60405160e560020a62461bcd02815260040161012190610a62565b50505050509392505050565b60008160200183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f722065815260200160a960020a6a38bab0b6103a37901999170281525090151561076e5760405160e560020a62461bcd0281526004016101219190610a51565b505060208183018101519101905b92915050565b600061078e8235610ae1565b9392505050565b600061078e8251610ad3565b600061078e8235610ad8565b600080601f830184136107bf57600080fd5b5081356001604060020a038111156107d657600080fd5b6020830191508360018202830111156107ee57600080fd5b9250929050565b6000601f8201831361080657600080fd5b813561081961081482610aa8565b610a82565b9150808252602083016020830185838301111561083557600080fd5b610840838284610aed565b50505092915050565b60006020828403121561085b57600080fd5b60006101688484610795565b6000806000806060858703121561087d57600080fd5b600061088987876107a1565b945050602061089a87828801610782565b93505060408501356001604060020a038111156108b657600080fd5b6108c2878288016107ad565b95989497509550505050565b6000806000606084860312156108e357600080fd5b60006108ef86866107a1565b935050602061090086828701610782565b92505060408401356001604060020a0381111561091c57600080fd5b610928868287016107f5565b9150509250925092565b61093b81610ad3565b82525050565b61093b81610ad8565b600061095582610acf565b808452610969816020860160208601610af9565b61097281610b29565b9093016020019392505050565b601b81527f556e737570706f72746564207369676e617475726520747970652e0000000000602082015260400190565b60178152604960020a7624b63632b3b0b61039b4b3b730ba3ab932903a3cb8329702602082015260400190565b61093b81610adb565b6020810161077c8284610932565b60408101610a018285610941565b8181036020830152610168818461094a565b60808101610a218287610941565b610a2e60208301866109dc565b610a3b6040830185610941565b610a486060830184610941565b95945050505050565b6020808252810161078e818461094a565b6020808252810161077c8161097f565b6020808252810161077c816109af565b6040518181016001604060020a0381118282101715610aa057600080fd5b604052919050565b60006001604060020a03821115610abe57600080fd5b506020601f91909101601f19160190565b5190565b151590565b90565b60ff1690565b600160a060020a031690565b82818337506000910152565b60005b83811015610b14578181015183820152602001610afc565b83811115610b23576000848401525b50505050565b601f01601f1916905600496e76616c6964207369676e6174757265206c656e6774682e00000000000000a265627a7a723058201f8a0ad39b2430b39339afffdadc5bde6440f98a5f4cca97f532f219a5aa55576c6578706572696d656e74616cf50037",
                "opcodes":
                    "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x32 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3683EF8E DUP2 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0xABBA41CC EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57 PUSH2 0x52 CALLDATASIZE PUSH1 0x4 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x170 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 DUP5 PUSH2 0x170 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 DUP8 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1FE JUMPI INVALID JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x20E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x295 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x305 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND CALLER EQ SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x440 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x371 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x38F DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x39C DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 DUP2 AND SWAP1 DUP3 AND EQ SWAP8 POP SWAP2 POP PUSH2 0x6E7 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x44E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x4FC JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AC JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x4CA DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x4D7 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP10 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x50A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5EF JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x568 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x586 DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x593 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x5FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0xB135D3F MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x634 SWAP1 DUP13 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x686 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x849 JUMP JUMPDEST SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA62 JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP POP PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 MLOAD PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x819 PUSH2 0x814 DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x840 DUP4 DUP3 DUP5 PUSH2 0xAED JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x889 DUP8 DUP8 PUSH2 0x7A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x89A DUP8 DUP3 DUP9 ADD PUSH2 0x782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP8 DUP3 DUP9 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8EF DUP7 DUP7 PUSH2 0x7A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x900 DUP7 DUP3 DUP8 ADD PUSH2 0x782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x928 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x955 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x969 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH1 0x49 PUSH1 0x2 EXP PUSH23 0x24B63632B3B0B61039B4B3B730BA3AB932903A3CB83297 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x77C DUP3 DUP5 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xA01 DUP3 DUP6 PUSH2 0x941 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x168 DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xA21 DUP3 DUP8 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA2E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0xA3B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA48 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x941 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x78E DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB14 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAFC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB23 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP 0x49 PUSH15 0x76616C6964207369676E6174757265 KECCAK256 PUSH13 0x656E6774682E00000000000000 LOG2 PUSH6 0x627A7A723058 KECCAK256 0x1f DUP11 EXP 0xd3 SWAP12 0x24 ADDRESS 0xb3 SWAP4 CODECOPY 0xaf SELFDESTRUCT 0xda 0xdc JUMPDEST 0xde PUSH5 0x40F98A5F4C 0xca SWAP8 0xf5 ORIGIN CALLCODE NOT 0xa5 0xaa SSTORE JUMPI PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ",
                "sourceMap": "703:380:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;703:380:5;;;;;;;"
            },
            "deployedBytecode": {
                "linkReferences": {},
                "object":
                    "0x6080604052600436106100325763ffffffff60e060020a6000350416633683ef8e8114610037578063abba41cc14610059575b600080fd5b34801561004357600080fd5b50610057610052366004610867565b61008f565b005b34801561006557600080fd5b506100796100743660046108ce565b61015b565b60405161008691906109e5565b60405180910390f35b6100ca848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843750610170945050505050565b60408051808201909152601c81527f5369676e61747572652076616c69646174696f6e206661696c65642e00000000602082015290151561012a5760405160e560020a62461bcd0281526004016101219190610a51565b60405180910390fd5b505050600091825260208281526040808420600160a060020a0390931684529190529020805460ff19166001179055565b6000610168848484610170565b949350505050565b600080600080600080600187511015604080519081016040528060198152602001600080516020610b348339815191528152509015156101c65760405160e560020a62461bcd0281526004016101219190610a51565b508660008151811015156101d657fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1660078111156101fe57fe5b9450600085600781111561020e57fe5b141561022f5760405160e560020a62461bcd02815260040161012190610a72565b600185600781111561023d57fe5b14156102955786516040805180820190915260198152600080516020610b3483398151915260208201529060011461028b5760405160e560020a62461bcd0281526004016101219190610a51565b50600095506106e7565b60028560078111156102a357fe5b14156103055786516040805180820190915260198152600080516020610b348339815191526020820152906001146102f15760405160e560020a62461bcd0281526004016101219190610a51565b50600160a060020a038816331495506106e7565b600385600781111561031357fe5b14156104405786516040805180820190915260198152600080516020610b348339815191526020820152906042146103615760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561037157fe5b016020015160f860020a90819004810204935061038f8760026106f3565b925061039c8760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c81018c9052815190819003603c01812060008252602091909101918290529193506001916103f891879087908790610a13565b60206040516020810390808403906000865af115801561041c573d6000803e3d6000fd5b5050604051601f190151600160a060020a038a811690821614975091506106e79050565b600485600781111561044e57fe5b14156104fc5786516040805180820190915260198152600080516020610b3483398151915260208201529060421461049c5760405160e560020a62461bcd0281526004016101219190610a51565b508660018151811015156104ac57fe5b016020015160f860020a9081900481020493506104ca8760026106f3565b92506104d78760226106f3565b9150600189858585604051600081526020016040526040516103f89493929190610a13565b600585600781111561050a57fe5b14156105ef5786516040805180820190915260198152600080516020610b348339815191526020820152906042146105585760405160e560020a62461bcd0281526004016101219190610a51565b5086600181518110151561056857fe5b016020015160f860020a9081900481020493506105868760026106f3565b92506105938760226106f3565b604080517f19457468657265756d205369676e6564204d6573736167653a0a4100000000008152601b81018c9052815190819003603b01812060008252602091909101918290529193506001916103f891879087908790610a13565b60068560078111156105fd57fe5b141561068d5760405160e160020a630b135d3f028152600160a060020a03891690631626ba7e90610634908c908b906004016109f3565b602060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106869190810190610849565b95506106e7565b600785600781111561069b57fe5b14156106cc57600089815260208181526040808320600160a060020a038c16845290915290205460ff1695506106e7565b60405160e560020a62461bcd02815260040161012190610a62565b50505050509392505050565b60008160200183511015606060405190810160405280602b81526020017f4c656e677468206d7573742062652067726561746572207468616e206f722065815260200160a960020a6a38bab0b6103a37901999170281525090151561076e5760405160e560020a62461bcd0281526004016101219190610a51565b505060208183018101519101905b92915050565b600061078e8235610ae1565b9392505050565b600061078e8251610ad3565b600061078e8235610ad8565b600080601f830184136107bf57600080fd5b5081356001604060020a038111156107d657600080fd5b6020830191508360018202830111156107ee57600080fd5b9250929050565b6000601f8201831361080657600080fd5b813561081961081482610aa8565b610a82565b9150808252602083016020830185838301111561083557600080fd5b610840838284610aed565b50505092915050565b60006020828403121561085b57600080fd5b60006101688484610795565b6000806000806060858703121561087d57600080fd5b600061088987876107a1565b945050602061089a87828801610782565b93505060408501356001604060020a038111156108b657600080fd5b6108c2878288016107ad565b95989497509550505050565b6000806000606084860312156108e357600080fd5b60006108ef86866107a1565b935050602061090086828701610782565b92505060408401356001604060020a0381111561091c57600080fd5b610928868287016107f5565b9150509250925092565b61093b81610ad3565b82525050565b61093b81610ad8565b600061095582610acf565b808452610969816020860160208601610af9565b61097281610b29565b9093016020019392505050565b601b81527f556e737570706f72746564207369676e617475726520747970652e0000000000602082015260400190565b60178152604960020a7624b63632b3b0b61039b4b3b730ba3ab932903a3cb8329702602082015260400190565b61093b81610adb565b6020810161077c8284610932565b60408101610a018285610941565b8181036020830152610168818461094a565b60808101610a218287610941565b610a2e60208301866109dc565b610a3b6040830185610941565b610a486060830184610941565b95945050505050565b6020808252810161078e818461094a565b6020808252810161077c8161097f565b6020808252810161077c816109af565b6040518181016001604060020a0381118282101715610aa057600080fd5b604052919050565b60006001604060020a03821115610abe57600080fd5b506020601f91909101601f19160190565b5190565b151590565b90565b60ff1690565b600160a060020a031690565b82818337506000910152565b60005b83811015610b14578181015183820152602001610afc565b83811115610b23576000848401525b50505050565b601f01601f1916905600496e76616c6964207369676e6174757265206c656e6774682e00000000000000a265627a7a723058201f8a0ad39b2430b39339afffdadc5bde6440f98a5f4cca97f532f219a5aa55576c6578706572696d656e74616cf50037",
                "opcodes":
                    "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x32 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3683EF8E DUP2 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0xABBA41CC EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57 PUSH2 0x52 CALLDATASIZE PUSH1 0x4 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY POP PUSH2 0x170 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH32 0x5369676E61747572652076616C69646174696F6E206661696C65642E00000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 DUP5 PUSH2 0x170 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 DUP8 MLOAD LT ISZERO PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xF8 PUSH1 0x2 EXP MUL PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1FE JUMPI INVALID JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x20E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x295 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x305 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND CALLER EQ SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x440 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x371 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x38F DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x39C DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3C ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 DUP2 AND SWAP1 DUP3 AND EQ SWAP8 POP SWAP2 POP PUSH2 0x6E7 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x44E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x4FC JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4AC JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x4CA DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x4D7 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP10 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x50A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5EF JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x42 EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x568 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 PUSH1 0x2 EXP SWAP1 DUP2 SWAP1 DIV DUP2 MUL DIV SWAP4 POP PUSH2 0x586 DUP8 PUSH1 0x2 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x593 DUP8 PUSH1 0x22 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A410000000000 DUP2 MSTORE PUSH1 0x1B DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x3B ADD DUP2 KECCAK256 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x1 SWAP2 PUSH2 0x3F8 SWAP2 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x5FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE1 PUSH1 0x2 EXP PUSH4 0xB135D3F MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND SWAP1 PUSH4 0x1626BA7E SWAP1 PUSH2 0x634 SWAP1 DUP13 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x686 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x849 JUMP JUMPDEST SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x69B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP6 POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0xA62 JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C656E677468206D7573742062652067726561746572207468616E206F722065 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA9 PUSH1 0x2 EXP PUSH11 0x38BAB0B6103A3790199917 MUL DUP2 MSTORE POP SWAP1 ISZERO ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST POP POP PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD SWAP2 ADD SWAP1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 MLOAD PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78E DUP3 CALLDATALOAD PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F DUP4 ADD DUP5 SGT PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x819 PUSH2 0x814 DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x840 DUP4 DUP3 DUP5 PUSH2 0xAED JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP5 DUP5 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x889 DUP8 DUP8 PUSH2 0x7A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x89A DUP8 DUP3 DUP9 ADD PUSH2 0x782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP8 DUP3 DUP9 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8EF DUP7 DUP7 PUSH2 0x7A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x900 DUP7 DUP3 DUP8 ADD PUSH2 0x782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x928 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x955 DUP3 PUSH2 0xACF JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x969 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH32 0x556E737570706F72746564207369676E617475726520747970652E0000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH1 0x49 PUSH1 0x2 EXP PUSH23 0x24B63632B3B0B61039B4B3B730BA3AB932903A3CB83297 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x77C DUP3 DUP5 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xA01 DUP3 DUP6 PUSH2 0x941 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x168 DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xA21 DUP3 DUP8 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA2E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0xA3B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x941 JUMP JUMPDEST PUSH2 0xA48 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x941 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x78E DUP2 DUP5 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x77C DUP2 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB14 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAFC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB23 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP STOP 0x49 PUSH15 0x76616C6964207369676E6174757265 KECCAK256 PUSH13 0x656E6774682E00000000000000 LOG2 PUSH6 0x627A7A723058 KECCAK256 0x1f DUP11 EXP 0xd3 SWAP12 0x24 ADDRESS 0xb3 SWAP4 CODECOPY 0xaf SELFDESTRUCT 0xda 0xdc JUMPDEST 0xde PUSH5 0x40F98A5F4C 0xca SWAP8 0xf5 ORIGIN CALLCODE NOT 0xa5 0xaa SSTORE JUMPI PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ",
                "sourceMap":
                    "703:380:5:-;;;;;;;;;-1:-1:-1;;;703:380:5;;;;;;;;;;;;;;;;;;1297:280:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1297:280:0;;;;;;;;;;;769:312:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;769:312:5;;;;;;;;;;;;;;;;;;;;;;;;;1297:280:0;1438:41;1455:4;1461:6;1469:9;;1438:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1438:16:0;;-1:-1:-1;;;;;1438:41:0:i;:::-;1493:27;;;;;;;;;;;;;;;;;;1417:113;;;;;;-1:-1:-1;;;;;1417:113:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1540:9:0;:15;;;;;;;;;;;-1:-1:-1;;;;;1540:23:0;;;;;;;;;;:30;;-1:-1:-1;;1540:30:0;1566:4;1540:30;;;1297:280::o;769:312:5:-;925:12;963:87;993:4;1011:6;1031:9;963:16;:87::i;:::-;953:97;769:312;-1:-1:-1;;;;769:312:5:o;1942:5431:0:-;2094:12;2336:27;2459:7;2476:9;2495;2514:17;2277:1;2257:9;:16;:21;;2292:24;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2292:24:0;;;2236:90;;;;;;;-1:-1:-1;;;;;2236:90:0;;;;;;;;;;;2386:9;2396:1;2386:12;;;;;;;;;;;;;;;-1:-1:-1;;;2386:12:0;;-1:-1:-1;;;2386:12:0;-1:-1:-1;;;2380:19:0;;2366:34;;;;;;;;;;2336:64;-1:-1:-1;2880:21:0;2863:13;:38;;;;;;;;;2859:4041;;;3038:33;;-1:-1:-1;;;;;3038:33:0;;;;;;;;2859:4041;3352:21;3335:13;:38;;;;;;;;;3331:3569;;;3414:16;;3453:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3453:24:0;;;;;3434:1;3414:21;3389:102;;;;-1:-1:-1;;;;;3389:102:0;;;;;;;;;;-1:-1:-1;3515:5:0;;-1:-1:-1;3534:14:0;;3331:3569;4137:20;4120:13;:37;;;;;;;;;4116:2784;;;4198:16;;4237:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4237:24:0;;;;;4218:1;4198:21;4173:102;;;;-1:-1:-1;;;;;4173:102:0;;;;;;;;;;-1:-1:-1;;;;;;4299:20:0;;4309:10;4299:20;;-1:-1:-1;4333:14:0;;4116:2784;4424:23;4407:13;:40;;;;;;;;;4403:2497;;;4488:16;;4528:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4528:24:0;;;;;4508:2;4488:22;4463:103;;;;-1:-1:-1;;;;;4463:103:0;;;;;;;;;;;4590:9;4600:1;4590:12;;;;;;;;;;;;;;-1:-1:-1;;;4590:12:0;;;;;;4584:19;;-1:-1:-1;4621:25:0;4633:9;4644:1;4621:11;:25::i;:::-;4617:29;;4664:26;4676:9;4687:2;4664:11;:26::i;:::-;4743:51;;;;;;;;;;;;;;;;;;;;;;;4716:149;;4743:51;4716:149;;;;;;;;4660:30;;-1:-1:-1;4716:149:0;;;;4812:1;;4831;;4660:30;;4716:149;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4716:149:0;;-1:-1:-1;;4716:149:0;;-1:-1:-1;;;;;4889:19:0;;;;;;;;-1:-1:-1;4716:149:0;-1:-1:-1;4922:14:0;;-1:-1:-1;4922:14:0;4403:2497;5009:20;4992:13;:37;;;;;;;;;4988:1912;;;5070:16;;5110:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5110:24:0;;;;;5090:2;5070:22;5045:103;;;;-1:-1:-1;;;;;5045:103:0;;;;;;;;;;;5172:9;5182:1;5172:12;;;;;;;;;;;;;;-1:-1:-1;;;5172:12:0;;;;;;5166:19;;-1:-1:-1;5203:25:0;5215:9;5226:1;5203:11;:25::i;:::-;5199:29;;5246:26;5258:9;5269:2;5246:11;:26::i;:::-;5242:30;;5298:24;5308:4;5314:1;5317;5320;5298:24;;;;;;;;;;;;;;;;;;;4988:1912;5958:20;5941:13;:37;;;;;;;;;5937:963;;;6019:16;;6059:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6059:24:0;;;;;6039:2;6019:22;5994:103;;;;-1:-1:-1;;;;;5994:103:0;;;;;;;;;;;6121:9;6131:1;6121:12;;;;;;;;;;;;;;-1:-1:-1;;;6121:12:0;;;;;;6115:19;;-1:-1:-1;6152:25:0;6164:9;6175:1;6152:11;:25::i;:::-;6148:29;;6195:26;6207:9;6218:2;6195:11;:26::i;:::-;6274:53;;;;;;;;;;;;;;;;;;;;;;;6247:151;;6274:53;6247:151;;;;;;;;6191:30;;-1:-1:-1;6247:151:0;;;;6345:1;;6364;;6191:30;;6247:151;;5937:963;6557:22;6540:13;:39;;;;;;;;;6536:364;;;6605:49;;-1:-1:-1;;;;;6605:49:0;;-1:-1:-1;;;;;6605:32:0;;;;;:49;;6638:4;;6644:9;;6605:49;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6605:49:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6605:49:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6605:49:0;;;;;;;;;6595:59;-1:-1:-1;6668:14:0;;6536:364;6789:23;6772:13;:40;;;;;;;;;6768:132;;;6838:9;:15;;;;;;;;;;;-1:-1:-1;;;;;6838:23:0;;;;;;;;;;;;;-1:-1:-1;6875:14:0;;6768:132;7329:37;;-1:-1:-1;;;;;7329:37:0;;;;;;;;1942:5431;;;;;;;;;;;:::o;4956:472:6:-;5077:14;5140:5;5148:2;5140:10;5128:1;:8;:22;;5164;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5164:22:6;;;5107:89;;;;;;;-1:-1:-1;;;;;5107:89:6;;;;;;;;;;-1:-1:-1;;5277:2:6;5375:13;;;;;5369:20;5268:11;;;4956:472;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;130:116;;205:36;233:6;227:13;205:36;;253:118;;320:46;358:6;345:20;320:46;;392:335;;;499:4;487:17;;483:27;-1:-1;473:2;;524:1;521;514:12;473:2;-1:-1;544:20;;-1:-1;;;;;573:30;;570:2;;;616:1;613;606:12;570:2;650:4;642:6;638:17;626:29;;700:3;693;685:6;681:16;671:8;667:31;664:40;661:2;;;717:1;714;707:12;661:2;466:261;;;;;;736:440;;830:4;818:17;;814:27;-1:-1;804:2;;855:1;852;845:12;804:2;892:6;879:20;914:64;929:48;970:6;929:48;;;914:64;;;905:73;;998:6;991:5;984:21;1034:4;1026:6;1022:17;1067:4;1060:5;1056:16;1102:3;1093:6;1088:3;1084:16;1081:25;1078:2;;;1119:1;1116;1109:12;1078:2;1129:41;1163:6;1158:3;1153;1129:41;;;797:379;;;;;;;;1184:257;;1296:2;1284:9;1275:7;1271:23;1267:32;1264:2;;;1312:1;1309;1302:12;1264:2;1347:1;1364:61;1417:7;1397:9;1364:61;;1448:615;;;;;1605:2;1593:9;1584:7;1580:23;1576:32;1573:2;;;1621:1;1618;1611:12;1573:2;1656:1;1673:53;1718:7;1698:9;1673:53;;;1663:63;;1635:97;1763:2;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;;;1771:63;;1742:98;1899:2;1888:9;1884:18;1871:32;-1:-1;;;;;1915:6;1912:30;1909:2;;;1955:1;1952;1945:12;1909:2;1983:64;2039:7;2030:6;2019:9;2015:22;1983:64;;;1567:496;;;;-1:-1;1965:82;-1:-1;;;;1567:496;2070:595;;;;2217:2;2205:9;2196:7;2192:23;2188:32;2185:2;;;2233:1;2230;2223:12;2185:2;2268:1;2285:53;2330:7;2310:9;2285:53;;;2275:63;;2247:97;2375:2;2393:53;2438:7;2429:6;2418:9;2414:22;2393:53;;;2383:63;;2354:98;2511:2;2500:9;2496:18;2483:32;-1:-1;;;;;2527:6;2524:30;2521:2;;;2567:1;2564;2557:12;2521:2;2587:62;2641:7;2632:6;2621:9;2617:22;2587:62;;;2577:72;;2462:193;2179:486;;;;;;2672:101;2739:28;2761:5;2739:28;;;2734:3;2727:41;2721:52;;;2780:110;2853:31;2878:5;2853:31;;2897:297;;2997:38;3029:5;2997:38;;;3052:6;3047:3;3040:19;3064:63;3120:6;3113:4;3108:3;3104:14;3097:4;3090:5;3086:16;3064:63;;;3159:29;3181:6;3159:29;;;3139:50;;;3152:4;3139:50;;2977:217;-1:-1;;;2977:217;3501:296;3656:2;3644:15;;3693:66;3688:2;3679:12;;3672:88;3788:2;3779:12;;3637:160;3806:296;3961:2;3949:15;;-1:-1;;;;;3993:2;3984:12;;3977:88;4093:2;4084:12;;3942:160;4110:104;4179:29;4202:5;4179:29;;4221:181;4323:2;4308:18;;4337:55;4312:9;4365:6;4337:55;;4409:378;4563:2;4548:18;;4577:61;4552:9;4611:6;4577:61;;;4686:9;4680:4;4676:20;4671:2;4660:9;4656:18;4649:48;4711:66;4772:4;4763:6;4711:66;;4794:489;4982:3;4967:19;;4997:61;4971:9;5031:6;4997:61;;;5069:58;5123:2;5112:9;5108:18;5099:6;5069:58;;;5138:62;5196:2;5185:9;5181:18;5172:6;5138:62;;;5211;5269:2;5258:9;5254:18;5245:6;5211:62;;;4953:330;;;;;;;;5290:273;5414:2;5428:47;;;5399:18;;5489:64;5399:18;5539:6;5489:64;;5570:387;5751:2;5765:47;;;5736:18;;5826:121;5736:18;5826:121;;5964:387;6145:2;6159:47;;;6130:18;;6220:121;6130:18;6220:121;;6358:256;6420:2;6414:9;6446:17;;;-1:-1;;;;;6506:34;;6542:22;;;6503:62;6500:2;;;6578:1;6575;6568:12;6500:2;6594;6587:22;6398:216;;-1:-1;6398:216;6621:258;;-1:-1;;;;;6756:6;6753:30;6750:2;;;6796:1;6793;6786:12;6750:2;-1:-1;6869:4;6840;6817:17;;;;-1:-1;;6813:33;6859:15;;6687:192;6886:91;6960:12;;6944:33;7079:92;7152:13;7145:21;;7128:43;7178:79;7247:5;7230:27;7264:88;7342:4;7331:16;;7314:38;7359:128;-1:-1;;;;;7428:54;;7411:76;7680:145;7761:6;7756:3;7751;7738:30;-1:-1;7817:1;7799:16;;7792:27;7731:94;7834:268;7899:1;7906:101;7920:6;7917:1;7914:13;7906:101;;;7987:11;;;7981:18;7968:11;;;7961:39;7942:2;7935:10;7906:101;;;8022:6;8019:1;8016:13;8013:2;;;8087:1;8078:6;8073:3;8069:16;8062:27;8013:2;7883:219;;;;;8110:97;8198:2;8178:14;-1:-1;;8174:28;;8158:49"
            }
        }
    },
    "sources": {
        "current/protocol/Exchange/MixinSignatureValidator.sol": {
            "id": 0
        },
        "current/protocol/Exchange/interfaces/ISignatureValidator.sol": {
            "id": 1
        },
        "current/protocol/Exchange/interfaces/ISigner.sol": {
            "id": 2
        },
        "current/protocol/Exchange/libs/LibExchangeErrors.sol": {
            "id": 3
        },
        "current/protocol/Exchange/mixins/MSignatureValidator.sol": {
            "id": 4
        },
        "current/test/TestSignatureValidator/TestSignatureValidator.sol": {
            "id": 5
        },
        "current/utils/LibBytes/LibBytes.sol": {
            "id": 6
        },
        "current/utils/LibMem/LibMem.sol": {
            "id": 7
        }
    },
    "sourceCodes": {
        "current/protocol/Exchange/MixinSignatureValidator.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\nimport \"./mixins/MSignatureValidator.sol\";\nimport \"./interfaces/ISigner.sol\";\nimport \"./libs/LibExchangeErrors.sol\";\nimport \"../../utils/LibBytes/LibBytes.sol\";\n\ncontract MixinSignatureValidator is\n    LibBytes,\n    LibExchangeErrors,\n    MSignatureValidator\n{\n\n    // Mapping of hash => signer => signed\n    mapping(bytes32 => mapping(address => bool)) preSigned;\n\n    /// @dev Approves a hash on-chain using any valid signature type.\n    ///      After presigning a hash, the preSign signature type will become valid for that hash and signer.\n    /// @param signer Address that should have signed the given hash.\n    /// @param signature Proof that the hash has been signed by signer.\n    function preSign(\n        bytes32 hash,\n        address signer,\n        bytes signature)\n        external\n    {\n        require(\n            isValidSignature(hash, signer, signature),\n            SIGNATURE_VALIDATION_FAILED\n        );\n        preSigned[hash][signer] = true;\n    }\n\n    /// @dev Verifies that a hash has been signed by the given signer.\n    /// @param hash Any 32 byte hash.\n    /// @param signer Address that should have signed the given hash.\n    /// @param signature Proof that the hash has been signed by signer.\n    /// @return True if the address recovered from the provided signature matches the input signer address.\n    function isValidSignature(\n        bytes32 hash,\n        address signer,\n        bytes memory signature)\n        internal\n        view\n        returns (bool isValid)\n    {\n        // TODO: Domain separation: make hash depend on role. (Taker sig should not be valid as maker sig, etc.)\n\n        require(\n            signature.length >= 1,\n            INVALID_SIGNATURE_LENGTH\n        );\n        SignatureType signatureType = SignatureType(uint8(signature[0]));\n\n        // Variables are not scoped in Solidity\n        uint8 v;\n        bytes32 r;\n        bytes32 s;\n        address recovered;\n\n        // Always illegal signature\n        // This is always an implicit option since a signer can create a\n        // signature array with invalid type or length. We may as well make\n        // it an explicit option. This aids testing and analysis. It is\n        // also the initialization value for the enum type.\n        if (signatureType == SignatureType.Illegal) {\n            // NOTE: Reason cannot be assigned to a variable because of https://github.com/ethereum/solidity/issues/4051\n            revert(\"Illegal signature type.\");\n\n        // Always invalid signature\n        // Like Illegal, this is always implicitly available and therefore\n        // offered explicitly. It can be implicitly created by providing\n        // a correctly formatted but incorrect signature.\n        } else if (signatureType == SignatureType.Invalid) {\n            require(\n                signature.length == 1,\n                INVALID_SIGNATURE_LENGTH\n            );\n            isValid = false;\n            return isValid;\n\n        // Implicitly signed by caller\n        // The signer has initiated the call. In the case of non-contract\n        // accounts it means the transaction itself was signed.\n        // Example: let's say for a particular operation three signatures\n        // A, B and C are required. To submit the transaction, A and B can\n        // give a signature to C, who can then submit the transaction using\n        // `Caller` for his own signature. Or A and C can sign and B can\n        // submit using `Caller`. Having `Caller` allows this flexibility.\n        } else if (signatureType == SignatureType.Caller) {\n            require(\n                signature.length == 1,\n                INVALID_SIGNATURE_LENGTH\n            );\n            isValid = signer == msg.sender;\n            return isValid;\n\n        // Signed using web3.eth_sign\n        } else if (signatureType == SignatureType.Ecrecover) {\n            require(\n                signature.length == 66,\n                INVALID_SIGNATURE_LENGTH\n            );\n            v = uint8(signature[1]);\n            r = readBytes32(signature, 2);\n            s = readBytes32(signature, 34);\n            recovered = ecrecover(\n                keccak256(\"\\x19Ethereum Signed Message:\\n32\", hash),\n                v,\n                r,\n                s\n            );\n            isValid = signer == recovered;\n            return isValid;\n\n        // Signature using EIP712\n        } else if (signatureType == SignatureType.EIP712) {\n            require(\n                signature.length == 66,\n                INVALID_SIGNATURE_LENGTH\n            );\n            v = uint8(signature[1]);\n            r = readBytes32(signature, 2);\n            s = readBytes32(signature, 34);\n            recovered = ecrecover(hash, v, r, s);\n            isValid = signer == recovered;\n            return isValid;\n\n        // Signature from Trezor hardware wallet\n        // It differs from web3.eth_sign in the encoding of message length\n        // (Bitcoin varint encoding vs ascii-decimal, the latter is not\n        // self-terminating which leads to ambiguities).\n        // See also:\n        // https://en.bitcoin.it/wiki/Protocol_documentation#Variable_length_integer\n        // https://github.com/trezor/trezor-mcu/blob/master/firmware/ethereum.c#L602\n        // https://github.com/trezor/trezor-mcu/blob/master/firmware/crypto.c#L36\n        } else if (signatureType == SignatureType.Trezor) {\n            require(\n                signature.length == 66,\n                INVALID_SIGNATURE_LENGTH\n            );\n            v = uint8(signature[1]);\n            r = readBytes32(signature, 2);\n            s = readBytes32(signature, 34);\n            recovered = ecrecover(\n                keccak256(\"\\x19Ethereum Signed Message:\\n\\x41\", hash),\n                v,\n                r,\n                s\n            );\n            isValid = signer == recovered;\n            return isValid;\n\n        // Signature verified by signer contract\n        } else if (signatureType == SignatureType.Contract) {\n            isValid = ISigner(signer).isValidSignature(hash, signature);\n            return isValid;\n\n        // Signer signed hash previously using the preSign function\n        } else if (signatureType == SignatureType.PreSigned) {\n            isValid = preSigned[hash][signer];\n            return isValid;\n        }\n\n        // Anything else is illegal (We do not return false because\n        // the signature may actually be valid, just not in a format\n        // that we currently support. In this case returning false\n        // may lead the caller to incorrectly believe that the\n        // signature was invalid.)\n        // NOTE: Reason cannot be assigned to a variable because of https://github.com/ethereum/solidity/issues/4051\n        revert(\"Unsupported signature type.\");\n    }\n}\n",
        "current/protocol/Exchange/interfaces/ISignatureValidator.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract ISignatureValidator {\n\n    /// @dev Approves a hash on-chain using any valid signature type.\n    ///      After presigning a hash, the preSign signature type will become valid for that hash and signer.\n    /// @param signer Address that should have signed the given hash.\n    /// @param signature Proof that the hash has been signed by signer.\n    function preSign(\n        bytes32 hash,\n        address signer,\n        bytes signature)\n        external;\n}\n",
        "current/protocol/Exchange/interfaces/ISigner.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract ISigner {\n\n    /// @dev Verifies that a signature is valid.\n    /// @param hash Message hash that is signed.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    function isValidSignature(\n        bytes32 hash,\n        bytes signature)\n        external\n        view\n        returns (bool isValid);\n}\n",
        "current/protocol/Exchange/libs/LibExchangeErrors.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract LibExchangeErrors {\n\n    // Core revert reasons\n    string constant GT_ZERO_AMOUNT_REQUIRED = \"Amount must be greater than 0.\";\n    string constant SIGNATURE_VALIDATION_FAILED = \"Signature validation failed.\";\n    string constant INVALID_SENDER = \"Invalid `msg.sender`.\";\n    string constant INVALID_CONTEXT = \"Function called in an invalid context.\";\n    string constant INVALID_NEW_MAKER_EPOCH = \"Specified salt must be greater than or equal to existing makerEpoch.\";\n\n    // Order revert reasons\n    string constant INVALID_ORDER_TAKER_ASSET_AMOUNT = \"Invalid order taker asset amount: expected a non-zero value.\";\n    string constant INVALID_ORDER_MAKER_ASSET_AMOUNT = \"Invalid order maker asset amount: expected a non-zero value.\";\n\n    // Transaction revert reasons\n    string constant DUPLICATE_TRANSACTION_HASH = \"Transaction has already been executed.\";\n    string constant TRANSACTION_EXECUTION_FAILED = \"Transaction execution failed.\";\n\n    // Wrapper revert reasons\n    string constant COMPLETE_FILL_FAILED = \"Desired fill amount could not be completely filled.\";\n    string constant ASSET_DATA_MISMATCH = \"Asset data must be the same for each order.\";\n\n    // Asset proxy dispatcher revert reasons\n    string constant GT_ZERO_LENGTH_REQUIRED = \"Length must be greater than 0.\";\n    string constant OLD_ASSET_PROXY_MISMATCH = \"Old asset proxy does not match asset proxy at given id.\";\n    string constant NEW_ASSET_PROXY_MISMATCH = \"New asset proxy id does not match given id.\";\n\n    // Signature validator revert reasons\n    string constant INVALID_SIGNATURE_LENGTH = \"Invalid signature length.\";\n    string constant ILLEGAL_SIGNATURE_TYPE = \"Illegal signature type.\";\n    string constant UNSUPPORTED_SIGNATURE_TYPE = \"Unsupported signature type.\";\n\n    // Order matching revert reasons\n    string constant ASSET_MISMATCH_MAKER_TAKER = \"Left order maker asset is different from right order taker asset.\";\n    string constant ASSET_MISMATCH_TAKER_MAKER = \"Left order taker asset is different from right order maker asset.\";\n    string constant NEGATIVE_SPREAD = \"Matched orders must have a positive spread.\";\n    string constant MISCALCULATED_TRANSFER_AMOUNTS = \"A miscalculation occurred: the left maker would receive more than the right maker would spend.\";\n    string constant ROUNDING_ERROR_TRANSFER_AMOUNTS = \"A rounding error occurred when calculating transfer amounts for matched orders.\";\n    string constant FAILED_TO_CALCULATE_FILL_RESULTS_FOR_LEFT_ORDER = \"Failed to calculate fill results for left order.\";\n    string constant FAILED_TO_CALCULATE_FILL_RESULTS_FOR_RIGHT_ORDER = \"Failed to calculate fill results for right order.\";\n}\n",
        "current/protocol/Exchange/mixins/MSignatureValidator.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\nimport \"../interfaces/ISignatureValidator.sol\";\n\ncontract MSignatureValidator is\n    ISignatureValidator\n{\n    // Allowed signature types.\n    enum SignatureType {\n        Illegal,  // Default value\n        Invalid,\n        Caller,\n        Ecrecover,\n        EIP712,\n        Trezor,\n        Contract,\n        PreSigned\n    }\n\n    /// @dev Verifies that a signature is valid.\n    /// @param hash Message hash that is signed.\n    /// @param signer Address of signer.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    function isValidSignature(\n        bytes32 hash,\n        address signer,\n        bytes memory signature)\n        internal\n        view\n        returns (bool isValid);\n}\n",
        "current/test/TestSignatureValidator/TestSignatureValidator.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../../protocol/Exchange/MixinSignatureValidator.sol\";\n\ncontract TestSignatureValidator is MixinSignatureValidator {\n\n    function publicIsValidSignature(\n        bytes32 hash,\n        address signer,\n        bytes memory signature)\n        public\n        view\n        returns (bool isValid)\n    {\n        isValid = isValidSignature(\n            hash,\n            signer,\n            signature\n        );\n        return isValid;\n    }\n}\n",
        "current/utils/LibBytes/LibBytes.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\nimport \"../LibMem/LibMem.sol\";\n\ncontract LibBytes is\n    LibMem\n{\n\n    // Revert reasons\n    string constant GTE_20_LENGTH_REQUIRED = \"Length must be greater than or equal to 20.\";\n    string constant GTE_32_LENGTH_REQUIRED = \"Length must be greater than or equal to 32.\";\n\n    /// @dev Tests equality of two byte arrays.\n    /// @param lhs First byte array to compare.\n    /// @param rhs Second byte array to compare.\n    /// @return True if arrays are the same. False otherwise.\n    function areBytesEqual(bytes memory lhs, bytes memory rhs)\n        internal\n        pure\n        returns (bool equal)\n    {\n        assembly {\n            // Get the number of words occupied by <lhs>\n            let lenFullWords := div(add(mload(lhs), 0x1F), 0x20)\n\n            // Add 1 to the number of words, to account for the length field\n            lenFullWords := add(lenFullWords, 0x1)\n\n            // Test equality word-by-word.\n            // Terminates early if there is a mismatch.\n            for {let i := 0} lt(i, lenFullWords) {i := add(i, 1)} {\n                let lhsWord := mload(add(lhs, mul(i, 0x20)))\n                let rhsWord := mload(add(rhs, mul(i, 0x20)))\n                equal := eq(lhsWord, rhsWord)\n                if eq(equal, 0) {\n                    // Break\n                    i := lenFullWords\n                }\n            }\n       }\n\n       return equal;\n    }\n\n    /// @dev Reads an address from a position in a byte array.\n    /// @param b Byte array containing an address.\n    /// @param index Index in byte array of address.\n    /// @return address from byte array.\n    function readAddress(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (address result)\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        );\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Read address from array memory\n        assembly {\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 20-byte mask to obtain address\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n        return result;\n    }\n\n    /// @dev Writes an address into a specific position in a byte array.\n    /// @param b Byte array to insert address into.\n    /// @param index Index in byte array of address.\n    /// @param input Address to put into byte array.\n    function writeAddress(\n        bytes memory b,\n        uint256 index,\n        address input\n    )\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 20,  // 20 is length of address\n            GTE_20_LENGTH_REQUIRED\n        );\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Store address into array memory\n        assembly {\n            // The address occupies 20 bytes and mstore stores 32 bytes.\n            // First fetch the 32-byte word where we'll be storing the address, then\n            // apply a mask so we have only the bytes in the word that the address will not occupy.\n            // Then combine these bytes with the address and store the 32 bytes back to memory with mstore.\n\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 12-byte mask to obtain extra bytes occupying word of memory where we'll store the address\n            let neighbors := and(mload(add(b, index)), 0xffffffffffffffffffffffff0000000000000000000000000000000000000000)\n\n            // Store the neighbors and address into memory\n            mstore(add(b, index), xor(input, neighbors))\n        }\n    }\n\n    /// @dev Reads a bytes32 value from a position in a byte array.\n    /// @param b Byte array containing a bytes32 value.\n    /// @param index Index in byte array of bytes32 value.\n    /// @return bytes32 value from byte array.\n    function readBytes32(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes32 result)\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            result := mload(add(b, index))\n        }\n        return result;\n    }\n\n    /// @dev Writes a bytes32 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input bytes32 to put into byte array.\n    function writeBytes32(\n        bytes memory b,\n        uint256 index,\n        bytes32 input\n    )\n        internal\n        pure\n    {\n        require(\n            b.length >= index + 32,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Arrays are prefixed by a 256 bit length parameter\n        index += 32;\n\n        // Read the bytes32 from array memory\n        assembly {\n            mstore(add(b, index), input)\n        }\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return uint256 value from byte array.\n    function readUint256(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (uint256 result)\n    {\n        return uint256(readBytes32(b, index));\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input uint256 to put into byte array.\n    function writeUint256(\n        bytes memory b,\n        uint256 index,\n        uint256 input\n    )\n        internal\n        pure\n    {\n        writeBytes32(b, index, bytes32(input));\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return uint256 value from byte array.\n    function readBytes(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes memory result)\n    {\n        // Read length of nested bytes\n        uint256 nestedBytesLength = readUint256(b, index);\n        index += 32;\n\n        // Assert length of <b> is valid, given\n        // length of nested bytes\n        require(\n            b.length >= index + nestedBytesLength,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Allocate memory and copy value to result\n        result = new bytes(nestedBytesLength);\n        memcpy(\n            getMemAddress(result) + 32, // +32 skips array length\n            getMemAddress(b) + index + 32,\n            nestedBytesLength\n        );\n\n        return result;\n    }\n\n    /// @dev Writes a uint256 into a specific position in a byte array.\n    /// @param b Byte array to insert <input> into.\n    /// @param index Index in byte array of <input>.\n    /// @param input uint256 to put into byte array.\n    function writeBytes(\n        bytes memory b,\n        uint256 index,\n        bytes memory input\n    )\n        internal\n        pure\n    {\n        // Read length of nested bytes\n        require(\n            b.length >= index + 32 /* 32 bytes to store length */ + input.length,\n            GTE_32_LENGTH_REQUIRED\n        );\n\n        // Copy <input> into <b>\n        memcpy(\n            getMemAddress(b) + index + 32,  // +32 to skip length of <b>\n            getMemAddress(input),           // include length of byte array\n            input.length + 32               // +32 bytes to store length\n        );\n    }\n}\n",
        "current/utils/LibMem/LibMem.sol":
            "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.4.24;\n\ncontract LibMem {\n\n    function getMemAddress(bytes memory input)\n        internal\n        pure\n        returns (uint256 address_)\n    {\n        assembly {\n            address_ := input\n        }\n        return address_;\n    }\n\n    /// @dev Copies `length` bytes from memory location `source` to `dest`.\n    /// @param dest memory address to copy bytes to\n    /// @param source memory address to copy bytes from\n    /// @param length number of bytes to copy\n    function memcpy(\n        uint256 dest,\n        uint256 source,\n        uint256 length\n    )\n        internal\n        pure\n    {\n        if (length < 32) {\n            // Handle a partial word by reading destination and masking\n            // off the bits we are interested in.\n            // This correctly handles overlap, zero lengths and source == dest\n            assembly {\n                let mask := sub(exp(256, sub(32, length)), 1)\n                let s := and(mload(source), not(mask))\n                let d := and(mload(dest), mask)\n                mstore(dest, or(s, d))\n            }\n        } else {\n            // Skip the O(length) loop when source == dest.\n            if (source == dest) {\n                return;\n            }\n\n            // For large copies we copy whole words at a time. The final\n            // word is aligned to the end of the range (instead of after the\n            // previous) to handle partial words. So a copy will look like this:\n            //\n            //  ####\n            //      ####\n            //          ####\n            //            ####\n            //\n            // We handle overlap in the source and destination range by\n            // changing the copying direction. This prevents us from\n            // overwriting parts of source that we still need to copy.\n            //\n            // This correctly handles source == dest\n            //\n            if (source > dest) {\n                assembly {\n                    // Record the total number of full words to copy\n                    let nwords := div(length, 32)\n\n                    // We subtract 32 from `send` and `dend` because it\n                    // is easier to compare with in the loop, and these\n                    // are also the addresses we need for copying the\n                    // last bytes.\n                    length := sub(length, 32)\n                    let send := add(source, length)\n                    let dend := add(dest, length)\n\n                    // Remember the last 32 bytes of source\n                    // This needs to be done here and not after the loop\n                    // because we may have overwritten the last bytes in\n                    // source already due to overlap.\n                    let last := mload(send)\n\n                    // Copy whole words front to back\n                    for {let i := 0} lt(i, nwords) {i := add(i, 1)} {\n                        mstore(dest, mload(source))\n                        source := add(source, 32)\n                        dest := add(dest, 32)\n                    }\n\n                    // Write the last 32 bytes\n                    mstore(dend, last)\n                }\n            } else {\n                assembly {\n                    // Record the total number of full words to copy\n                    let nwords := div(length, 32)\n\n                    // We subtract 32 from `send` and `dend` because those\n                    // are the starting points when copying a word at the end.\n                    length := sub(length, 32)\n                    let send := add(source, length)\n                    let dend := add(dest, length)\n\n                    // Remember the first 32 bytes of source\n                    // This needs to be done here and not after the loop\n                    // because we may have overwritten the first bytes in\n                    // source already due to overlap.\n                    let first := mload(source)\n\n                    // Copy whole words back to front\n                    for {let i := 0} lt(i, nwords) {i := add(i, 1)} {\n                        mstore(dend, mload(send))\n                        send := sub(send, 32)\n                        dend := sub(dend, 32)\n                    }\n\n                    // Write the first 32 bytes\n                    mstore(dest, first)\n                }\n            }\n        }\n    }\n}\n"
    },
    "sourceTreeHashHex": "0xf49658a5b4e148c557aa25a2884f3351b15b6770ad16ccb9a3a78db0ffbc2d9f",
    "compiler": {
        "name": "solc",
        "version": "0.4.24",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 0
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            }
        }
    },
    "networks": {}
}
>>>>>>> 04c167c7... Style audit proxies
=======
}
>>>>>>> 947f222f... Style audit for proxies + libmem + libbytes
